var N = null;var searchIndex = {};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of C-style bitmask flags. It can be used for creating typesafe wrappers around C APIs.","items":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N]],"paths":[]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and decoding numbers in either [big-endian or little-endian order].","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",N,N],[4,"LittleEndian","","Defines little-endian serialization.",N,N],[6,"BE","","A type alias for [`BigEndian`].",N,N],[6,"LE","","A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian","","Defines network byte order serialization.",N,N],[6,"NativeEndian","","Defines system native-endian serialization.",N,N],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For `std::io`.)",N,N],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For `std::io`.)",N,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as bytes.",N,N],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,N],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,N],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,N],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,N],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,N],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,N],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,N],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",2,N],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,N],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in u64.",2,N],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,N],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,N],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,N],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,N],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,N],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,N],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,N],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,N],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,N],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,N],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,N],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,N],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,N],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,N],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,N],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,N],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,N],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,N],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,N],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,N],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,N],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,N],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,N],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,N],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,N],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,N],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,N],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,N],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,N],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",2,N],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",2,N],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",2,N],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",2,N],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",2,N],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",2,N],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",2,N],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",2,N],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",2,N],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"read_u16","","",3,N],[11,"read_u32","","",3,N],[11,"read_u64","","",3,N],[11,"read_uint","","",3,N],[11,"write_u16","","",3,N],[11,"write_u32","","",3,N],[11,"write_u64","","",3,N],[11,"write_uint","","",3,N],[11,"read_u16_into","","",3,N],[11,"read_u32_into","","",3,N],[11,"read_u64_into","","",3,N],[11,"write_u16_into","","",3,N],[11,"write_u32_into","","",3,N],[11,"write_u64_into","","",3,N],[11,"from_slice_u16","","",3,N],[11,"from_slice_u32","","",3,N],[11,"from_slice_u64","","",3,N],[11,"from_slice_f32","","",3,N],[11,"from_slice_f64","","",3,N],[11,"read_u16","","",4,N],[11,"read_u32","","",4,N],[11,"read_u64","","",4,N],[11,"read_uint","","",4,N],[11,"write_u16","","",4,N],[11,"write_u32","","",4,N],[11,"write_u64","","",4,N],[11,"write_uint","","",4,N],[11,"read_u16_into","","",4,N],[11,"read_u32_into","","",4,N],[11,"read_u64_into","","",4,N],[11,"write_u16_into","","",4,N],[11,"write_u32_into","","",4,N],[11,"write_u64_into","","",4,N],[11,"from_slice_u16","","",4,N],[11,"from_slice_u32","","",4,N],[11,"from_slice_u64","","",4,N],[11,"from_slice_f32","","",4,N],[11,"from_slice_f64","","",4,N],[11,"cmp","","",3,[[["self"],["bigendian"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"partial_cmp","","",3,[[["self"],["bigendian"]],["option",["ordering"]]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],["option",["ordering"]]]],[11,"default","","",3,[[],["bigendian"]]],[11,"default","","",4,[[],["littleendian"]]],[11,"eq","","",3,[[["self"],["bigendian"]],["bool"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"hash","","",3,N],[11,"hash","","",4,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,[[["self"],["f64"]],["result"]]]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","items":[[14,"cfg_if","cfg_if","",N,N]],"paths":[]};
searchIndex["libc"]={"doc":"Crate docs","items":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group","","",N,N],[12,"gr_name","","",0,N],[12,"gr_passwd","","",0,N],[12,"gr_gid","","",0,N],[12,"gr_mem","","",0,N],[3,"utimbuf","","",N,N],[12,"actime","","",1,N],[12,"modtime","","",1,N],[3,"timeval","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_usec","","",2,N],[3,"timespec","","",N,N],[12,"tv_sec","","",3,N],[12,"tv_nsec","","",3,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",4,N],[12,"rlim_max","","",4,N],[3,"rusage","","",N,N],[12,"ru_utime","","",5,N],[12,"ru_stime","","",5,N],[12,"ru_maxrss","","",5,N],[12,"ru_ixrss","","",5,N],[12,"ru_idrss","","",5,N],[12,"ru_isrss","","",5,N],[12,"ru_minflt","","",5,N],[12,"ru_majflt","","",5,N],[12,"ru_nswap","","",5,N],[12,"ru_inblock","","",5,N],[12,"ru_oublock","","",5,N],[12,"ru_msgsnd","","",5,N],[12,"ru_msgrcv","","",5,N],[12,"ru_nsignals","","",5,N],[12,"ru_nvcsw","","",5,N],[12,"ru_nivcsw","","",5,N],[3,"in_addr","","",N,N],[12,"s_addr","","",6,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",7,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",8,N],[12,"imr_interface","","",8,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",9,N],[12,"ipv6mr_interface","","",9,N],[3,"hostent","","",N,N],[12,"h_name","","",10,N],[12,"h_aliases","","",10,N],[12,"h_addrtype","","",10,N],[12,"h_length","","",10,N],[12,"h_addr_list","","",10,N],[3,"iovec","","",N,N],[12,"iov_base","","",11,N],[12,"iov_len","","",11,N],[3,"pollfd","","",N,N],[12,"fd","","",12,N],[12,"events","","",12,N],[12,"revents","","",12,N],[3,"winsize","","",N,N],[12,"ws_row","","",13,N],[12,"ws_col","","",13,N],[12,"ws_xpixel","","",13,N],[12,"ws_ypixel","","",13,N],[3,"linger","","",N,N],[12,"l_onoff","","",14,N],[12,"l_linger","","",14,N],[3,"sigval","","",N,N],[12,"sival_ptr","","",15,N],[3,"itimerval","","",N,N],[12,"it_interval","","",16,N],[12,"it_value","","",16,N],[3,"tms","","",N,N],[12,"tms_utime","","",17,N],[12,"tms_stime","","",17,N],[12,"tms_cutime","","",17,N],[12,"tms_cstime","","",17,N],[3,"servent","","",N,N],[12,"s_name","","",18,N],[12,"s_aliases","","",18,N],[12,"s_port","","",18,N],[12,"s_proto","","",18,N],[3,"protoent","","",N,N],[12,"p_name","","",19,N],[12,"p_aliases","","",19,N],[12,"p_proto","","",19,N],[3,"sockaddr","","",N,N],[12,"sa_len","","",20,N],[12,"sa_family","","",20,N],[12,"sa_data","","",20,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_len","","",21,N],[12,"sin6_family","","",21,N],[12,"sin6_port","","",21,N],[12,"sin6_flowinfo","","",21,N],[12,"sin6_addr","","",21,N],[12,"sin6_scope_id","","",21,N],[3,"sockaddr_un","","",N,N],[12,"sun_len","","",22,N],[12,"sun_family","","",22,N],[12,"sun_path","","",22,N],[3,"passwd","","",N,N],[12,"pw_name","","",23,N],[12,"pw_passwd","","",23,N],[12,"pw_uid","","",23,N],[12,"pw_gid","","",23,N],[12,"pw_change","","",23,N],[12,"pw_class","","",23,N],[12,"pw_gecos","","",23,N],[12,"pw_dir","","",23,N],[12,"pw_shell","","",23,N],[12,"pw_expire","","",23,N],[12,"pw_fields","","",23,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",24,N],[12,"ifa_name","","",24,N],[12,"ifa_flags","","",24,N],[12,"ifa_addr","","",24,N],[12,"ifa_netmask","","",24,N],[12,"ifa_dstaddr","","",24,N],[12,"ifa_data","","",24,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",25,N],[12,"tm_min","","",25,N],[12,"tm_hour","","",25,N],[12,"tm_mday","","",25,N],[12,"tm_mon","","",25,N],[12,"tm_year","","",25,N],[12,"tm_wday","","",25,N],[12,"tm_yday","","",25,N],[12,"tm_isdst","","",25,N],[12,"tm_gmtoff","","",25,N],[12,"tm_zone","","",25,N],[3,"utsname","","",N,N],[12,"sysname","","",26,N],[12,"nodename","","",26,N],[12,"release","","",26,N],[12,"version","","",26,N],[12,"machine","","",26,N],[3,"msghdr","","",N,N],[12,"msg_name","","",27,N],[12,"msg_namelen","","",27,N],[12,"msg_iov","","",27,N],[12,"msg_iovlen","","",27,N],[12,"msg_control","","",27,N],[12,"msg_controllen","","",27,N],[12,"msg_flags","","",27,N],[3,"cmsghdr","","",N,N],[12,"cmsg_len","","",28,N],[12,"cmsg_level","","",28,N],[12,"cmsg_type","","",28,N],[3,"fsid_t","","",N,N],[3,"if_nameindex","","",N,N],[12,"if_index","","",29,N],[12,"if_name","","",29,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",30,N],[12,"gl_matchc","","",30,N],[12,"gl_offs","","",30,N],[12,"gl_flags","","",30,N],[12,"gl_pathv","","",30,N],[3,"kevent","","",N,N],[12,"ident","","",31,N],[12,"filter","","",31,N],[12,"flags","","",31,N],[12,"fflags","","",31,N],[12,"data","","",31,N],[12,"udata","","",31,N],[3,"sockaddr_storage","","",N,N],[12,"ss_len","","",32,N],[12,"ss_family","","",32,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",33,N],[12,"ai_family","","",33,N],[12,"ai_socktype","","",33,N],[12,"ai_protocol","","",33,N],[12,"ai_addrlen","","",33,N],[12,"ai_canonname","","",33,N],[12,"ai_addr","","",33,N],[12,"ai_next","","",33,N],[3,"sigset_t","","",N,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",34,N],[12,"si_errno","","",34,N],[12,"si_code","","",34,N],[12,"si_pid","","",34,N],[12,"si_uid","","",34,N],[12,"si_status","","",34,N],[12,"si_addr","","",34,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",35,N],[12,"sa_flags","","",35,N],[12,"sa_mask","","",35,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",36,N],[12,"ss_size","","",36,N],[12,"ss_flags","","",36,N],[3,"sched_param","","",N,N],[12,"sched_priority","","",37,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",38,N],[12,"dli_fbase","","",38,N],[12,"dli_sname","","",38,N],[12,"dli_saddr","","",38,N],[3,"sockaddr_in","","",N,N],[12,"sin_len","","",39,N],[12,"sin_family","","",39,N],[12,"sin_port","","",39,N],[12,"sin_addr","","",39,N],[12,"sin_zero","","",39,N],[3,"termios","","",N,N],[12,"c_iflag","","",40,N],[12,"c_oflag","","",40,N],[12,"c_cflag","","",40,N],[12,"c_lflag","","",40,N],[12,"c_cc","","",40,N],[12,"c_ispeed","","",40,N],[12,"c_ospeed","","",40,N],[3,"flock","","",N,N],[12,"l_start","","",41,N],[12,"l_len","","",41,N],[12,"l_pid","","",41,N],[12,"l_type","","",41,N],[12,"l_whence","","",41,N],[12,"l_sysid","","",41,N],[3,"sf_hdtr","","",N,N],[12,"headers","","",42,N],[12,"hdr_cnt","","",42,N],[12,"trailers","","",42,N],[12,"trl_cnt","","",42,N],[3,"lconv","","",N,N],[12,"decimal_point","","",43,N],[12,"thousands_sep","","",43,N],[12,"grouping","","",43,N],[12,"int_curr_symbol","","",43,N],[12,"currency_symbol","","",43,N],[12,"mon_decimal_point","","",43,N],[12,"mon_thousands_sep","","",43,N],[12,"mon_grouping","","",43,N],[12,"positive_sign","","",43,N],[12,"negative_sign","","",43,N],[12,"int_frac_digits","","",43,N],[12,"frac_digits","","",43,N],[12,"p_cs_precedes","","",43,N],[12,"p_sep_by_space","","",43,N],[12,"n_cs_precedes","","",43,N],[12,"n_sep_by_space","","",43,N],[12,"p_sign_posn","","",43,N],[12,"n_sign_posn","","",43,N],[12,"int_p_cs_precedes","","",43,N],[12,"int_n_cs_precedes","","",43,N],[12,"int_p_sep_by_space","","",43,N],[12,"int_n_sep_by_space","","",43,N],[12,"int_p_sign_posn","","",43,N],[12,"int_n_sign_posn","","",43,N],[3,"cmsgcred","","",N,N],[12,"cmcred_pid","","",44,N],[12,"cmcred_uid","","",44,N],[12,"cmcred_euid","","",44,N],[12,"cmcred_gid","","",44,N],[12,"cmcred_ngroups","","",44,N],[12,"cmcred_groups","","",44,N],[3,"rtprio","","",N,N],[12,"type_","","",45,N],[12,"prio","","",45,N],[3,"in6_pktinfo","","",N,N],[12,"ipi6_addr","","",46,N],[12,"ipi6_ifindex","","",46,N],[3,"arphdr","","",N,N],[12,"ar_hrd","","",47,N],[12,"ar_pro","","",47,N],[12,"ar_hln","","",47,N],[12,"ar_pln","","",47,N],[12,"ar_op","","",47,N],[3,"utmpx","","",N,N],[12,"ut_type","","",48,N],[12,"ut_tv","","",48,N],[12,"ut_id","","",48,N],[12,"ut_pid","","",48,N],[12,"ut_user","","",48,N],[12,"ut_line","","",48,N],[12,"ut_host","","",48,N],[12,"__ut_spare","","",48,N],[3,"aiocb","","",N,N],[12,"aio_fildes","","",49,N],[12,"aio_offset","","",49,N],[12,"aio_buf","","",49,N],[12,"aio_nbytes","","",49,N],[12,"aio_lio_opcode","","",49,N],[12,"aio_reqprio","","",49,N],[12,"aio_sigevent","","",49,N],[3,"dirent","","",N,N],[12,"d_fileno","","",50,N],[12,"d_reclen","","",50,N],[12,"d_type","","",50,N],[12,"d_namlen","","",50,N],[12,"d_name","","",50,N],[3,"jail","","",N,N],[12,"version","","",51,N],[12,"path","","",51,N],[12,"hostname","","",51,N],[12,"jailname","","",51,N],[12,"ip4s","","",51,N],[12,"ip6s","","",51,N],[12,"ip4","","",51,N],[12,"ip6","","",51,N],[3,"mq_attr","","",N,N],[12,"mq_flags","","",52,N],[12,"mq_maxmsg","","",52,N],[12,"mq_msgsize","","",52,N],[12,"mq_curmsgs","","",52,N],[3,"sigevent","","",N,N],[12,"sigev_notify","","",53,N],[12,"sigev_signo","","",53,N],[12,"sigev_value","","",53,N],[12,"sigev_notify_thread_id","","",53,N],[3,"statvfs","","",N,N],[12,"f_bavail","","",54,N],[12,"f_bfree","","",54,N],[12,"f_blocks","","",54,N],[12,"f_favail","","",54,N],[12,"f_ffree","","",54,N],[12,"f_files","","",54,N],[12,"f_bsize","","",54,N],[12,"f_flag","","",54,N],[12,"f_frsize","","",54,N],[12,"f_fsid","","",54,N],[12,"f_namemax","","",54,N],[3,"statfs","","",N,N],[12,"f_version","","",55,N],[12,"f_type","","",55,N],[12,"f_flags","","",55,N],[12,"f_bsize","","",55,N],[12,"f_iosize","","",55,N],[12,"f_blocks","","",55,N],[12,"f_bfree","","",55,N],[12,"f_bavail","","",55,N],[12,"f_files","","",55,N],[12,"f_ffree","","",55,N],[12,"f_syncwrites","","",55,N],[12,"f_asyncwrites","","",55,N],[12,"f_syncreads","","",55,N],[12,"f_asyncreads","","",55,N],[12,"f_namemax","","",55,N],[12,"f_owner","","",55,N],[12,"f_fsid","","",55,N],[12,"f_fstypename","","",55,N],[12,"f_mntfromname","","",55,N],[12,"f_mntonname","","",55,N],[3,"_sem","","",N,N],[3,"ipc_perm","","",N,N],[12,"cuid","","",56,N],[12,"cgid","","",56,N],[12,"uid","","",56,N],[12,"gid","","",56,N],[12,"mode","","",56,N],[12,"seq","","",56,N],[12,"key","","",56,N],[3,"msqid_ds","","",N,N],[12,"msg_perm","","",57,N],[12,"msg_cbytes","","",57,N],[12,"msg_qnum","","",57,N],[12,"msg_qbytes","","",57,N],[12,"msg_lspid","","",57,N],[12,"msg_lrpid","","",57,N],[12,"msg_stime","","",57,N],[12,"msg_rtime","","",57,N],[12,"msg_ctime","","",57,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",58,N],[12,"shm_segsz","","",58,N],[12,"shm_lpid","","",58,N],[12,"shm_cpid","","",58,N],[12,"shm_nattch","","",58,N],[12,"shm_atime","","",58,N],[12,"shm_dtime","","",58,N],[12,"shm_ctime","","",58,N],[3,"xucred","","",N,N],[12,"cr_version","","",59,N],[12,"cr_uid","","",59,N],[12,"cr_ngroups","","",59,N],[12,"cr_groups","","",59,N],[3,"sockaddr_dl","","",N,N],[12,"sdl_len","","",60,N],[12,"sdl_family","","",60,N],[12,"sdl_index","","",60,N],[12,"sdl_type","","",60,N],[12,"sdl_nlen","","",60,N],[12,"sdl_alen","","",60,N],[12,"sdl_slen","","",60,N],[12,"sdl_data","","",60,N],[3,"stat","","",N,N],[12,"st_dev","","",61,N],[12,"st_ino","","",61,N],[12,"st_mode","","",61,N],[12,"st_nlink","","",61,N],[12,"st_uid","","",61,N],[12,"st_gid","","",61,N],[12,"st_rdev","","",61,N],[12,"st_atime","","",61,N],[12,"st_atime_nsec","","",61,N],[12,"st_mtime","","",61,N],[12,"st_mtime_nsec","","",61,N],[12,"st_ctime","","",61,N],[12,"st_ctime_nsec","","",61,N],[12,"st_size","","",61,N],[12,"st_blocks","","",61,N],[12,"st_blksize","","",61,N],[12,"st_flags","","",61,N],[12,"st_gen","","",61,N],[12,"st_lspare","","",61,N],[12,"st_birthtime","","",61,N],[12,"st_birthtime_nsec","","",61,N],[4,"DIR","","",N,N],[4,"locale_t","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"timezone","","",N,N],[5,"CMSG_FIRSTHDR","","",N,N],[5,"CMSG_NXTHDR","","",N,N],[5,"CMSG_DATA","","",N,N],[5,"CMSG_SPACE","","",N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",N,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",N,[[["c_int"]],["bool"]]],[5,"QCMD","","",N,[[["c_int"],["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFSIGNALED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSTOPPED","","",N,[[["c_int"]],["bool"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"getchar","","",N,N],[5,"putchar","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strdup","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strcasecmp","","",N,N],[5,"strncasecmp","","",N,N],[5,"strlen","","",N,N],[5,"strnlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"wcstombs","","",N,N],[5,"memchr","","",N,N],[5,"memcmp","","",N,N],[5,"memcpy","","",N,N],[5,"memmove","","",N,N],[5,"memset","","",N,N],[5,"getpwnam","","",N,N],[5,"getpwuid","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"snprintf","","",N,N],[5,"sprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"fdopendir","","",N,N],[5,"readdir","","",N,N],[5,"readdir_r","","",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"openat","","",N,N],[5,"fchmodat","","",N,N],[5,"fchown","","",N,N],[5,"fchownat","","",N,N],[5,"fstatat","","",N,N],[5,"linkat","","",N,N],[5,"mkdirat","","",N,N],[5,"readlinkat","","",N,N],[5,"renameat","","",N,N],[5,"symlinkat","","",N,N],[5,"unlinkat","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"fchdir","","",N,N],[5,"chown","","",N,N],[5,"lchown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execl","","",N,N],[5,"execle","","",N,N],[5,"execlp","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgid","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"seteuid","","",N,N],[5,"setegid","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"tcsetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"killpg","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"truncate","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"getrusage","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"gettimeofday","","",N,N],[5,"times","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_exit","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_init","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_condattr_init","","",N,N],[5,"pthread_condattr_destroy","","",N,N],[5,"pthread_rwlock_init","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_rwlockattr_init","","",N,N],[5,"pthread_rwlockattr_destroy","","",N,N],[5,"strerror_r","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"res_init","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"time","","",N,N],[5,"gmtime","","",N,N],[5,"localtime","","",N,N],[5,"difftime","","",N,N],[5,"mknod","","",N,N],[5,"uname","","",N,N],[5,"gethostname","","",N,N],[5,"getservbyname","","",N,N],[5,"getprotobyname","","",N,N],[5,"getprotobynumber","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"sem_destroy","","",N,N],[5,"sem_wait","","",N,N],[5,"sem_trywait","","",N,N],[5,"sem_post","","",N,N],[5,"sem_init","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"readlink","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"sigprocmask","","",N,N],[5,"sigpending","","",N,N],[5,"timegm","","",N,N],[5,"getsid","","",N,N],[5,"sysconf","","",N,N],[5,"mkfifo","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfmakeraw","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"cfsetspeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcgetsid","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkdtemp","","",N,N],[5,"tmpnam","","",N,N],[5,"openlog","","",N,N],[5,"closelog","","",N,N],[5,"setlogmask","","",N,N],[5,"syslog","","",N,N],[5,"nice","","",N,N],[5,"grantpt","","",N,N],[5,"posix_openpt","","",N,N],[5,"ptsname","","",N,N],[5,"unlockpt","","",N,N],[5,"strcasestr","","",N,N],[5,"getline","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"setgroups","","",N,N],[5,"ioctl","","",N,N],[5,"kqueue","","",N,N],[5,"unmount","","",N,N],[5,"syscall","","",N,N],[5,"getpwent","","",N,N],[5,"setpwent","","",N,N],[5,"endpwent","","",N,N],[5,"setgrent","","",N,N],[5,"endgrent","","",N,N],[5,"getgrent","","",N,N],[5,"getprogname","","",N,N],[5,"setprogname","","",N,N],[5,"getloadavg","","",N,N],[5,"if_nameindex","","",N,N],[5,"if_freenameindex","","",N,N],[5,"getpeereid","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"recvfrom","","",N,N],[5,"mkstemps","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"bind","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"sync","","",N,N],[5,"getgrgid_r","","",N,N],[5,"sigaltstack","","",N,N],[5,"sem_close","","",N,N],[5,"getdtablesize","","",N,N],[5,"getgrnam_r","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"sem_open","","",N,N],[5,"getgrnam","","",N,N],[5,"pthread_cancel","","",N,N],[5,"pthread_kill","","",N,N],[5,"sem_unlink","","",N,N],[5,"daemon","","",N,N],[5,"getpwnam_r","","",N,N],[5,"getpwuid_r","","",N,N],[5,"sigwait","","",N,N],[5,"pthread_atfork","","",N,N],[5,"getgrgid","","",N,N],[5,"popen","","",N,N],[5,"faccessat","","",N,N],[5,"pthread_create","","",N,N],[5,"acct","","",N,N],[5,"accept4","","",N,N],[5,"aio_read","","",N,N],[5,"aio_write","","",N,N],[5,"aio_fsync","","",N,N],[5,"aio_error","","",N,N],[5,"aio_return","","",N,N],[5,"aio_suspend","","",N,N],[5,"aio_cancel","","",N,N],[5,"chflags","","",N,N],[5,"chflagsat","","",N,N],[5,"dirfd","","",N,N],[5,"duplocale","","",N,N],[5,"endutxent","","",N,N],[5,"fchflags","","",N,N],[5,"futimens","","",N,N],[5,"getdomainname","","",N,N],[5,"getgrent_r","","",N,N],[5,"getpwent_r","","",N,N],[5,"getgrouplist","","",N,N],[5,"getnameinfo","","",N,N],[5,"getpriority","","",N,N],[5,"getutxent","","",N,N],[5,"getutxid","","",N,N],[5,"getutxline","","",N,N],[5,"initgroups","","",N,N],[5,"kevent","","",N,N],[5,"lchflags","","",N,N],[5,"lio_listio","","",N,N],[5,"lutimes","","",N,N],[5,"memrchr","","",N,N],[5,"mkfifoat","","",N,N],[5,"mknodat","","",N,N],[5,"mq_close","","",N,N],[5,"mq_getattr","","",N,N],[5,"mq_notify","","",N,N],[5,"mq_open","","",N,N],[5,"mq_receive","","",N,N],[5,"mq_send","","",N,N],[5,"mq_setattr","","",N,N],[5,"mq_timedreceive","","",N,N],[5,"mq_timedsend","","",N,N],[5,"mq_unlink","","",N,N],[5,"mincore","","",N,N],[5,"newlocale","","",N,N],[5,"nl_langinfo_l","","",N,N],[5,"pipe2","","",N,N],[5,"ppoll","","",N,N],[5,"preadv","","",N,N],[5,"pthread_attr_get_np","","",N,N],[5,"pthread_attr_getguardsize","","",N,N],[5,"pthread_attr_getstack","","",N,N],[5,"pthread_condattr_getclock","","",N,N],[5,"pthread_condattr_getpshared","","",N,N],[5,"pthread_condattr_setclock","","",N,N],[5,"pthread_condattr_setpshared","","",N,N],[5,"pthread_mutex_timedlock","","",N,N],[5,"pthread_mutexattr_getpshared","","",N,N],[5,"pthread_mutexattr_setpshared","","",N,N],[5,"pthread_rwlockattr_getpshared","","",N,N],[5,"pthread_rwlockattr_setpshared","","",N,N],[5,"pthread_set_name_np","","",N,N],[5,"ptrace","","",N,N],[5,"pututxline","","",N,N],[5,"pwritev","","",N,N],[5,"querylocale","","",N,N],[5,"rtprio","","",N,N],[5,"sched_getscheduler","","",N,N],[5,"sched_setscheduler","","",N,N],[5,"sem_getvalue","","",N,N],[5,"sem_timedwait","","",N,N],[5,"sendfile","","",N,N],[5,"setdomainname","","",N,N],[5,"sethostname","","",N,N],[5,"setpriority","","",N,N],[5,"setresgid","","",N,N],[5,"setresuid","","",N,N],[5,"settimeofday","","",N,N],[5,"setutxent","","",N,N],[5,"shm_open","","",N,N],[5,"sigtimedwait","","",N,N],[5,"sigwaitinfo","","",N,N],[5,"sysctl","","",N,N],[5,"sysctlbyname","","",N,N],[5,"sysctlnametomib","","",N,N],[5,"uselocale","","",N,N],[5,"utimensat","","",N,N],[5,"openpty","","",N,N],[5,"forkpty","","",N,N],[5,"__error","","",N,N],[5,"mprotect","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"clock_settime","","",N,N],[5,"extattr_delete_fd","","",N,N],[5,"extattr_delete_file","","",N,N],[5,"extattr_delete_link","","",N,N],[5,"extattr_get_fd","","",N,N],[5,"extattr_get_file","","",N,N],[5,"extattr_get_link","","",N,N],[5,"extattr_list_fd","","",N,N],[5,"extattr_list_file","","",N,N],[5,"extattr_list_link","","",N,N],[5,"extattr_set_fd","","",N,N],[5,"extattr_set_file","","",N,N],[5,"extattr_set_link","","",N,N],[5,"jail","","",N,N],[5,"jail_attach","","",N,N],[5,"jail_remove","","",N,N],[5,"jail_get","","",N,N],[5,"jail_set","","",N,N],[5,"fdatasync","","",N,N],[5,"posix_fallocate","","",N,N],[5,"posix_fadvise","","",N,N],[5,"mkostemp","","",N,N],[5,"mkostemps","","",N,N],[5,"getutxuser","","",N,N],[5,"setutxdb","","",N,N],[5,"aio_waitcomplete","","",N,N],[5,"freelocale","","",N,N],[5,"waitid","","",N,N],[5,"ftok","","",N,N],[5,"shmget","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"msgctl","","",N,N],[5,"msgget","","",N,N],[5,"msgrcv","","",N,N],[5,"msgsnd","","",N,N],[5,"cfmakesane","","",N,N],[5,"fexecve","","",N,N],[5,"pdfork","","",N,N],[5,"pdgetpid","","",N,N],[5,"pdkill","","",N,N],[5,"rtprio_thread","","",N,N],[5,"posix_spawn","","",N,N],[5,"posix_spawnp","","",N,N],[5,"posix_spawnattr_init","","",N,N],[5,"posix_spawnattr_destroy","","",N,N],[5,"posix_spawnattr_getsigdefault","","",N,N],[5,"posix_spawnattr_setsigdefault","","",N,N],[5,"posix_spawnattr_getsigmask","","",N,N],[5,"posix_spawnattr_setsigmask","","",N,N],[5,"posix_spawnattr_getflags","","",N,N],[5,"posix_spawnattr_setflags","","",N,N],[5,"posix_spawnattr_getpgroup","","",N,N],[5,"posix_spawnattr_setpgroup","","",N,N],[5,"posix_spawnattr_getschedpolicy","","",N,N],[5,"posix_spawnattr_setschedpolicy","","",N,N],[5,"posix_spawnattr_getschedparam","","",N,N],[5,"posix_spawnattr_setschedparam","","",N,N],[5,"posix_spawn_file_actions_init","","",N,N],[5,"posix_spawn_file_actions_destroy","","",N,N],[5,"posix_spawn_file_actions_addopen","","",N,N],[5,"posix_spawn_file_actions_addclose","","",N,N],[5,"posix_spawn_file_actions_adddup2","","",N,N],[5,"statfs","","",N,N],[5,"fstatfs","","",N,N],[5,"dup3","","",N,N],[5,"extattr_namespace_to_string","","",N,N],[5,"extattr_string_to_namespace","","",N,N],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"wchar_t","","",N,N],[6,"off_t","","",N,N],[6,"useconds_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"socklen_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_t","","",N,N],[6,"nfds_t","","",N,N],[6,"c_char","","",N,N],[6,"dev_t","","",N,N],[6,"mode_t","","",N,N],[6,"pthread_attr_t","","",N,N],[6,"rlim_t","","",N,N],[6,"mqd_t","","",N,N],[6,"pthread_mutex_t","","",N,N],[6,"pthread_mutexattr_t","","",N,N],[6,"pthread_cond_t","","",N,N],[6,"pthread_condattr_t","","",N,N],[6,"pthread_rwlock_t","","",N,N],[6,"pthread_rwlockattr_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"speed_t","","",N,N],[6,"nl_item","","",N,N],[6,"id_t","","",N,N],[6,"fflags_t","","",N,N],[6,"clock_t","","",N,N],[6,"ino_t","","",N,N],[6,"lwpid_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[6,"clockid_t","","",N,N],[6,"sem_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"idtype_t","","",N,N],[6,"key_t","","",N,N],[6,"msglen_t","","",N,N],[6,"msgqnum_t","","",N,N],[6,"posix_spawnattr_t","","",N,N],[6,"posix_spawn_file_actions_t","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[6,"time_t","","",N,N],[6,"suseconds_t","","",N,N],[17,"INT_MIN","","",N,N],[17,"INT_MAX","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_UNKNOWN","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"IFNAMSIZ","","",N,N],[17,"LOG_EMERG","","",N,N],[17,"LOG_ALERT","","",N,N],[17,"LOG_CRIT","","",N,N],[17,"LOG_ERR","","",N,N],[17,"LOG_WARNING","","",N,N],[17,"LOG_NOTICE","","",N,N],[17,"LOG_INFO","","",N,N],[17,"LOG_DEBUG","","",N,N],[17,"LOG_KERN","","",N,N],[17,"LOG_USER","","",N,N],[17,"LOG_MAIL","","",N,N],[17,"LOG_DAEMON","","",N,N],[17,"LOG_AUTH","","",N,N],[17,"LOG_SYSLOG","","",N,N],[17,"LOG_LPR","","",N,N],[17,"LOG_NEWS","","",N,N],[17,"LOG_UUCP","","",N,N],[17,"LOG_LOCAL0","","",N,N],[17,"LOG_LOCAL1","","",N,N],[17,"LOG_LOCAL2","","",N,N],[17,"LOG_LOCAL3","","",N,N],[17,"LOG_LOCAL4","","",N,N],[17,"LOG_LOCAL5","","",N,N],[17,"LOG_LOCAL6","","",N,N],[17,"LOG_LOCAL7","","",N,N],[17,"LOG_PID","","",N,N],[17,"LOG_CONS","","",N,N],[17,"LOG_ODELAY","","",N,N],[17,"LOG_NDELAY","","",N,N],[17,"LOG_NOWAIT","","",N,N],[17,"LOG_PRIMASK","","",N,N],[17,"LOG_FACMASK","","",N,N],[17,"PRIO_PROCESS","","",N,N],[17,"PRIO_PGRP","","",N,N],[17,"PRIO_USER","","",N,N],[17,"PRIO_MIN","","",N,N],[17,"PRIO_MAX","","",N,N],[17,"IPPROTO_ICMP","","",N,N],[17,"IPPROTO_ICMPV6","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_UDP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"INADDR_LOOPBACK","","",N,N],[17,"INADDR_ANY","","",N,N],[17,"INADDR_BROADCAST","","",N,N],[17,"INADDR_NONE","","",N,N],[17,"ARPOP_REQUEST","","",N,N],[17,"ARPOP_REPLY","","",N,N],[17,"ATF_COM","","",N,N],[17,"ATF_PERM","","",N,N],[17,"ATF_PUBL","","",N,N],[17,"ATF_USETRAILERS","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PATH_MAX","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGINFO","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"IP_TOS","","",N,N],[17,"IP_MULTICAST_IF","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IPV6_UNICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_IF","","",N,N],[17,"IPV6_MULTICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"IPTOS_ECN_NOTECT","","",N,N],[17,"IPTOS_ECN_MASK","","",N,N],[17,"IPTOS_ECN_ECT1","","",N,N],[17,"IPTOS_ECN_ECT0","","",N,N],[17,"IPTOS_ECN_CE","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"SCM_RIGHTS","","",N,N],[17,"NCCS","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"O_SHLOCK","","",N,N],[17,"O_EXLOCK","","",N,N],[17,"O_FSYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"F_RDLCK","","",N,N],[17,"F_UNLCK","","",N,N],[17,"F_WRLCK","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"VEOF","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VERASE","","",N,N],[17,"VWERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VREPRINT","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VSUSP","","",N,N],[17,"VDSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VLNEXT","","",N,N],[17,"VDISCARD","","",N,N],[17,"VMIN","","",N,N],[17,"VTIME","","",N,N],[17,"VSTATUS","","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"OPOST","","",N,N],[17,"ONLCR","","",N,N],[17,"OXTABS","","",N,N],[17,"ONOEOT","","",N,N],[17,"CIGNORE","","",N,N],[17,"CSIZE","","",N,N],[17,"CS5","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHO","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"ALTWERASE","","",N,N],[17,"IEXTEN","","",N,N],[17,"EXTPROC","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"NOKERNINFO","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"MDMBUF","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_SELF","","",N,N],[17,"LOG_CRON","","",N,N],[17,"LOG_AUTHPRIV","","",N,N],[17,"LOG_FTP","","",N,N],[17,"LOG_PERROR","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"PIPE_BUF","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"POLLRDNORM","","",N,N],[17,"POLLWRNORM","","",N,N],[17,"POLLRDBAND","","",N,N],[17,"POLLWRBAND","","",N,N],[17,"AIO_LISTIO_MAX","","",N,N],[17,"AIO_CANCELED","","",N,N],[17,"AIO_NOTCANCELED","","",N,N],[17,"AIO_ALLDONE","","",N,N],[17,"LIO_NOP","","",N,N],[17,"LIO_WRITE","","",N,N],[17,"LIO_READ","","",N,N],[17,"LIO_WAIT","","",N,N],[17,"LIO_NOWAIT","","",N,N],[17,"SIGEV_NONE","","",N,N],[17,"SIGEV_SIGNAL","","",N,N],[17,"SIGEV_THREAD","","",N,N],[17,"SIGEV_KEVENT","","",N,N],[17,"CODESET","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"D_MD_ORDER","","",N,N],[17,"ALTMON_1","","",N,N],[17,"ALTMON_2","","",N,N],[17,"ALTMON_3","","",N,N],[17,"ALTMON_4","","",N,N],[17,"ALTMON_5","","",N,N],[17,"ALTMON_6","","",N,N],[17,"ALTMON_7","","",N,N],[17,"ALTMON_8","","",N,N],[17,"ALTMON_9","","",N,N],[17,"ALTMON_10","","",N,N],[17,"ALTMON_11","","",N,N],[17,"ALTMON_12","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"SEEK_DATA","","",N,N],[17,"SEEK_HOLE","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"BUFSIZ","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"TMP_MAX","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_DIRECT","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGEMT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_ANON","","",N,N],[17,"MAP_ANONYMOUS","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EAGAIN","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"EALREADY","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"ENOTSUP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"ELOOP","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"EPROCLIM","","",N,N],[17,"EUSERS","","",N,N],[17,"EDQUOT","","",N,N],[17,"ESTALE","","",N,N],[17,"EREMOTE","","",N,N],[17,"EBADRPC","","",N,N],[17,"ERPCMISMATCH","","",N,N],[17,"EPROGUNAVAIL","","",N,N],[17,"EPROGMISMATCH","","",N,N],[17,"EPROCUNAVAIL","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"EFTYPE","","",N,N],[17,"EAUTH","","",N,N],[17,"ENEEDAUTH","","",N,N],[17,"EIDRM","","",N,N],[17,"ENOMSG","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"ECANCELED","","",N,N],[17,"EILSEQ","","",N,N],[17,"ENOATTR","","",N,N],[17,"EDOOFUS","","",N,N],[17,"EBADMSG","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"ENOLINK","","",N,N],[17,"EPROTO","","",N,N],[17,"POLLSTANDARD","","",N,N],[17,"EAI_AGAIN","","",N,N],[17,"EAI_BADFLAGS","","",N,N],[17,"EAI_FAIL","","",N,N],[17,"EAI_FAMILY","","",N,N],[17,"EAI_MEMORY","","",N,N],[17,"EAI_NONAME","","",N,N],[17,"EAI_SERVICE","","",N,N],[17,"EAI_SOCKTYPE","","",N,N],[17,"EAI_SYSTEM","","",N,N],[17,"EAI_OVERFLOW","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"SIGTRAP","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"PTHREAD_PROCESS_PRIVATE","","",N,N],[17,"PTHREAD_PROCESS_SHARED","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIMIT_SBSIZE","","",N,N],[17,"RLIMIT_VMEM","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_FREE","","",N,N],[17,"MADV_NOSYNC","","",N,N],[17,"MADV_AUTOSYNC","","",N,N],[17,"MADV_NOCORE","","",N,N],[17,"MADV_CORE","","",N,N],[17,"MINCORE_INCORE","","",N,N],[17,"MINCORE_REFERENCED","","",N,N],[17,"MINCORE_MODIFIED","","",N,N],[17,"MINCORE_REFERENCED_OTHER","","",N,N],[17,"MINCORE_MODIFIED_OTHER","","",N,N],[17,"MINCORE_SUPER","","",N,N],[17,"AF_UNSPEC","","",N,N],[17,"AF_LOCAL","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_IMPLINK","","",N,N],[17,"AF_PUP","","",N,N],[17,"AF_CHAOS","","",N,N],[17,"AF_NETBIOS","","",N,N],[17,"AF_ISO","","",N,N],[17,"AF_OSI","","",N,N],[17,"AF_ECMA","","",N,N],[17,"AF_DATAKIT","","",N,N],[17,"AF_CCITT","","",N,N],[17,"AF_SNA","","",N,N],[17,"AF_DECnet","","",N,N],[17,"AF_DLI","","",N,N],[17,"AF_LAT","","",N,N],[17,"AF_HYLINK","","",N,N],[17,"AF_APPLETALK","","",N,N],[17,"AF_ROUTE","","",N,N],[17,"AF_LINK","","",N,N],[17,"pseudo_AF_XTP","","",N,N],[17,"AF_COIP","","",N,N],[17,"AF_CNT","","",N,N],[17,"pseudo_AF_RTIP","","",N,N],[17,"AF_IPX","","",N,N],[17,"AF_SIP","","",N,N],[17,"pseudo_AF_PIP","","",N,N],[17,"AF_ISDN","","",N,N],[17,"AF_E164","","",N,N],[17,"pseudo_AF_KEY","","",N,N],[17,"AF_INET6","","",N,N],[17,"AF_NATM","","",N,N],[17,"AF_ATM","","",N,N],[17,"pseudo_AF_HDRCMPLT","","",N,N],[17,"AF_NETGRAPH","","",N,N],[17,"PF_UNSPEC","","",N,N],[17,"PF_LOCAL","","",N,N],[17,"PF_UNIX","","",N,N],[17,"PF_INET","","",N,N],[17,"PF_IMPLINK","","",N,N],[17,"PF_PUP","","",N,N],[17,"PF_CHAOS","","",N,N],[17,"PF_NETBIOS","","",N,N],[17,"PF_ISO","","",N,N],[17,"PF_OSI","","",N,N],[17,"PF_ECMA","","",N,N],[17,"PF_DATAKIT","","",N,N],[17,"PF_CCITT","","",N,N],[17,"PF_SNA","","",N,N],[17,"PF_DECnet","","",N,N],[17,"PF_DLI","","",N,N],[17,"PF_LAT","","",N,N],[17,"PF_HYLINK","","",N,N],[17,"PF_APPLETALK","","",N,N],[17,"PF_ROUTE","","",N,N],[17,"PF_LINK","","",N,N],[17,"PF_XTP","","",N,N],[17,"PF_COIP","","",N,N],[17,"PF_CNT","","",N,N],[17,"PF_SIP","","",N,N],[17,"PF_IPX","","",N,N],[17,"PF_RTIP","","",N,N],[17,"PF_PIP","","",N,N],[17,"PF_ISDN","","",N,N],[17,"PF_KEY","","",N,N],[17,"PF_INET6","","",N,N],[17,"PF_NATM","","",N,N],[17,"PF_ATM","","",N,N],[17,"PF_NETGRAPH","","",N,N],[17,"PT_TRACE_ME","","",N,N],[17,"PT_READ_I","","",N,N],[17,"PT_READ_D","","",N,N],[17,"PT_WRITE_I","","",N,N],[17,"PT_WRITE_D","","",N,N],[17,"PT_CONTINUE","","",N,N],[17,"PT_KILL","","",N,N],[17,"PT_STEP","","",N,N],[17,"PT_ATTACH","","",N,N],[17,"PT_DETACH","","",N,N],[17,"PT_IO","","",N,N],[17,"SOMAXCONN","","",N,N],[17,"MSG_OOB","","",N,N],[17,"MSG_PEEK","","",N,N],[17,"MSG_DONTROUTE","","",N,N],[17,"MSG_EOR","","",N,N],[17,"MSG_TRUNC","","",N,N],[17,"MSG_CTRUNC","","",N,N],[17,"MSG_WAITALL","","",N,N],[17,"MSG_DONTWAIT","","",N,N],[17,"MSG_EOF","","",N,N],[17,"SCM_TIMESTAMP","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"SOCK_RDM","","",N,N],[17,"SOCK_SEQPACKET","","",N,N],[17,"SOCK_CLOEXEC","","",N,N],[17,"SOCK_NONBLOCK","","",N,N],[17,"SOCK_MAXADDRLEN","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_RECVDSTADDR","","",N,N],[17,"IP_SENDSRCADDR","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_RECVIF","","",N,N],[17,"IPV6_JOIN_GROUP","","",N,N],[17,"IPV6_LEAVE_GROUP","","",N,N],[17,"IPV6_RECVPKTINFO","","",N,N],[17,"IPV6_PKTINFO","","",N,N],[17,"IPV6_RECVTCLASS","","",N,N],[17,"IPV6_TCLASS","","",N,N],[17,"TCP_NOPUSH","","",N,N],[17,"TCP_NOOPT","","",N,N],[17,"TCP_KEEPIDLE","","",N,N],[17,"TCP_KEEPINTVL","","",N,N],[17,"TCP_KEEPCNT","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_USELOOPBACK","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_TIMESTAMP","","",N,N],[17,"SO_NOSIGPIPE","","",N,N],[17,"SO_ACCEPTFILTER","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"MAP_COPY","","",N,N],[17,"MAP_RENAME","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_HASSEMAPHORE","","",N,N],[17,"MAP_STACK","","",N,N],[17,"MAP_NOSYNC","","",N,N],[17,"MAP_NOCORE","","",N,N],[17,"IPPROTO_RAW","","",N,N],[17,"_PC_LINK_MAX","","",N,N],[17,"_PC_MAX_CANON","","",N,N],[17,"_PC_MAX_INPUT","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_PC_PATH_MAX","","",N,N],[17,"_PC_PIPE_BUF","","",N,N],[17,"_PC_CHOWN_RESTRICTED","","",N,N],[17,"_PC_NO_TRUNC","","",N,N],[17,"_PC_VDISABLE","","",N,N],[17,"_PC_ALLOC_SIZE_MIN","","",N,N],[17,"_PC_FILESIZEBITS","","",N,N],[17,"_PC_REC_INCR_XFER_SIZE","","",N,N],[17,"_PC_REC_MAX_XFER_SIZE","","",N,N],[17,"_PC_REC_MIN_XFER_SIZE","","",N,N],[17,"_PC_REC_XFER_ALIGN","","",N,N],[17,"_PC_SYMLINK_MAX","","",N,N],[17,"_PC_MIN_HOLE_SIZE","","",N,N],[17,"_PC_ASYNC_IO","","",N,N],[17,"_PC_PRIO_IO","","",N,N],[17,"_PC_SYNC_IO","","",N,N],[17,"_PC_ACL_EXTENDED","","",N,N],[17,"_PC_ACL_PATH_MAX","","",N,N],[17,"_PC_CAP_PRESENT","","",N,N],[17,"_PC_INF_PRESENT","","",N,N],[17,"_PC_MAC_PRESENT","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_NPROCESSORS_CONF","","",N,N],[17,"_SC_2_PBS","","",N,N],[17,"_SC_2_PBS_ACCOUNTING","","",N,N],[17,"_SC_2_PBS_CHECKPOINT","","",N,N],[17,"_SC_2_PBS_LOCATE","","",N,N],[17,"_SC_2_PBS_MESSAGE","","",N,N],[17,"_SC_2_PBS_TRACK","","",N,N],[17,"_SC_ADVISORY_INFO","","",N,N],[17,"_SC_BARRIERS","","",N,N],[17,"_SC_CLOCK_SELECTION","","",N,N],[17,"_SC_CPUTIME","","",N,N],[17,"_SC_FILE_LOCKING","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_HOST_NAME_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_MONOTONIC_CLOCK","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_READER_WRITER_LOCKS","","",N,N],[17,"_SC_REGEXP","","",N,N],[17,"_SC_SHELL","","",N,N],[17,"_SC_SPAWN","","",N,N],[17,"_SC_SPIN_LOCKS","","",N,N],[17,"_SC_SPORADIC_SERVER","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PROCESS_SHARED","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_THREAD_SPORADIC_SERVER","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_TIMEOUTS","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_TRACE","","",N,N],[17,"_SC_TRACE_EVENT_FILTER","","",N,N],[17,"_SC_TRACE_INHERIT","","",N,N],[17,"_SC_TRACE_LOG","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_TYPED_MEMORY_OBJECTS","","",N,N],[17,"_SC_V6_ILP32_OFF32","","",N,N],[17,"_SC_V6_ILP32_OFFBIG","","",N,N],[17,"_SC_V6_LP64_OFF64","","",N,N],[17,"_SC_V6_LPBIG_OFFBIG","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_XOPEN_STREAMS","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_IPV6","","",N,N],[17,"_SC_RAW_SOCKETS","","",N,N],[17,"_SC_SYMLOOP_MAX","","",N,N],[17,"_SC_PHYS_PAGES","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"PTHREAD_MUTEX_ERRORCHECK","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"PTHREAD_MUTEX_NORMAL","","",N,N],[17,"PTHREAD_MUTEX_DEFAULT","","",N,N],[17,"SCHED_FIFO","","",N,N],[17,"SCHED_OTHER","","",N,N],[17,"SCHED_RR","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"LOG_NTP","","",N,N],[17,"LOG_SECURITY","","",N,N],[17,"LOG_CONSOLE","","",N,N],[17,"LOG_NFACILITIES","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCFLUSH","","",N,N],[17,"TIOCGETA","","",N,N],[17,"TIOCSETA","","",N,N],[17,"TIOCSETAW","","",N,N],[17,"TIOCSETAF","","",N,N],[17,"TIOCGETD","","",N,N],[17,"TIOCSETD","","",N,N],[17,"TIOCGDRAINWAIT","","",N,N],[17,"TIOCSDRAINWAIT","","",N,N],[17,"TIOCTIMESTAMP","","",N,N],[17,"TIOCMGDTRWAIT","","",N,N],[17,"TIOCMSDTRWAIT","","",N,N],[17,"TIOCDRAIN","","",N,N],[17,"TIOCEXT","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCCONS","","",N,N],[17,"TIOCGSID","","",N,N],[17,"TIOCSTAT","","",N,N],[17,"TIOCUCNTL","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCM_LE","","",N,N],[17,"TIOCM_DTR","","",N,N],[17,"TIOCM_RTS","","",N,N],[17,"TIOCM_ST","","",N,N],[17,"TIOCM_SR","","",N,N],[17,"TIOCM_CTS","","",N,N],[17,"TIOCM_RI","","",N,N],[17,"TIOCM_DSR","","",N,N],[17,"TIOCM_CD","","",N,N],[17,"TIOCM_CAR","","",N,N],[17,"TIOCM_RNG","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMSET","","",N,N],[17,"TIOCSTART","","",N,N],[17,"TIOCSTOP","","",N,N],[17,"TIOCPKT","","",N,N],[17,"TIOCPKT_DATA","","",N,N],[17,"TIOCPKT_FLUSHREAD","","",N,N],[17,"TIOCPKT_FLUSHWRITE","","",N,N],[17,"TIOCPKT_STOP","","",N,N],[17,"TIOCPKT_START","","",N,N],[17,"TIOCPKT_NOSTOP","","",N,N],[17,"TIOCPKT_DOSTOP","","",N,N],[17,"TIOCPKT_IOCTL","","",N,N],[17,"TIOCNOTTY","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCCDTR","","",N,N],[17,"TIOCSDTR","","",N,N],[17,"TIOCCBRK","","",N,N],[17,"TIOCSBRK","","",N,N],[17,"TTYDISC","","",N,N],[17,"SLIPDISC","","",N,N],[17,"PPPDISC","","",N,N],[17,"NETGRAPHDISC","","",N,N],[17,"B0","","",N,N],[17,"B50","","",N,N],[17,"B75","","",N,N],[17,"B110","","",N,N],[17,"B134","","",N,N],[17,"B150","","",N,N],[17,"B200","","",N,N],[17,"B300","","",N,N],[17,"B600","","",N,N],[17,"B1200","","",N,N],[17,"B1800","","",N,N],[17,"B2400","","",N,N],[17,"B4800","","",N,N],[17,"B9600","","",N,N],[17,"B19200","","",N,N],[17,"B38400","","",N,N],[17,"B7200","","",N,N],[17,"B14400","","",N,N],[17,"B28800","","",N,N],[17,"B57600","","",N,N],[17,"B76800","","",N,N],[17,"B115200","","",N,N],[17,"B230400","","",N,N],[17,"EXTA","","",N,N],[17,"EXTB","","",N,N],[17,"SEM_FAILED","","",N,N],[17,"CRTSCTS","","",N,N],[17,"CCTS_OFLOW","","",N,N],[17,"CRTS_IFLOW","","",N,N],[17,"CDTR_IFLOW","","",N,N],[17,"CDSR_OFLOW","","",N,N],[17,"CCAR_OFLOW","","",N,N],[17,"VERASE2","","",N,N],[17,"OCRNL","","",N,N],[17,"ONOCR","","",N,N],[17,"ONLRET","","",N,N],[17,"CMGROUP_MAX","","",N,N],[17,"BPF_ALIGNMENT","","",N,N],[17,"RTP_PRIO_MIN","","",N,N],[17,"RTP_PRIO_MAX","","",N,N],[17,"RTP_LOOKUP","","",N,N],[17,"RTP_SET","","",N,N],[17,"UF_SETTABLE","","",N,N],[17,"UF_NODUMP","","",N,N],[17,"UF_IMMUTABLE","","",N,N],[17,"UF_APPEND","","",N,N],[17,"UF_OPAQUE","","",N,N],[17,"UF_NOUNLINK","","",N,N],[17,"SF_SETTABLE","","",N,N],[17,"SF_ARCHIVED","","",N,N],[17,"SF_IMMUTABLE","","",N,N],[17,"SF_APPEND","","",N,N],[17,"SF_NOUNLINK","","",N,N],[17,"TIMER_ABSTIME","","",N,N],[17,"SIGEV_THREAD_ID","","",N,N],[17,"EXTATTR_NAMESPACE_EMPTY","","",N,N],[17,"EXTATTR_NAMESPACE_USER","","",N,N],[17,"EXTATTR_NAMESPACE_SYSTEM","","",N,N],[17,"RAND_MAX","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"SF_NODISKIO","","",N,N],[17,"SF_MNOWAIT","","",N,N],[17,"SF_SYNC","","",N,N],[17,"SF_USER_READAHEAD","","",N,N],[17,"SF_NOCACHE","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"O_EXEC","","",N,N],[17,"O_TTY_INIT","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"ENOTCAPABLE","","",N,N],[17,"ECAPMODE","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"ELAST","","",N,N],[17,"RLIMIT_NPTS","","",N,N],[17,"RLIMIT_SWAP","","",N,N],[17,"RLIMIT_KQUEUES","","",N,N],[17,"RLIMIT_UMTXP","","",N,N],[17,"RLIM_NLIMITS","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"POSIX_FADV_NORMAL","","",N,N],[17,"POSIX_FADV_RANDOM","","",N,N],[17,"POSIX_FADV_SEQUENTIAL","","",N,N],[17,"POSIX_FADV_WILLNEED","","",N,N],[17,"POSIX_FADV_DONTNEED","","",N,N],[17,"POSIX_FADV_NOREUSE","","",N,N],[17,"POLLINIGNEOF","","",N,N],[17,"EVFILT_READ","","",N,N],[17,"EVFILT_WRITE","","",N,N],[17,"EVFILT_AIO","","",N,N],[17,"EVFILT_VNODE","","",N,N],[17,"EVFILT_PROC","","",N,N],[17,"EVFILT_SIGNAL","","",N,N],[17,"EVFILT_TIMER","","",N,N],[17,"EVFILT_PROCDESC","","",N,N],[17,"EVFILT_FS","","",N,N],[17,"EVFILT_LIO","","",N,N],[17,"EVFILT_USER","","",N,N],[17,"EVFILT_SENDFILE","","",N,N],[17,"EVFILT_EMPTY","","",N,N],[17,"EV_ADD","","",N,N],[17,"EV_DELETE","","",N,N],[17,"EV_ENABLE","","",N,N],[17,"EV_DISABLE","","",N,N],[17,"EV_ONESHOT","","",N,N],[17,"EV_CLEAR","","",N,N],[17,"EV_RECEIPT","","",N,N],[17,"EV_DISPATCH","","",N,N],[17,"EV_DROP","","",N,N],[17,"EV_FLAG1","","",N,N],[17,"EV_ERROR","","",N,N],[17,"EV_EOF","","",N,N],[17,"EV_SYSFLAGS","","",N,N],[17,"NOTE_TRIGGER","","",N,N],[17,"NOTE_FFNOP","","",N,N],[17,"NOTE_FFAND","","",N,N],[17,"NOTE_FFOR","","",N,N],[17,"NOTE_FFCOPY","","",N,N],[17,"NOTE_FFCTRLMASK","","",N,N],[17,"NOTE_FFLAGSMASK","","",N,N],[17,"NOTE_LOWAT","","",N,N],[17,"NOTE_DELETE","","",N,N],[17,"NOTE_WRITE","","",N,N],[17,"NOTE_EXTEND","","",N,N],[17,"NOTE_ATTRIB","","",N,N],[17,"NOTE_LINK","","",N,N],[17,"NOTE_RENAME","","",N,N],[17,"NOTE_REVOKE","","",N,N],[17,"NOTE_EXIT","","",N,N],[17,"NOTE_FORK","","",N,N],[17,"NOTE_EXEC","","",N,N],[17,"NOTE_PDATAMASK","","",N,N],[17,"NOTE_PCTRLMASK","","",N,N],[17,"NOTE_TRACK","","",N,N],[17,"NOTE_TRACKERR","","",N,N],[17,"NOTE_CHILD","","",N,N],[17,"NOTE_SECONDS","","",N,N],[17,"NOTE_MSECONDS","","",N,N],[17,"NOTE_USECONDS","","",N,N],[17,"NOTE_NSECONDS","","",N,N],[17,"MADV_PROTECT","","",N,N],[17,"RUSAGE_THREAD","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_VIRTUAL","","",N,N],[17,"CLOCK_PROF","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_UPTIME","","",N,N],[17,"CLOCK_UPTIME_PRECISE","","",N,N],[17,"CLOCK_UPTIME_FAST","","",N,N],[17,"CLOCK_REALTIME_PRECISE","","",N,N],[17,"CLOCK_REALTIME_FAST","","",N,N],[17,"CLOCK_MONOTONIC_PRECISE","","",N,N],[17,"CLOCK_MONOTONIC_FAST","","",N,N],[17,"CLOCK_SECOND","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CTL_UNSPEC","","",N,N],[17,"CTL_KERN","","",N,N],[17,"CTL_VM","","",N,N],[17,"CTL_VFS","","",N,N],[17,"CTL_NET","","",N,N],[17,"CTL_DEBUG","","",N,N],[17,"CTL_HW","","",N,N],[17,"CTL_MACHDEP","","",N,N],[17,"CTL_USER","","",N,N],[17,"CTL_P1003_1B","","",N,N],[17,"KERN_OSTYPE","","",N,N],[17,"KERN_OSRELEASE","","",N,N],[17,"KERN_OSREV","","",N,N],[17,"KERN_VERSION","","",N,N],[17,"KERN_MAXVNODES","","",N,N],[17,"KERN_MAXPROC","","",N,N],[17,"KERN_MAXFILES","","",N,N],[17,"KERN_ARGMAX","","",N,N],[17,"KERN_SECURELVL","","",N,N],[17,"KERN_HOSTNAME","","",N,N],[17,"KERN_HOSTID","","",N,N],[17,"KERN_CLOCKRATE","","",N,N],[17,"KERN_VNODE","","",N,N],[17,"KERN_PROC","","",N,N],[17,"KERN_FILE","","",N,N],[17,"KERN_PROF","","",N,N],[17,"KERN_POSIX1","","",N,N],[17,"KERN_NGROUPS","","",N,N],[17,"KERN_JOB_CONTROL","","",N,N],[17,"KERN_SAVED_IDS","","",N,N],[17,"KERN_BOOTTIME","","",N,N],[17,"KERN_NISDOMAINNAME","","",N,N],[17,"KERN_UPDATEINTERVAL","","",N,N],[17,"KERN_OSRELDATE","","",N,N],[17,"KERN_NTP_PLL","","",N,N],[17,"KERN_BOOTFILE","","",N,N],[17,"KERN_MAXFILESPERPROC","","",N,N],[17,"KERN_MAXPROCPERUID","","",N,N],[17,"KERN_DUMPDEV","","",N,N],[17,"KERN_IPC","","",N,N],[17,"KERN_DUMMY","","",N,N],[17,"KERN_PS_STRINGS","","",N,N],[17,"KERN_USRSTACK","","",N,N],[17,"KERN_LOGSIGEXIT","","",N,N],[17,"KERN_IOV_MAX","","",N,N],[17,"KERN_HOSTUUID","","",N,N],[17,"KERN_ARND","","",N,N],[17,"KERN_PROC_ALL","","",N,N],[17,"KERN_PROC_PID","","",N,N],[17,"KERN_PROC_PGRP","","",N,N],[17,"KERN_PROC_SESSION","","",N,N],[17,"KERN_PROC_TTY","","",N,N],[17,"KERN_PROC_UID","","",N,N],[17,"KERN_PROC_RUID","","",N,N],[17,"KERN_PROC_ARGS","","",N,N],[17,"KERN_PROC_PROC","","",N,N],[17,"KERN_PROC_SV_NAME","","",N,N],[17,"KERN_PROC_RGID","","",N,N],[17,"KERN_PROC_GID","","",N,N],[17,"KERN_PROC_PATHNAME","","",N,N],[17,"KERN_PROC_OVMMAP","","",N,N],[17,"KERN_PROC_OFILEDESC","","",N,N],[17,"KERN_PROC_KSTACK","","",N,N],[17,"KERN_PROC_INC_THREAD","","",N,N],[17,"KERN_PROC_VMMAP","","",N,N],[17,"KERN_PROC_FILEDESC","","",N,N],[17,"KERN_PROC_GROUPS","","",N,N],[17,"KERN_PROC_ENV","","",N,N],[17,"KERN_PROC_AUXV","","",N,N],[17,"KERN_PROC_RLIMIT","","",N,N],[17,"KERN_PROC_PS_STRINGS","","",N,N],[17,"KERN_PROC_UMASK","","",N,N],[17,"KERN_PROC_OSREL","","",N,N],[17,"KERN_PROC_SIGTRAMP","","",N,N],[17,"KIPC_MAXSOCKBUF","","",N,N],[17,"KIPC_SOCKBUF_WASTE","","",N,N],[17,"KIPC_SOMAXCONN","","",N,N],[17,"KIPC_MAX_LINKHDR","","",N,N],[17,"KIPC_MAX_PROTOHDR","","",N,N],[17,"KIPC_MAX_HDR","","",N,N],[17,"KIPC_MAX_DATALEN","","",N,N],[17,"HW_MACHINE","","",N,N],[17,"HW_MODEL","","",N,N],[17,"HW_NCPU","","",N,N],[17,"HW_BYTEORDER","","",N,N],[17,"HW_PHYSMEM","","",N,N],[17,"HW_USERMEM","","",N,N],[17,"HW_PAGESIZE","","",N,N],[17,"HW_DISKNAMES","","",N,N],[17,"HW_DISKSTATS","","",N,N],[17,"HW_FLOATINGPT","","",N,N],[17,"HW_MACHINE_ARCH","","",N,N],[17,"HW_REALMEM","","",N,N],[17,"USER_CS_PATH","","",N,N],[17,"USER_BC_BASE_MAX","","",N,N],[17,"USER_BC_DIM_MAX","","",N,N],[17,"USER_BC_SCALE_MAX","","",N,N],[17,"USER_BC_STRING_MAX","","",N,N],[17,"USER_COLL_WEIGHTS_MAX","","",N,N],[17,"USER_EXPR_NEST_MAX","","",N,N],[17,"USER_LINE_MAX","","",N,N],[17,"USER_RE_DUP_MAX","","",N,N],[17,"USER_POSIX2_VERSION","","",N,N],[17,"USER_POSIX2_C_BIND","","",N,N],[17,"USER_POSIX2_C_DEV","","",N,N],[17,"USER_POSIX2_CHAR_TERM","","",N,N],[17,"USER_POSIX2_FORT_DEV","","",N,N],[17,"USER_POSIX2_FORT_RUN","","",N,N],[17,"USER_POSIX2_LOCALEDEF","","",N,N],[17,"USER_POSIX2_SW_DEV","","",N,N],[17,"USER_POSIX2_UPE","","",N,N],[17,"USER_STREAM_MAX","","",N,N],[17,"USER_TZNAME_MAX","","",N,N],[17,"CTL_P1003_1B_ASYNCHRONOUS_IO","","",N,N],[17,"CTL_P1003_1B_MAPPED_FILES","","",N,N],[17,"CTL_P1003_1B_MEMLOCK","","",N,N],[17,"CTL_P1003_1B_MEMLOCK_RANGE","","",N,N],[17,"CTL_P1003_1B_MEMORY_PROTECTION","","",N,N],[17,"CTL_P1003_1B_MESSAGE_PASSING","","",N,N],[17,"CTL_P1003_1B_PRIORITIZED_IO","","",N,N],[17,"CTL_P1003_1B_PRIORITY_SCHEDULING","","",N,N],[17,"CTL_P1003_1B_REALTIME_SIGNALS","","",N,N],[17,"CTL_P1003_1B_SEMAPHORES","","",N,N],[17,"CTL_P1003_1B_FSYNC","","",N,N],[17,"CTL_P1003_1B_SHARED_MEMORY_OBJECTS","","",N,N],[17,"CTL_P1003_1B_SYNCHRONIZED_IO","","",N,N],[17,"CTL_P1003_1B_TIMERS","","",N,N],[17,"CTL_P1003_1B_AIO_LISTIO_MAX","","",N,N],[17,"CTL_P1003_1B_AIO_MAX","","",N,N],[17,"CTL_P1003_1B_AIO_PRIO_DELTA_MAX","","",N,N],[17,"CTL_P1003_1B_DELAYTIMER_MAX","","",N,N],[17,"CTL_P1003_1B_MQ_OPEN_MAX","","",N,N],[17,"CTL_P1003_1B_PAGESIZE","","",N,N],[17,"CTL_P1003_1B_RTSIG_MAX","","",N,N],[17,"CTL_P1003_1B_SEM_NSEMS_MAX","","",N,N],[17,"CTL_P1003_1B_SEM_VALUE_MAX","","",N,N],[17,"CTL_P1003_1B_SIGQUEUE_MAX","","",N,N],[17,"CTL_P1003_1B_TIMER_MAX","","",N,N],[17,"TIOCGPTN","","",N,N],[17,"TIOCPTMASTER","","",N,N],[17,"TIOCSIG","","",N,N],[17,"TIOCM_DCD","","",N,N],[17,"H4DISC","","",N,N],[17,"JAIL_API_VERSION","","",N,N],[17,"JAIL_CREATE","","",N,N],[17,"JAIL_UPDATE","","",N,N],[17,"JAIL_ATTACH","","",N,N],[17,"JAIL_DYING","","",N,N],[17,"JAIL_SET_MASK","","",N,N],[17,"JAIL_GET_MASK","","",N,N],[17,"JAIL_SYS_DISABLE","","",N,N],[17,"JAIL_SYS_NEW","","",N,N],[17,"JAIL_SYS_INHERIT","","",N,N],[17,"SO_BINTIME","","",N,N],[17,"SO_NO_OFFLOAD","","",N,N],[17,"SO_NO_DDP","","",N,N],[17,"SO_REUSEPORT_LB","","",N,N],[17,"SO_LABEL","","",N,N],[17,"SO_PEERLABEL","","",N,N],[17,"SO_LISTENQLIMIT","","",N,N],[17,"SO_LISTENQLEN","","",N,N],[17,"SO_LISTENINCQLEN","","",N,N],[17,"SO_SETFIB","","",N,N],[17,"SO_USER_COOKIE","","",N,N],[17,"SO_PROTOCOL","","",N,N],[17,"SO_PROTOTYPE","","",N,N],[17,"SO_VENDOR","","",N,N],[17,"LOCAL_PEERCRED","","",N,N],[17,"LOCAL_CREDS","","",N,N],[17,"LOCAL_CONNWAIT","","",N,N],[17,"LOCAL_VENDOR","","",N,N],[17,"PT_LWPINFO","","",N,N],[17,"PT_GETNUMLWPS","","",N,N],[17,"PT_GETLWPLIST","","",N,N],[17,"PT_CLEARSTEP","","",N,N],[17,"PT_SETSTEP","","",N,N],[17,"PT_SUSPEND","","",N,N],[17,"PT_RESUME","","",N,N],[17,"PT_TO_SCE","","",N,N],[17,"PT_TO_SCX","","",N,N],[17,"PT_SYSCALL","","",N,N],[17,"PT_FOLLOW_FORK","","",N,N],[17,"PT_LWP_EVENTS","","",N,N],[17,"PT_GET_EVENT_MASK","","",N,N],[17,"PT_SET_EVENT_MASK","","",N,N],[17,"PT_GETREGS","","",N,N],[17,"PT_SETREGS","","",N,N],[17,"PT_GETFPREGS","","",N,N],[17,"PT_SETFPREGS","","",N,N],[17,"PT_GETDBREGS","","",N,N],[17,"PT_SETDBREGS","","",N,N],[17,"PT_VM_TIMESTAMP","","",N,N],[17,"PT_VM_ENTRY","","",N,N],[17,"PT_FIRSTMACH","","",N,N],[17,"PTRACE_EXEC","","",N,N],[17,"PTRACE_SCE","","",N,N],[17,"PTRACE_SCX","","",N,N],[17,"PTRACE_SYSCALL","","",N,N],[17,"PTRACE_FORK","","",N,N],[17,"PTRACE_LWP","","",N,N],[17,"PTRACE_VFORK","","",N,N],[17,"PTRACE_DEFAULT","","",N,N],[17,"AF_SLOW","","",N,N],[17,"AF_SCLUSTER","","",N,N],[17,"AF_ARP","","",N,N],[17,"AF_BLUETOOTH","","",N,N],[17,"AF_IEEE80211","","",N,N],[17,"AF_INET_SDP","","",N,N],[17,"AF_INET6_SDP","","",N,N],[17,"IFF_UP","","",N,N],[17,"IFF_BROADCAST","","",N,N],[17,"IFF_DEBUG","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"IFF_POINTOPOINT","","",N,N],[17,"IFF_RUNNING","","",N,N],[17,"IFF_NOARP","","",N,N],[17,"IFF_PROMISC","","",N,N],[17,"IFF_ALLMULTI","","",N,N],[17,"IFF_OACTIVE","","",N,N],[17,"IFF_SIMPLEX","","",N,N],[17,"IFF_LINK0","","",N,N],[17,"IFF_LINK1","","",N,N],[17,"IFF_LINK2","","",N,N],[17,"IFF_ALTPHYS","","",N,N],[17,"IFF_MULTICAST","","",N,N],[17,"IFF_CANTCONFIG","","",N,N],[17,"IFF_PPROMISC","","",N,N],[17,"IFF_MONITOR","","",N,N],[17,"IFF_STATICARP","","",N,N],[17,"IFF_DYING","","",N,N],[17,"IFF_RENAMING","","",N,N],[17,"IPPROTO_HOPOPTS","","IP6 hop-by-hop options",N,N],[17,"IPPROTO_IGMP","","group mgmt protocol",N,N],[17,"IPPROTO_GGP","","gateway^2 (deprecated)",N,N],[17,"IPPROTO_IPIP","","for compatibility",N,N],[17,"IPPROTO_ST","","Stream protocol II.",N,N],[17,"IPPROTO_EGP","","exterior gateway protocol",N,N],[17,"IPPROTO_PIGP","","private interior gateway",N,N],[17,"IPPROTO_RCCMON","","BBN RCC Monitoring",N,N],[17,"IPPROTO_NVPII","","network voice protocol",N,N],[17,"IPPROTO_PUP","","pup",N,N],[17,"IPPROTO_ARGUS","","Argus",N,N],[17,"IPPROTO_EMCON","","EMCON",N,N],[17,"IPPROTO_XNET","","Cross Net Debugger",N,N],[17,"IPPROTO_CHAOS","","Chaos",N,N],[17,"IPPROTO_MUX","","Multiplexing",N,N],[17,"IPPROTO_MEAS","","DCN Measurement Subsystems",N,N],[17,"IPPROTO_HMP","","Host Monitoring",N,N],[17,"IPPROTO_PRM","","Packet Radio Measurement",N,N],[17,"IPPROTO_IDP","","xns idp",N,N],[17,"IPPROTO_TRUNK1","","Trunk-1",N,N],[17,"IPPROTO_TRUNK2","","Trunk-2",N,N],[17,"IPPROTO_LEAF1","","Leaf-1",N,N],[17,"IPPROTO_LEAF2","","Leaf-2",N,N],[17,"IPPROTO_RDP","","Reliable Data",N,N],[17,"IPPROTO_IRTP","","Reliable Transaction",N,N],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",N,N],[17,"IPPROTO_BLT","","Bulk Data Transfer",N,N],[17,"IPPROTO_NSP","","Network Services",N,N],[17,"IPPROTO_INP","","Merit Internodal",N,N],[17,"IPPROTO_SEP","","Sequential Exchange",N,N],[17,"IPPROTO_3PC","","Third Party Connect",N,N],[17,"IPPROTO_IDPR","","InterDomain Policy Routing",N,N],[17,"IPPROTO_XTP","","XTP",N,N],[17,"IPPROTO_DDP","","Datagram Delivery",N,N],[17,"IPPROTO_CMTP","","Control Message Transport",N,N],[17,"IPPROTO_TPXX","","TP++ Transport",N,N],[17,"IPPROTO_IL","","IL transport protocol",N,N],[17,"IPPROTO_SDRP","","Source Demand Routing",N,N],[17,"IPPROTO_ROUTING","","IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",N,N],[17,"IPPROTO_IDRP","","InterDomain Routing",N,N],[17,"IPPROTO_RSVP","","resource reservation",N,N],[17,"IPPROTO_GRE","","General Routing Encap.",N,N],[17,"IPPROTO_MHRP","","Mobile Host Routing",N,N],[17,"IPPROTO_BHA","","BHA",N,N],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH","","IP6 Auth Header",N,N],[17,"IPPROTO_INLSP","","Integ. Net Layer Security",N,N],[17,"IPPROTO_SWIPE","","IP with encryption",N,N],[17,"IPPROTO_NHRP","","Next Hop Resolution",N,N],[17,"IPPROTO_MOBILE","","IP Mobility",N,N],[17,"IPPROTO_TLSP","","Transport Layer Security",N,N],[17,"IPPROTO_SKIP","","SKIP",N,N],[17,"IPPROTO_NONE","","IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS","","IP6 destination option",N,N],[17,"IPPROTO_AHIP","","any host internal protocol",N,N],[17,"IPPROTO_CFTP","","CFTP",N,N],[17,"IPPROTO_HELLO","","\"hello\" routing protocol",N,N],[17,"IPPROTO_SATEXPAK","","SATNET/Backroom EXPAK",N,N],[17,"IPPROTO_KRYPTOLAN","","Kryptolan",N,N],[17,"IPPROTO_RVD","","Remote Virtual Disk",N,N],[17,"IPPROTO_IPPC","","Pluribus Packet Core",N,N],[17,"IPPROTO_ADFS","","Any distributed FS",N,N],[17,"IPPROTO_SATMON","","Satnet Monitoring",N,N],[17,"IPPROTO_VISA","","VISA Protocol",N,N],[17,"IPPROTO_IPCV","","Packet Core Utility",N,N],[17,"IPPROTO_CPNX","","Comp. Prot. Net. Executive",N,N],[17,"IPPROTO_CPHB","","Comp. Prot. HeartBeat",N,N],[17,"IPPROTO_WSN","","Wang Span Network",N,N],[17,"IPPROTO_PVP","","Packet Video Protocol",N,N],[17,"IPPROTO_BRSATMON","","BackRoom SATNET Monitoring",N,N],[17,"IPPROTO_ND","","Sun net disk proto (temp.)",N,N],[17,"IPPROTO_WBMON","","WIDEBAND Monitoring",N,N],[17,"IPPROTO_WBEXPAK","","WIDEBAND EXPAK",N,N],[17,"IPPROTO_EON","","ISO cnlp",N,N],[17,"IPPROTO_VMTP","","VMTP",N,N],[17,"IPPROTO_SVMTP","","Secure VMTP",N,N],[17,"IPPROTO_VINES","","Banyon VINES",N,N],[17,"IPPROTO_TTP","","TTP",N,N],[17,"IPPROTO_IGP","","NSFNET-IGP",N,N],[17,"IPPROTO_DGP","","dissimilar gateway prot.",N,N],[17,"IPPROTO_TCF","","TCF",N,N],[17,"IPPROTO_IGRP","","Cisco/GXS IGRP",N,N],[17,"IPPROTO_OSPFIGP","","OSPFIGP",N,N],[17,"IPPROTO_SRPC","","Strite RPC protocol",N,N],[17,"IPPROTO_LARP","","Locus Address Resoloution",N,N],[17,"IPPROTO_MTP","","Multicast Transport",N,N],[17,"IPPROTO_AX25","","AX.25 Frames",N,N],[17,"IPPROTO_IPEIP","","IP encapsulated in IP",N,N],[17,"IPPROTO_MICP","","Mobile Int.ing control",N,N],[17,"IPPROTO_SCCSP","","Semaphore Comm. security",N,N],[17,"IPPROTO_ETHERIP","","Ethernet IP encapsulation",N,N],[17,"IPPROTO_ENCAP","","encapsulation header",N,N],[17,"IPPROTO_APES","","any private encr. scheme",N,N],[17,"IPPROTO_GMTP","","GMTP",N,N],[17,"IPPROTO_IPCOMP","","payload compression (IPComp)",N,N],[17,"IPPROTO_SCTP","","SCTP",N,N],[17,"IPPROTO_MH","","IPv6 Mobility Header",N,N],[17,"IPPROTO_UDPLITE","","UDP-Lite",N,N],[17,"IPPROTO_HIP","","IP6 Host Identity Protocol",N,N],[17,"IPPROTO_SHIM6","","IP6 Shim6 Protocol",N,N],[17,"IPPROTO_PIM","","Protocol Independent Mcast",N,N],[17,"IPPROTO_CARP","","CARP",N,N],[17,"IPPROTO_PGM","","PGM",N,N],[17,"IPPROTO_MPLS","","MPLS-in-IP",N,N],[17,"IPPROTO_PFSYNC","","PFSYNC",N,N],[17,"IPPROTO_OLD_DIVERT","","OLD divert pseudo-proto",N,N],[17,"IPPROTO_MAX","","",N,N],[17,"IPPROTO_DONE","","last return value of *_input(), meaning \"all job for this pkt is done\".",N,N],[17,"IPPROTO_DIVERT","","divert pseudo-protocol",N,N],[17,"IPPROTO_SEND","","SeND pseudo-protocol",N,N],[17,"TCP_MD5SIG","","",N,N],[17,"TCP_INFO","","",N,N],[17,"TCP_CONGESTION","","",N,N],[17,"TCP_CCALGOOPT","","",N,N],[17,"TCP_KEEPINIT","","",N,N],[17,"TCP_FASTOPEN","","",N,N],[17,"TCP_PCAP_OUT","","",N,N],[17,"TCP_PCAP_IN","","",N,N],[17,"IP_BINDANY","","",N,N],[17,"IP_RECVTOS","","",N,N],[17,"PF_SLOW","","",N,N],[17,"PF_SCLUSTER","","",N,N],[17,"PF_ARP","","",N,N],[17,"PF_BLUETOOTH","","",N,N],[17,"PF_IEEE80211","","",N,N],[17,"PF_INET_SDP","","",N,N],[17,"PF_INET6_SDP","","",N,N],[17,"NET_RT_DUMP","","",N,N],[17,"NET_RT_FLAGS","","",N,N],[17,"NET_RT_IFLIST","","",N,N],[17,"NET_RT_IFMALIST","","",N,N],[17,"NET_RT_IFLISTL","","",N,N],[17,"IPC_PRIVATE","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_INFO","","",N,N],[17,"IPC_R","","",N,N],[17,"IPC_W","","",N,N],[17,"IPC_M","","",N,N],[17,"MSG_NOERROR","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"SHM_LOCK","","",N,N],[17,"SHM_UNLOCK","","",N,N],[17,"SHM_STAT","","",N,N],[17,"SHM_INFO","","",N,N],[17,"SHM_ANON","","",N,N],[17,"MSG_NOTIFICATION","","",N,N],[17,"MSG_NBIO","","",N,N],[17,"MSG_COMPAT","","",N,N],[17,"MSG_CMSG_CLOEXEC","","",N,N],[17,"MSG_NOSIGNAL","","",N,N],[17,"EMPTY","","",N,N],[17,"BOOT_TIME","","",N,N],[17,"OLD_TIME","","",N,N],[17,"NEW_TIME","","",N,N],[17,"USER_PROCESS","","",N,N],[17,"INIT_PROCESS","","",N,N],[17,"LOGIN_PROCESS","","",N,N],[17,"DEAD_PROCESS","","",N,N],[17,"SHUTDOWN_TIME","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"WEXITED","","",N,N],[17,"WTRAPPED","","",N,N],[17,"P_PID","","",N,N],[17,"P_PGID","","",N,N],[17,"P_ALL","","",N,N],[17,"B460800","","",N,N],[17,"B921600","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_EACCESS","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"AT_SYMLINK_FOLLOW","","",N,N],[17,"AT_REMOVEDIR","","",N,N],[17,"TABDLY","","",N,N],[17,"TAB0","","",N,N],[17,"TAB3","","",N,N],[17,"_PC_ACL_NFS4","","",N,N],[17,"_SC_CPUSET_SIZE","","",N,N],[17,"XU_NGROUPS","","",N,N],[17,"XUCRED_VERSION","","",N,N],[17,"PD_DAEMON","","",N,N],[17,"PD_CLOEXEC","","",N,N],[17,"PD_ALLOWED_AT_FORK","","",N,N],[17,"RTP_PRIO_REALTIME","","",N,N],[17,"RTP_PRIO_NORMAL","","",N,N],[17,"RTP_PRIO_IDLE","","",N,N],[17,"POSIX_SPAWN_RESETIDS","","",N,N],[17,"POSIX_SPAWN_SETPGROUP","","",N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",N,N],[17,"POSIX_SPAWN_SETSCHEDULER","","",N,N],[17,"POSIX_SPAWN_SETSIGDEF","","",N,N],[17,"POSIX_SPAWN_SETSIGMASK","","",N,N],[17,"UF_SYSTEM","","",N,N],[17,"UF_SPARSE","","",N,N],[17,"UF_OFFLINE","","",N,N],[17,"UF_REPARSE","","",N,N],[17,"UF_ARCHIVE","","",N,N],[17,"UF_READONLY","","",N,N],[17,"UF_HIDDEN","","",N,N],[17,"SF_SNAPSHOT","","",N,N],[11,"into","","",62,[[["self"]],["u"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["in_addr"]]],[11,"clone","","",7,[[["self"]],["in6_addr"]]],[11,"clone","","",8,[[["self"]],["ip_mreq"]]],[11,"clone","","",9,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",10,[[["self"]],["hostent"]]],[11,"clone","","",11,[[["self"]],["iovec"]]],[11,"clone","","",12,[[["self"]],["pollfd"]]],[11,"clone","","",13,[[["self"]],["winsize"]]],[11,"clone","","",14,[[["self"]],["linger"]]],[11,"clone","","",15,[[["self"]],["sigval"]]],[11,"clone","","",16,[[["self"]],["itimerval"]]],[11,"clone","","",17,[[["self"]],["tms"]]],[11,"clone","","",18,[[["self"]],["servent"]]],[11,"clone","","",19,[[["self"]],["protoent"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",22,[[["self"]],["sockaddr_un"]]],[11,"clone","","",23,[[["self"]],["passwd"]]],[11,"clone","","",24,[[["self"]],["ifaddrs"]]],[11,"clone","","",63,[[["self"]],["fd_set"]]],[11,"clone","","",25,[[["self"]],["tm"]]],[11,"clone","","",26,[[["self"]],["utsname"]]],[11,"clone","","",27,[[["self"]],["msghdr"]]],[11,"clone","","",28,[[["self"]],["cmsghdr"]]],[11,"clone","","",64,[[["self"]],["fsid_t"]]],[11,"clone","","",29,[[["self"]],["if_nameindex"]]],[11,"clone","","",30,[[["self"]],["glob_t"]]],[11,"clone","","",31,[[["self"]],["kevent"]]],[11,"clone","","",32,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",33,[[["self"]],["addrinfo"]]],[11,"clone","","",65,[[["self"]],["sigset_t"]]],[11,"clone","","",34,[[["self"]],["siginfo_t"]]],[11,"clone","","",35,[[["self"]],["sigaction"]]],[11,"clone","","",36,[[["self"]],["stack_t"]]],[11,"clone","","",37,[[["self"]],["sched_param"]]],[11,"clone","","",38,[[["self"]],["dl_info"]]],[11,"clone","","",39,[[["self"]],["sockaddr_in"]]],[11,"clone","","",40,[[["self"]],["termios"]]],[11,"clone","","",41,[[["self"]],["flock"]]],[11,"clone","","",42,[[["self"]],["sf_hdtr"]]],[11,"clone","","",43,[[["self"]],["lconv"]]],[11,"clone","","",44,[[["self"]],["cmsgcred"]]],[11,"clone","","",45,[[["self"]],["rtprio"]]],[11,"clone","","",46,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",47,[[["self"]],["arphdr"]]],[11,"clone","","",48,[[["self"]],["utmpx"]]],[11,"clone","","",49,[[["self"]],["aiocb"]]],[11,"clone","","",50,[[["self"]],["dirent"]]],[11,"clone","","",51,[[["self"]],["jail"]]],[11,"clone","","",52,[[["self"]],["mq_attr"]]],[11,"clone","","",53,[[["self"]],["sigevent"]]],[11,"clone","","",54,[[["self"]],["statvfs"]]],[11,"clone","","",55,[[["self"]],["statfs"]]],[11,"clone","","",66,[[["self"]],["_sem"]]],[11,"clone","","",56,[[["self"]],["ipc_perm"]]],[11,"clone","","",57,[[["self"]],["msqid_ds"]]],[11,"clone","","",58,[[["self"]],["shmid_ds"]]],[11,"clone","","",59,[[["self"]],["xucred"]]],[11,"clone","","",60,[[["self"]],["sockaddr_dl"]]],[11,"clone","","",61,[[["self"]],["stat"]]]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"utsname"],[3,"msghdr"],[3,"cmsghdr"],[3,"if_nameindex"],[3,"glob_t"],[3,"kevent"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"sched_param"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"cmsgcred"],[3,"rtprio"],[3,"in6_pktinfo"],[3,"arphdr"],[3,"utmpx"],[3,"aiocb"],[3,"dirent"],[3,"jail"],[3,"mq_attr"],[3,"sigevent"],[3,"statvfs"],[3,"statfs"],[3,"ipc_perm"],[3,"msqid_ds"],[3,"shmid_ds"],[3,"xucred"],[3,"sockaddr_dl"],[3,"stat"],[4,"c_void"],[3,"fd_set"],[3,"fsid_t"],[3,"sigset_t"],[3,"_sem"],[4,"DIR"],[4,"locale_t"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"]]};
searchIndex["nix"]={"doc":"Rust friendly bindings to the various *nix system functions.","items":[[4,"Error","nix","Nix Error Type",N,N],[13,"Sys","","",0,N],[13,"InvalidPath","","",0,N],[13,"InvalidUtf8","","The operation involved a conversion to Rust's native String type, which failed because the string did not contain all valid UTF-8.",0,N],[13,"UnsupportedOperation","","The operation is not supported by Nix, in this instance either use the libc bindings or consult the module documentation to see if there is a more appropriate interface available.",0,N],[0,"dir","","",N,N],[3,"Dir","nix::dir","An open directory.",N,N],[3,"Iter","","",N,N],[3,"Entry","","A directory entry, similar to `std::fs::DirEntry`.",N,N],[4,"Type","","",N,N],[13,"Fifo","","",1,N],[13,"CharacterDevice","","",1,N],[13,"Directory","","",1,N],[13,"BlockDevice","","",1,N],[13,"File","","",1,N],[13,"Symlink","","",1,N],[13,"Socket","","",1,N],[11,"open","","Opens the given path as with `fcntl::open`.",2,[[["p"],["oflag"],["mode"]],["result"]]],[11,"openat","","Opens the given path as with `fcntl::openat`.",2,[[["rawfd"],["p"],["oflag"],["mode"]],["result"]]],[11,"from","","Converts from a descriptor-based object, closing the descriptor on success or failure.",2,[[["f"]],["result"]]],[11,"from_fd","","Converts from a file descriptor, closing it on success or failure.",2,[[["rawfd"]],["result"]]],[11,"iter","","Returns an iterator of `Result<Entry>` which rewinds when finished.",2,[[["self"]],["iter"]]],[11,"ino","","Returns the inode number (`d_fileno`) of the underlying `dirent`.",3,[[["self"]],["u64"]]],[11,"file_name","","Returns the bare file name of this directory entry without any other leading path component.",3,[[["self"]],["cstr"]]],[11,"file_type","","Returns the type of this directory entry, if known.",3,[[["self"]],["option",["type"]]]],[0,"errno","nix","",N,N],[4,"Errno","nix::errno","",N,N],[13,"UnknownErrno","","",4,N],[13,"EPERM","","",4,N],[13,"ENOENT","","",4,N],[13,"ESRCH","","",4,N],[13,"EINTR","","",4,N],[13,"EIO","","",4,N],[13,"ENXIO","","",4,N],[13,"E2BIG","","",4,N],[13,"ENOEXEC","","",4,N],[13,"EBADF","","",4,N],[13,"ECHILD","","",4,N],[13,"EDEADLK","","",4,N],[13,"ENOMEM","","",4,N],[13,"EACCES","","",4,N],[13,"EFAULT","","",4,N],[13,"ENOTBLK","","",4,N],[13,"EBUSY","","",4,N],[13,"EEXIST","","",4,N],[13,"EXDEV","","",4,N],[13,"ENODEV","","",4,N],[13,"ENOTDIR","","",4,N],[13,"EISDIR","","",4,N],[13,"EINVAL","","",4,N],[13,"ENFILE","","",4,N],[13,"EMFILE","","",4,N],[13,"ENOTTY","","",4,N],[13,"ETXTBSY","","",4,N],[13,"EFBIG","","",4,N],[13,"ENOSPC","","",4,N],[13,"ESPIPE","","",4,N],[13,"EROFS","","",4,N],[13,"EMLINK","","",4,N],[13,"EPIPE","","",4,N],[13,"EDOM","","",4,N],[13,"ERANGE","","",4,N],[13,"EAGAIN","","",4,N],[13,"EINPROGRESS","","",4,N],[13,"EALREADY","","",4,N],[13,"ENOTSOCK","","",4,N],[13,"EDESTADDRREQ","","",4,N],[13,"EMSGSIZE","","",4,N],[13,"EPROTOTYPE","","",4,N],[13,"ENOPROTOOPT","","",4,N],[13,"EPROTONOSUPPORT","","",4,N],[13,"ESOCKTNOSUPPORT","","",4,N],[13,"ENOTSUP","","",4,N],[13,"EPFNOSUPPORT","","",4,N],[13,"EAFNOSUPPORT","","",4,N],[13,"EADDRINUSE","","",4,N],[13,"EADDRNOTAVAIL","","",4,N],[13,"ENETDOWN","","",4,N],[13,"ENETUNREACH","","",4,N],[13,"ENETRESET","","",4,N],[13,"ECONNABORTED","","",4,N],[13,"ECONNRESET","","",4,N],[13,"ENOBUFS","","",4,N],[13,"EISCONN","","",4,N],[13,"ENOTCONN","","",4,N],[13,"ESHUTDOWN","","",4,N],[13,"ETOOMANYREFS","","",4,N],[13,"ETIMEDOUT","","",4,N],[13,"ECONNREFUSED","","",4,N],[13,"ELOOP","","",4,N],[13,"ENAMETOOLONG","","",4,N],[13,"EHOSTDOWN","","",4,N],[13,"EHOSTUNREACH","","",4,N],[13,"ENOTEMPTY","","",4,N],[13,"EPROCLIM","","",4,N],[13,"EUSERS","","",4,N],[13,"EDQUOT","","",4,N],[13,"ESTALE","","",4,N],[13,"EREMOTE","","",4,N],[13,"EBADRPC","","",4,N],[13,"ERPCMISMATCH","","",4,N],[13,"EPROGUNAVAIL","","",4,N],[13,"EPROGMISMATCH","","",4,N],[13,"EPROCUNAVAIL","","",4,N],[13,"ENOLCK","","",4,N],[13,"ENOSYS","","",4,N],[13,"EFTYPE","","",4,N],[13,"EAUTH","","",4,N],[13,"ENEEDAUTH","","",4,N],[13,"EIDRM","","",4,N],[13,"ENOMSG","","",4,N],[13,"EOVERFLOW","","",4,N],[13,"ECANCELED","","",4,N],[13,"EILSEQ","","",4,N],[13,"ENOATTR","","",4,N],[13,"EDOOFUS","","",4,N],[13,"EBADMSG","","",4,N],[13,"EMULTIHOP","","",4,N],[13,"ENOLINK","","",4,N],[13,"EPROTO","","",4,N],[13,"ENOTCAPABLE","","",4,N],[13,"ECAPMODE","","",4,N],[13,"ENOTRECOVERABLE","","",4,N],[13,"EOWNERDEAD","","",4,N],[5,"from_i32","","",N,[[["i32"]],["errno"]]],[5,"errno","","Returns the platform-specific value of errno",N,[[],["i32"]]],[17,"ELAST","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"EDEADLOCK","","",N,N],[17,"EL2NSYNC","","",N,N],[8,"ErrnoSentinel","","The sentinel value indicates that a function failed and more detailed information about the error can be found in `errno`",N,N],[10,"sentinel","","",5,[[],["self"]]],[11,"last","","",4,[[],["self"]]],[11,"desc","","",4,[[["self"]],["str"]]],[11,"from_i32","","",4,[[["i32"]],["errno"]]],[11,"clear","","",4,N],[11,"result","","Returns `Ok(value)` if it does not contain the sentinel value. This should not be used when `-1` is not the errno sentinel value.",4,[[["s"]],["result"]]],[0,"features","nix","Feature tests for OS functionality",N,N],[5,"socket_atomic_cloexec","nix::features","Check if the OS supports atomic close-on-exec for sockets",N,[[],["bool"]]],[0,"fcntl","nix","",N,N],[3,"AtFlags","nix::fcntl","",N,N],[3,"OFlag","","Configuration options for opened files.",N,N],[3,"FdFlag","","Additional configuration flags for `fcntl`'s `F_SETFD`.",N,N],[4,"FcntlArg","","",N,N],[13,"F_DUPFD","","",6,N],[13,"F_DUPFD_CLOEXEC","","",6,N],[13,"F_GETFD","","",6,N],[13,"F_SETFD","","",6,N],[13,"F_GETFL","","",6,N],[13,"F_SETFL","","",6,N],[13,"F_SETLK","","",6,N],[13,"F_SETLKW","","",6,N],[13,"F_GETLK","","",6,N],[4,"FlockArg","","",N,N],[13,"LockShared","","",7,N],[13,"LockExclusive","","",7,N],[13,"Unlock","","",7,N],[13,"LockSharedNonblock","","",7,N],[13,"LockExclusiveNonblock","","",7,N],[13,"UnlockNonblock","","",7,N],[5,"open","","",N,[[["p"],["oflag"],["mode"]],["result",["rawfd"]]]],[5,"openat","","",N,[[["rawfd"],["p"],["oflag"],["mode"]],["result",["rawfd"]]]],[5,"readlink","","",N,N],[5,"readlinkat","","",N,N],[5,"fcntl","","",N,[[["rawfd"],["fcntlarg"]],["result",["c_int"]]]],[5,"flock","","",N,[[["rawfd"],["flockarg"]],["result"]]],[18,"AT_SYMLINK_NOFOLLOW","","",8,N],[11,"empty","","Returns an empty set of flags.",8,[[],["atflags"]]],[11,"all","","Returns the set containing all flags.",8,[[],["atflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",8,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",8,[[["c_int"]],["option",["atflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",8,[[["c_int"]],["atflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",8,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",8,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",8,[[["self"],["atflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",8,[[["self"],["atflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",8,[[["self"],["atflags"]]]],[11,"remove","","Removes the specified flags in-place.",8,[[["self"],["atflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",8,[[["self"],["atflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",8,[[["self"],["atflags"],["bool"]]]],[18,"O_ACCMODE","","Mask for the access mode of the file.",9,N],[18,"O_APPEND","","Open the file in append-only mode.",9,N],[18,"O_ASYNC","","Generate a signal when input or output becomes possible.",9,N],[18,"O_CLOEXEC","","Closes the file descriptor once an `execve` call is made.",9,N],[18,"O_CREAT","","Create the file if it does not exist.",9,N],[18,"O_DIRECT","","Try to minimize cache effects of the I/O for this file.",9,N],[18,"O_DIRECTORY","","If the specified path isn't a directory, fail.",9,N],[18,"O_EXCL","","Error out if a file was not created.",9,N],[18,"O_EXEC","","Open for execute only.",9,N],[18,"O_EXLOCK","","Open with an exclusive file lock.",9,N],[18,"O_FSYNC","","Same as `O_SYNC`.",9,N],[18,"O_NOCTTY","","Don't attach the device as the process' controlling terminal.",9,N],[18,"O_NDELAY","","Same as `O_NONBLOCK`.",9,N],[18,"O_NOFOLLOW","","`open()` will fail if the given path is a symbolic link.",9,N],[18,"O_NONBLOCK","","When possible, open the file in nonblocking mode.",9,N],[18,"O_RDONLY","","Only allow reading.",9,N],[18,"O_RDWR","","Allow both reading and writing.",9,N],[18,"O_SHLOCK","","Open with a shared file lock.",9,N],[18,"O_SYNC","","Implicitly follow each `write()` with an `fsync()`.",9,N],[18,"O_TRUNC","","Truncate an existing regular file to 0 length if it allows writing.",9,N],[18,"O_TTY_INIT","","Restore default TTY attributes.",9,N],[18,"O_WRONLY","","Only allow writing.",9,N],[11,"empty","","Returns an empty set of flags.",9,[[],["oflag"]]],[11,"all","","Returns the set containing all flags.",9,[[],["oflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",9,[[["c_int"]],["option",["oflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",9,[[["c_int"]],["oflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",9,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",9,[[["self"],["oflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",9,[[["self"],["oflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["self"],["oflag"]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["self"],["oflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["self"],["oflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",9,[[["self"],["oflag"],["bool"]]]],[18,"FD_CLOEXEC","","The file descriptor will automatically be closed during a successful `execve(2)`.",10,N],[11,"empty","","Returns an empty set of flags.",10,[[],["fdflag"]]],[11,"all","","Returns the set containing all flags.",10,[[],["fdflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",10,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",10,[[["c_int"]],["option",["fdflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",10,[[["c_int"]],["fdflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",10,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",10,[[["self"],["fdflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",10,[[["self"],["fdflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",10,[[["self"],["fdflag"]]]],[11,"remove","","Removes the specified flags in-place.",10,[[["self"],["fdflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",10,[[["self"],["fdflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",10,[[["self"],["fdflag"],["bool"]]]],[0,"ifaddrs","nix","Query network interface addresses",N,N],[3,"InterfaceAddress","nix::ifaddrs","Describes a single address for an interface as returned by `getifaddrs`.",N,N],[12,"interface_name","","Name of the network interface",11,N],[12,"flags","","Flags as from `SIOCGIFFLAGS` ioctl",11,N],[12,"address","","Network address of this interface",11,N],[12,"netmask","","Netmask of this interface",11,N],[12,"broadcast","","Broadcast address of this interface, if applicable",11,N],[12,"destination","","Point-to-point destination address",11,N],[3,"InterfaceAddressIterator","","Holds the results of `getifaddrs`.",N,N],[5,"getifaddrs","","Get interface addresses using libc's `getifaddrs`",N,[[],["result",["interfaceaddressiterator"]]]],[0,"mqueue","nix","Posix Message Queue functions",N,N],[3,"MQ_OFlag","nix::mqueue","",N,N],[3,"FdFlag","","",N,N],[3,"MqAttr","","",N,N],[5,"mq_open","","Open a message queue",N,[[["cstring"],["mq_oflag"],["mode"],["option",["mqattr"]]],["result",["mqd_t"]]]],[5,"mq_unlink","","Remove a message queue",N,[[["cstring"]],["result"]]],[5,"mq_close","","Close a message queue",N,[[["mqd_t"]],["result"]]],[5,"mq_receive","","Receive a message from a message queue",N,N],[5,"mq_send","","Send a message to a message queue",N,N],[5,"mq_getattr","","Get message queue attributes",N,[[["mqd_t"]],["result",["mqattr"]]]],[5,"mq_setattr","","Set the attributes of the message queue. Only `O_NONBLOCK` can be set, everything else will be ignored Returns the old attributes It is recommend to use the `mq_set_nonblock()` and `mq_remove_nonblock()` convenience functions as they are easier to use",N,[[["mqd_t"],["mqattr"]],["result",["mqattr"]]]],[5,"mq_set_nonblock","","Convenience function. Sets the `O_NONBLOCK` attribute for a given message queue descriptor Returns the old attributes",N,[[["mqd_t"]],["result",["mqattr"]]]],[5,"mq_remove_nonblock","","Convenience function. Removes `O_NONBLOCK` attribute for a given message queue descriptor Returns the old attributes",N,[[["mqd_t"]],["result",["mqattr"]]]],[18,"O_RDONLY","","",12,N],[18,"O_WRONLY","","",12,N],[18,"O_RDWR","","",12,N],[18,"O_CREAT","","",12,N],[18,"O_EXCL","","",12,N],[18,"O_NONBLOCK","","",12,N],[18,"O_CLOEXEC","","",12,N],[11,"empty","","Returns an empty set of flags.",12,[[],["mq_oflag"]]],[11,"all","","Returns the set containing all flags.",12,[[],["mq_oflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",12,[[["c_int"]],["option",["mq_oflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",12,[[["c_int"]],["mq_oflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",12,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",12,[[["self"],["mq_oflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",12,[[["self"],["mq_oflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["self"],["mq_oflag"]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["self"],["mq_oflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["self"],["mq_oflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",12,[[["self"],["mq_oflag"],["bool"]]]],[18,"FD_CLOEXEC","","",13,N],[11,"empty","","Returns an empty set of flags.",13,[[],["fdflag"]]],[11,"all","","Returns the set containing all flags.",13,[[],["fdflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",13,[[["c_int"]],["option",["fdflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",13,[[["c_int"]],["fdflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",13,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",13,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",13,[[["self"],["fdflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",13,[[["self"],["fdflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",13,[[["self"],["fdflag"]]]],[11,"remove","","Removes the specified flags in-place.",13,[[["self"],["fdflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[["self"],["fdflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",13,[[["self"],["fdflag"],["bool"]]]],[11,"new","","",14,[[["c_long"],["c_long"],["c_long"],["c_long"]],["mqattr"]]],[11,"flags","","",14,[[["self"]],["c_long"]]],[0,"net","nix","Functionality involving network interfaces",N,N],[0,"if_","nix::net","Network interface name resolution.",N,N],[3,"InterfaceFlags","nix::net::if_","Standard interface flags, used by `getifaddrs`",N,N],[5,"if_nametoindex","","Resolve an interface into a interface number.",N,[[["p"]],["result",["c_uint"]]]],[18,"IFF_UP","","Interface is running. (see `netdevice(7)`)",15,N],[18,"IFF_BROADCAST","","Valid broadcast address set. (see `netdevice(7)`)",15,N],[18,"IFF_DEBUG","","Internal debugging flag. (see `netdevice(7)`)",15,N],[18,"IFF_LOOPBACK","","Interface is a loopback interface. (see `netdevice(7)`)",15,N],[18,"IFF_POINTOPOINT","","Interface is a point-to-point link. (see `netdevice(7)`)",15,N],[18,"IFF_RUNNING","","Resources allocated. (see `netdevice(7)`)",15,N],[18,"IFF_NOARP","","No arp protocol, L2 destination address not set. (see `netdevice(7)`)",15,N],[18,"IFF_PROMISC","","Interface is in promiscuous mode. (see `netdevice(7)`)",15,N],[18,"IFF_ALLMULTI","","Receive all multicast packets. (see `netdevice(7)`)",15,N],[18,"IFF_OACTIVE","","transmission in progress, tx hardware queue is full",15,N],[18,"IFF_SIMPLEX","","Can't hear own transmissions.",15,N],[18,"IFF_MULTICAST","","Supports multicast. (see `netdevice(7)`)",15,N],[18,"IFF_LINK0","","Per link layer defined bit.",15,N],[18,"IFF_LINK1","","Per link layer defined bit.",15,N],[18,"IFF_LINK2","","Per link layer defined bit.",15,N],[18,"IFF_ALTPHYS","","Use alternate physical connection.",15,N],[18,"IFF_CANTCONFIG","","Unconfigurable using ioctl(2).",15,N],[18,"IFF_PPROMISC","","User-requested promisc mode.",15,N],[18,"IFF_MONITOR","","User-requested monitor mode.",15,N],[18,"IFF_STATICARP","","Static ARP.",15,N],[18,"IFF_DYING","","Interface is winding down",15,N],[18,"IFF_RENAMING","","Interface is being renamed",15,N],[11,"empty","","Returns an empty set of flags.",15,[[],["interfaceflags"]]],[11,"all","","Returns the set containing all flags.",15,[[],["interfaceflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",15,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",15,[[["c_int"]],["option",["interfaceflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",15,[[["c_int"]],["interfaceflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",15,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",15,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",15,[[["self"],["interfaceflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",15,[[["self"],["interfaceflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",15,[[["self"],["interfaceflags"]]]],[11,"remove","","Removes the specified flags in-place.",15,[[["self"],["interfaceflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",15,[[["self"],["interfaceflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",15,[[["self"],["interfaceflags"],["bool"]]]],[0,"poll","nix","Wait for events to trigger on specific file descriptors",N,N],[3,"PollFd","nix::poll","This is a wrapper around `libc::pollfd`.",N,N],[3,"EventFlags","","These flags define the different events that can be monitored by `poll` and `ppoll`",N,N],[5,"poll","","`poll` waits for one of a set of file descriptors to become ready to perform I/O. (`poll(2)`)",N,N],[5,"ppoll","","`ppoll()` allows an application to safely wait until either a file descriptor becomes ready or until a signal is caught. (`poll(2)`)",N,N],[11,"new","","Creates a new `PollFd` specifying the events of interest for a given file descriptor.",16,[[["rawfd"],["eventflags"]],["pollfd"]]],[11,"revents","","Returns the events that occured in the last call to `poll` or `ppoll`.",16,[[["self"]],["option",["eventflags"]]]],[18,"POLLIN","","There is data to read.",17,N],[18,"POLLPRI","","There is some exceptional condition on the file descriptor.",17,N],[18,"POLLOUT","","Writing is now possible, though a write larger that the available space in a socket or pipe will still block (unless `O_NONBLOCK` is set).",17,N],[18,"POLLRDNORM","","Equivalent to `POLLIN`",17,N],[18,"POLLWRNORM","","Equivalent to `POLLOUT`",17,N],[18,"POLLRDBAND","","Priority band data can be read (generally unused on Linux).",17,N],[18,"POLLWRBAND","","Priority data may be written.",17,N],[18,"POLLERR","","Error condition (only returned in `PollFd::revents`; ignored in `PollFd::new`). This bit is also set for a file descriptor referring to the write end of a pipe when the read end has been closed.",17,N],[18,"POLLHUP","","Hang up (only returned in `PollFd::revents`; ignored in `PollFd::new`). Note that when reading from a channel such as a pipe or a stream socket, this event merely indicates that the peer closed its end of the channel.  Subsequent reads from the channel will return 0 (end of file) only after all outstanding data in the channel has been consumed.",17,N],[18,"POLLNVAL","","Invalid request: `fd` not open (only returned in `PollFd::revents`; ignored in `PollFd::new`).",17,N],[11,"empty","","Returns an empty set of flags.",17,[[],["eventflags"]]],[11,"all","","Returns the set containing all flags.",17,[[],["eventflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",17,[[["self"]],["c_short"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",17,[[["c_short"]],["option",["eventflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",17,[[["c_short"]],["eventflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",17,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",17,[[["self"],["eventflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",17,[[["self"],["eventflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",17,[[["self"],["eventflags"]]]],[11,"remove","","Removes the specified flags in-place.",17,[[["self"],["eventflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",17,[[["self"],["eventflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",17,[[["self"],["eventflags"],["bool"]]]],[0,"pty","nix","Create master and slave virtual pseudo-terminals (PTYs)",N,N],[6,"SessionId","nix::pty","",N,N],[3,"Winsize","","",N,N],[12,"ws_row","","",18,N],[12,"ws_col","","",18,N],[12,"ws_xpixel","","",18,N],[12,"ws_ypixel","","",18,N],[3,"OpenptyResult","","Representation of a master/slave pty pair",N,N],[12,"master","","The master port in a virtual pty pair",19,N],[12,"slave","","The slave port in a virtual pty pair",19,N],[3,"PtyMaster","","Representation of the Master device in a master/slave pty pair",N,N],[5,"grantpt","","Grant access to a slave pseudoterminal (see `grantpt(3)`)",N,[[["ptymaster"]],["result"]]],[5,"posix_openpt","","Open a pseudoterminal device (see `posix_openpt(3)`)",N,[[["oflag"]],["result",["ptymaster"]]]],[5,"ptsname","","Get the name of the slave pseudoterminal (see `ptsname(3)`)",N,[[["ptymaster"]],["result",["string"]]]],[5,"unlockpt","","Unlock a pseudoterminal master/slave pseudoterminal pair (see `unlockpt(3)`)",N,[[["ptymaster"]],["result"]]],[5,"openpty","","Create a new pseudoterminal, returning the slave and master file descriptors in `OpenptyResult` (see `openpty`).",N,[[["t"],["u"]],["result",["openptyresult"]]]],[0,"sys","nix","",N,N],[0,"aio","nix::sys","POSIX Asynchronous I/O",N,N],[3,"AioCb","nix::sys::aio","AIO Control Block.",N,N],[3,"LioCb","","LIO Control Block.",N,N],[12,"aiocbs","","A collection of [`AioCb`]s.  All of these will be issued simultaneously by the [`listio`] method.",20,N],[4,"AioFsyncMode","","Mode for `AioCb::fsync`.  Controls whether only data or both data and metadata are synced.",N,N],[13,"O_SYNC","","do it like `fsync`",21,N],[4,"LioOpcode","","When used with `lio_listio`, determines whether a given `aiocb` should be used for a read operation, a write operation, or ignored.  Has no effect for any other aio functions.",N,N],[13,"LIO_NOP","","",22,N],[13,"LIO_WRITE","","",22,N],[13,"LIO_READ","","",22,N],[4,"LioMode","","Mode for `lio_listio`",N,N],[13,"LIO_WAIT","","Requests that `lio_listio` block until all requested operations have been completed",23,N],[13,"LIO_NOWAIT","","Requests that `lio_listio` return immediately",23,N],[4,"AioCancelStat","","Return values for `AioCb::cancel` and `aio_cancel_all`",N,N],[13,"AioCanceled","","All outstanding requests were canceled",24,N],[13,"AioNotCanceled","","Some requests were not canceled.  Their status should be checked with `AioCb::error`",24,N],[13,"AioAllDone","","All of the requests have already finished",24,N],[4,"Buffer","","Owns (uniquely or shared) a memory buffer to keep it from `Drop`ing while the kernel has a pointer to it.",N,N],[13,"None","","No buffer to own.",25,N],[13,"Phantom","","Keeps a reference to a slice",25,N],[13,"BoxedSlice","","Generic thing that keeps a buffer from dropping",25,N],[13,"BoxedMutSlice","","Generic thing that keeps a mutable buffer from dropping",25,N],[5,"aio_cancel_all","","Cancels outstanding AIO requests for a given file descriptor.",N,[[["rawfd"]],["result",["aiocancelstat"]]]],[5,"aio_suspend","","Suspends the calling process until at least one of the specified `AioCb`s has completed, a signal is delivered, or the timeout has passed.",N,N],[11,"buffer","","Remove the inner `Buffer` and return it",26,[[["self"]],["buffer"]]],[11,"boxed_slice","","Remove the inner boxed slice, if any, and return it.",26,[[["self"]],["option",["box"]]]],[11,"boxed_mut_slice","","Remove the inner boxed mutable slice, if any, and return it.",26,[[["self"]],["option",["box"]]]],[11,"fd","","Returns the underlying file descriptor associated with the `AioCb`",26,[[["self"]],["rawfd"]]],[11,"from_fd","","Constructs a new `AioCb` with no associated buffer.",26,[[["rawfd"],["c_int"],["sigevnotify"]],["aiocb"]]],[11,"from_mut_slice","","Constructs a new `AioCb` from a mutable slice.",26,N],[11,"from_boxed_slice","","The safest and most flexible way to create an `AioCb`.",26,[[["rawfd"],["off_t"],["box",["borrow"]],["c_int"],["sigevnotify"],["lioopcode"]],["aiocb"]]],[11,"from_boxed_mut_slice","","The safest and most flexible way to create an `AioCb` for reading.",26,[[["rawfd"],["off_t"],["box",["borrowmut"]],["c_int"],["sigevnotify"],["lioopcode"]],["aiocb"]]],[11,"from_mut_ptr","","Constructs a new `AioCb` from a mutable raw pointer",26,N],[11,"from_ptr","","Constructs a new `AioCb` from a raw pointer.",26,N],[11,"from_slice","","Like `from_mut_slice`, but works on constant slices rather than mutable slices.",26,N],[11,"set_sigev_notify","","Update the notification settings for an existing `aiocb`",26,[[["self"],["sigevnotify"]]]],[11,"cancel","","Cancels an outstanding AIO request.",26,[[["self"]],["result",["aiocancelstat"]]]],[11,"error","","Retrieve error status of an asynchronous operation.",26,[[["self"]],["result"]]],[11,"fsync","","An asynchronous version of `fsync(2)`.",26,[[["self"],["aiofsyncmode"]],["result"]]],[11,"lio_opcode","","Returns the `aiocb`'s `LioOpcode` field",26,[[["self"]],["option",["lioopcode"]]]],[11,"nbytes","","Returns the requested length of the aio operation in bytes",26,[[["self"]],["usize"]]],[11,"offset","","Returns the file offset stored in the `AioCb`",26,[[["self"]],["off_t"]]],[11,"priority","","Returns the priority of the `AioCb`",26,[[["self"]],["c_int"]]],[11,"read","","Asynchronously reads from a file descriptor into a buffer",26,[[["self"]],["result"]]],[11,"sigevent","","Returns the `SigEvent` stored in the `AioCb`",26,[[["self"]],["sigevent"]]],[11,"aio_return","","Retrieve return status of an asynchronous operation.",26,[[["self"]],["result",["isize"]]]],[11,"write","","Asynchronously writes from a buffer to a file descriptor",26,[[["self"]],["result"]]],[11,"with_capacity","","Initialize an empty `LioCb`",20,[[["usize"]],["liocb"]]],[11,"listio","","Submits multiple asynchronous I/O requests with a single system call.",20,[[["self"],["liomode"],["sigevnotify"]],["result"]]],[11,"listio_resubmit","","Resubmits any incomplete operations with [`lio_listio`].",20,[[["self"],["liomode"],["sigevnotify"]],["result"]]],[11,"aio_return","","Collect final status for an individual `AioCb` submitted as part of an `LioCb`.",20,[[["self"],["usize"]],["result",["isize"]]]],[11,"error","","Retrieve error status of an individual `AioCb` submitted as part of an `LioCb`.",20,[[["self"],["usize"]],["result"]]],[0,"event","nix::sys","",N,N],[3,"KEvent","nix::sys::event","",N,N],[3,"EventFlag","","",N,N],[3,"FilterFlag","","",N,N],[4,"EventFilter","","",N,N],[13,"EVFILT_AIO","","",27,N],[13,"EVFILT_EMPTY","","Returns whenever there is no remaining data in the write buffer",27,N],[13,"EVFILT_FS","","",27,N],[13,"EVFILT_LIO","","",27,N],[13,"EVFILT_PROC","","",27,N],[13,"EVFILT_PROCDESC","","Returns events associated with the process referenced by a given process descriptor, created by `pdfork()`. The events to monitor are:",27,N],[13,"EVFILT_READ","","",27,N],[13,"EVFILT_SENDFILE","","Returns whenever an asynchronous `sendfile()` call completes.",27,N],[13,"EVFILT_SIGNAL","","",27,N],[13,"EVFILT_TIMER","","",27,N],[13,"EVFILT_USER","","",27,N],[13,"EVFILT_VNODE","","",27,N],[13,"EVFILT_WRITE","","",27,N],[5,"kqueue","","",N,[[],["result",["rawfd"]]]],[5,"kevent","","",N,N],[5,"kevent_ts","","",N,N],[5,"ev_set","","",N,[[["kevent"],["usize"],["eventfilter"],["eventflag"],["filterflag"],["intptr_t"]]]],[6,"type_of_event_flag","","",N,N],[18,"EV_ADD","","",28,N],[18,"EV_CLEAR","","",28,N],[18,"EV_DELETE","","",28,N],[18,"EV_DISABLE","","",28,N],[18,"EV_DISPATCH","","",28,N],[18,"EV_DROP","","",28,N],[18,"EV_ENABLE","","",28,N],[18,"EV_EOF","","",28,N],[18,"EV_ERROR","","",28,N],[18,"EV_FLAG1","","",28,N],[18,"EV_ONESHOT","","",28,N],[18,"EV_RECEIPT","","",28,N],[18,"EV_SYSFLAGS","","",28,N],[11,"empty","","Returns an empty set of flags.",28,[[],["eventflag"]]],[11,"all","","Returns the set containing all flags.",28,[[],["eventflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",28,[[["self"]],["type_of_event_flag"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",28,[[["type_of_event_flag"]],["option",["eventflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",28,[[["type_of_event_flag"]],["eventflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",28,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",28,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",28,[[["self"],["eventflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",28,[[["self"],["eventflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",28,[[["self"],["eventflag"]]]],[11,"remove","","Removes the specified flags in-place.",28,[[["self"],["eventflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",28,[[["self"],["eventflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",28,[[["self"],["eventflag"],["bool"]]]],[18,"NOTE_ATTRIB","","",29,N],[18,"NOTE_CHILD","","",29,N],[18,"NOTE_DELETE","","",29,N],[18,"NOTE_EXEC","","",29,N],[18,"NOTE_EXIT","","",29,N],[18,"NOTE_EXTEND","","",29,N],[18,"NOTE_FFAND","","",29,N],[18,"NOTE_FFCOPY","","",29,N],[18,"NOTE_FFCTRLMASK","","",29,N],[18,"NOTE_FFLAGSMASK","","",29,N],[18,"NOTE_FFNOP","","",29,N],[18,"NOTE_FFOR","","",29,N],[18,"NOTE_FORK","","",29,N],[18,"NOTE_LINK","","",29,N],[18,"NOTE_LOWAT","","",29,N],[18,"NOTE_MSECONDS","","",29,N],[18,"NOTE_NSECONDS","","",29,N],[18,"NOTE_PCTRLMASK","","",29,N],[18,"NOTE_PDATAMASK","","",29,N],[18,"NOTE_RENAME","","",29,N],[18,"NOTE_REVOKE","","",29,N],[18,"NOTE_SECONDS","","",29,N],[18,"NOTE_TRACK","","",29,N],[18,"NOTE_TRACKERR","","",29,N],[18,"NOTE_TRIGGER","","",29,N],[18,"NOTE_USECONDS","","",29,N],[18,"NOTE_WRITE","","",29,N],[11,"empty","","Returns an empty set of flags.",29,[[],["filterflag"]]],[11,"all","","Returns the set containing all flags.",29,[[],["filterflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",29,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",29,[[["u32"]],["option",["filterflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",29,[[["u32"]],["filterflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",29,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",29,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",29,[[["self"],["filterflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",29,[[["self"],["filterflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",29,[[["self"],["filterflag"]]]],[11,"remove","","Removes the specified flags in-place.",29,[[["self"],["filterflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",29,[[["self"],["filterflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",29,[[["self"],["filterflag"],["bool"]]]],[11,"new","","",30,[[["uintptr_t"],["eventfilter"],["eventflag"],["filterflag"],["intptr_t"],["intptr_t"]],["kevent"]]],[11,"ident","","",30,[[["self"]],["uintptr_t"]]],[11,"filter","","",30,[[["self"]],["eventfilter"]]],[11,"flags","","",30,[[["self"]],["eventflag"]]],[11,"fflags","","",30,[[["self"]],["filterflag"]]],[11,"data","","",30,[[["self"]],["intptr_t"]]],[11,"udata","","",30,[[["self"]],["intptr_t"]]],[0,"ioctl","nix::sys","Provide helpers for making ioctl system calls.",N,N],[0,"mman","","",N,N],[3,"ProtFlags","nix::sys::mman","Desired memory protection of a memory mapping.",N,N],[3,"MapFlags","","Additional parameters for `mmap()`.",N,N],[3,"MsFlags","","Configuration flags for `msync`.",N,N],[3,"MlockAllFlags","","Flags for `mlockall`.",N,N],[4,"MmapAdvise","","Usage information for a range of memory to allow for performance optimizations by the kernel.",N,N],[13,"MADV_NORMAL","","No further special treatment. This is the default.",31,N],[13,"MADV_RANDOM","","Expect random page references.",31,N],[13,"MADV_SEQUENTIAL","","Expect sequential page references.",31,N],[13,"MADV_WILLNEED","","Expect access in the near future.",31,N],[13,"MADV_DONTNEED","","Do not expect access in the near future.",31,N],[13,"MADV_FREE","","Specify that the application no longer needs the pages in the given range.",31,N],[13,"MADV_NOSYNC","","Request that the system not flush the current range to disk unless it needs to.",31,N],[13,"MADV_AUTOSYNC","","Undoes the effects of `MADV_NOSYNC` for any future pages dirtied within the given range.",31,N],[13,"MADV_NOCORE","","Region is not included in a core file.",31,N],[13,"MADV_CORE","","Include region in a core file",31,N],[13,"MADV_PROTECT","","",31,N],[5,"mlock","","Locks all memory pages that contain part of the address range with `length` bytes starting at `addr`. Locked pages never move to the swap area.",N,N],[5,"munlock","","Unlocks all memory pages that contain part of the address range with `length` bytes starting at `addr`.",N,N],[5,"mlockall","","Locks all memory pages mapped into this process' address space. Locked pages never move to the swap area.",N,[[["mlockallflags"]],["result"]]],[5,"munlockall","","Unlocks all memory pages mapped into this process' address space.",N,[[],["result"]]],[5,"mmap","","Calls to mmap are inherently unsafe, so they must be made in an unsafe block. Typically a higher-level abstraction will hide the unsafe interactions with the mmap'd region.",N,N],[5,"munmap","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"shm_open","","",N,[[["p"],["oflag"],["mode"]],["result",["rawfd"]]]],[5,"shm_unlink","","",N,[[["p"]],["result"]]],[18,"PROT_NONE","","Pages cannot be accessed.",32,N],[18,"PROT_READ","","Pages can be read.",32,N],[18,"PROT_WRITE","","Pages can be written.",32,N],[18,"PROT_EXEC","","Pages can be executed",32,N],[11,"empty","","Returns an empty set of flags.",32,[[],["protflags"]]],[11,"all","","Returns the set containing all flags.",32,[[],["protflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",32,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",32,[[["c_int"]],["option",["protflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",32,[[["c_int"]],["protflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",32,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",32,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",32,[[["self"],["protflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",32,[[["self"],["protflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",32,[[["self"],["protflags"]]]],[11,"remove","","Removes the specified flags in-place.",32,[[["self"],["protflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",32,[[["self"],["protflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",32,[[["self"],["protflags"],["bool"]]]],[18,"MAP_FILE","","Compatibility flag. Ignored.",33,N],[18,"MAP_SHARED","","Share this mapping. Mutually exclusive with `MAP_PRIVATE`.",33,N],[18,"MAP_PRIVATE","","Create a private copy-on-write mapping. Mutually exclusive with `MAP_SHARED`.",33,N],[18,"MAP_FIXED","","Place the mapping at exactly the address specified in `addr`.",33,N],[18,"MAP_ANON","","Synonym for `MAP_ANONYMOUS`.",33,N],[18,"MAP_ANONYMOUS","","The mapping is not backed by any file.",33,N],[18,"MAP_NOSYNC","","Causes dirtied data in the specified range to be flushed to disk only when necessary.",33,N],[18,"MAP_HASSEMAPHORE","","Region may contain semaphores.",33,N],[18,"MAP_STACK","","Region grows down, like a stack.",33,N],[11,"empty","","Returns an empty set of flags.",33,[[],["mapflags"]]],[11,"all","","Returns the set containing all flags.",33,[[],["mapflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",33,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",33,[[["c_int"]],["option",["mapflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",33,[[["c_int"]],["mapflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",33,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",33,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",33,[[["self"],["mapflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",33,[[["self"],["mapflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",33,[[["self"],["mapflags"]]]],[11,"remove","","Removes the specified flags in-place.",33,[[["self"],["mapflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",33,[[["self"],["mapflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",33,[[["self"],["mapflags"],["bool"]]]],[18,"MS_ASYNC","","Schedule an update but return immediately.",34,N],[18,"MS_INVALIDATE","","Invalidate all cached data.",34,N],[18,"MS_SYNC","","Perform an update and wait for it to complete.",34,N],[11,"empty","","Returns an empty set of flags.",34,[[],["msflags"]]],[11,"all","","Returns the set containing all flags.",34,[[],["msflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",34,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",34,[[["c_int"]],["option",["msflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",34,[[["c_int"]],["msflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",34,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",34,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",34,[[["self"],["msflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",34,[[["self"],["msflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",34,[[["self"],["msflags"]]]],[11,"remove","","Removes the specified flags in-place.",34,[[["self"],["msflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",34,[[["self"],["msflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",34,[[["self"],["msflags"],["bool"]]]],[18,"MCL_CURRENT","","Lock pages that are currently mapped into the address space of the process.",35,N],[18,"MCL_FUTURE","","Lock pages which will become mapped into the address space of the process in the future.",35,N],[11,"empty","","Returns an empty set of flags.",35,[[],["mlockallflags"]]],[11,"all","","Returns the set containing all flags.",35,[[],["mlockallflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",35,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",35,[[["c_int"]],["option",["mlockallflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",35,[[["c_int"]],["mlockallflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",35,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",35,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",35,[[["self"],["mlockallflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",35,[[["self"],["mlockallflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",35,[[["self"],["mlockallflags"]]]],[11,"remove","","Removes the specified flags in-place.",35,[[["self"],["mlockallflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",35,[[["self"],["mlockallflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",35,[[["self"],["mlockallflags"],["bool"]]]],[0,"pthread","nix::sys","",N,N],[5,"pthread_self","nix::sys::pthread","Obtain ID of the calling thread (see `pthread_self(3)`",N,[[],["pthread"]]],[6,"Pthread","","",N,N],[0,"ptrace","nix::sys","",N,N],[4,"Request","nix::sys::ptrace","Ptrace Request enum defining the action to be taken.",N,N],[13,"PT_TRACE_ME","","",36,N],[13,"PT_READ_I","","",36,N],[13,"PT_READ_D","","",36,N],[13,"PT_WRITE_I","","",36,N],[13,"PT_WRITE_D","","",36,N],[13,"PT_CONTINUE","","",36,N],[13,"PT_KILL","","",36,N],[13,"PT_STEP","","",36,N],[13,"PT_ATTACH","","",36,N],[13,"PT_DETACH","","",36,N],[5,"traceme","","Sets the process as traceable, as with `ptrace(PT_TRACEME, ...)`",N,[[],["result"]]],[5,"attach","","Attach to a running process, as with `ptrace(PT_ATTACH, ...)`",N,[[["pid"]],["result"]]],[5,"detach","","Detaches the current running process, as with `ptrace(PT_DETACH, ...)`",N,[[["pid"]],["result"]]],[5,"cont","","Restart the stopped tracee process, as with `ptrace(PTRACE_CONT, ...)`",N,[[["pid"],["t"]],["result"]]],[5,"kill","","Issues a kill request as with `ptrace(PT_KILL, ...)`",N,[[["pid"]],["result"]]],[5,"step","","Move the stopped tracee process forward by a single step as with `ptrace(PT_STEP, ...)`",N,[[["pid"],["t"]],["result"]]],[5,"read","","Reads a word from a processes memory at the given address",N,[[["pid"],["addresstype"]],["result",["c_int"]]]],[5,"write","","Writes a word into the processes memory at the given address",N,[[["pid"],["addresstype"],["c_int"]],["result"]]],[6,"RequestType","","",N,N],[0,"select","nix::sys","",N,N],[17,"FD_SETSIZE","nix::sys::select","",N,N],[3,"FdSet","","",N,N],[5,"select","","Monitors file descriptors for readiness",N,[[["n"],["r"],["w"],["e"],["t"]],["result",["c_int"]]]],[5,"pselect","","Monitors file descriptors for readiness with an altered signal mask.",N,[[["n"],["r"],["w"],["e"],["t"],["s"]],["result",["c_int"]]]],[11,"new","","",37,[[],["fdset"]]],[11,"insert","","",37,[[["self"],["rawfd"]]]],[11,"remove","","",37,[[["self"],["rawfd"]]]],[11,"contains","","",37,[[["self"],["rawfd"]],["bool"]]],[11,"clear","","",37,[[["self"]]]],[11,"highest","","Finds the highest file descriptor in the set.",37,[[["self"]],["option",["rawfd"]]]],[0,"sendfile","nix::sys","",N,N],[3,"SfFlags","nix::sys::sendfile","Configuration options for `sendfile`.",N,N],[5,"sendfile","","Read up to `count` bytes from `in_fd` starting at `offset` and write to `out_sock`.",N,N],[18,"SF_NODISKIO","","Causes `sendfile` to return EBUSY instead of blocking when attempting to read a busy page.",38,N],[18,"SF_SYNC","","Causes `sendfile` to sleep until the network stack releases its reference to the VM pages read. When `sendfile` returns, the data is not guaranteed to have been sent, but it is safe to modify the file.",38,N],[18,"SF_USER_READAHEAD","","Causes `sendfile` to cache exactly the number of pages specified in the `readahead` parameter, disabling caching heuristics.",38,N],[18,"SF_NOCACHE","","Causes `sendfile` not to cache the data read.",38,N],[11,"empty","","Returns an empty set of flags.",38,[[],["sfflags"]]],[11,"all","","Returns the set containing all flags.",38,[[],["sfflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",38,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",38,[[["c_int"]],["option",["sfflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",38,[[["c_int"]],["sfflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",38,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",38,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",38,[[["self"],["sfflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",38,[[["self"],["sfflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",38,[[["self"],["sfflags"]]]],[11,"remove","","Removes the specified flags in-place.",38,[[["self"],["sfflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",38,[[["self"],["sfflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",38,[[["self"],["sfflags"],["bool"]]]],[0,"signal","nix::sys","",N,N],[3,"SigEvent","nix::sys::signal","Used to request asynchronous notification of the completion of certain events, such as POSIX AIO and timers.",N,N],[3,"SignalIterator","","",N,N],[3,"SaFlags","","",N,N],[3,"SigSet","","",N,N],[3,"SigAction","","Action to take on receipt of a signal. Corresponds to `sigaction`.",N,N],[4,"Signal","","",N,N],[13,"SIGHUP","","",39,N],[13,"SIGINT","","",39,N],[13,"SIGQUIT","","",39,N],[13,"SIGILL","","",39,N],[13,"SIGTRAP","","",39,N],[13,"SIGABRT","","",39,N],[13,"SIGBUS","","",39,N],[13,"SIGFPE","","",39,N],[13,"SIGKILL","","",39,N],[13,"SIGUSR1","","",39,N],[13,"SIGSEGV","","",39,N],[13,"SIGUSR2","","",39,N],[13,"SIGPIPE","","",39,N],[13,"SIGALRM","","",39,N],[13,"SIGTERM","","",39,N],[13,"SIGCHLD","","",39,N],[13,"SIGCONT","","",39,N],[13,"SIGSTOP","","",39,N],[13,"SIGTSTP","","",39,N],[13,"SIGTTIN","","",39,N],[13,"SIGTTOU","","",39,N],[13,"SIGURG","","",39,N],[13,"SIGXCPU","","",39,N],[13,"SIGXFSZ","","",39,N],[13,"SIGVTALRM","","",39,N],[13,"SIGPROF","","",39,N],[13,"SIGWINCH","","",39,N],[13,"SIGIO","","",39,N],[13,"SIGSYS","","",39,N],[13,"SIGEMT","","",39,N],[13,"SIGINFO","","",39,N],[4,"SigmaskHow","","",N,N],[13,"SIG_BLOCK","","",40,N],[13,"SIG_UNBLOCK","","",40,N],[13,"SIG_SETMASK","","",40,N],[4,"SigHandler","","A signal handler.",N,N],[13,"SigDfl","","Default signal handling.",41,N],[13,"SigIgn","","Request that the signal be ignored.",41,N],[13,"Handler","","Use the given signal-catching function, which takes in the signal.",41,N],[13,"SigAction","","Use the given signal-catching function, which takes in the signal, information about how the signal was generated, and a pointer to the threads `ucontext_t`.",41,N],[4,"SigevNotify","","Used to request asynchronous notification of certain events, for example, with POSIX AIO, POSIX message queues, and POSIX timers.",N,N],[13,"SigevNone","","No notification will be delivered",42,N],[13,"SigevSignal","","The signal given by `signal` will be delivered to the process.  The value in `si_value` will be present in the `si_value` field of the `siginfo_t` structure of the queued signal.",42,N],[12,"signal","nix::sys::signal::SigevNotify","",42,N],[12,"si_value","","",42,N],[13,"SigevKevent","nix::sys::signal","A new `kevent` is posted to the kqueue `kq`.  The `kevent`'s `udata` field will contain the value in `udata`.",42,N],[12,"kq","nix::sys::signal::SigevNotify","",42,N],[12,"udata","","",42,N],[13,"SigevThreadId","nix::sys::signal","The signal `signal` is queued to the thread whose LWP ID is given in `thread_id`.  The value stored in `si_value` will be present in the `si_value` of the `siginfo_t` structure of the queued signal.",42,N],[12,"signal","nix::sys::signal::SigevNotify","",42,N],[12,"thread_id","","",42,N],[12,"si_value","","",42,N],[5,"sigaction","nix::sys::signal","Changes the action taken by a process on receipt of a specific signal.",N,[[["signal"],["sigaction"]],["result",["sigaction"]]]],[5,"pthread_sigmask","","Manages the signal mask (set of blocked signals) for the calling thread.",N,[[["sigmaskhow"],["option",["sigset"]],["option",["sigset"]]],["result"]]],[5,"sigprocmask","","Examine and change blocked signals.",N,[[["sigmaskhow"],["option",["sigset"]],["option",["sigset"]]],["result"]]],[5,"kill","","",N,[[["pid"],["t"]],["result"]]],[5,"raise","","",N,[[["signal"]],["result"]]],[11,"new","","Note: this constructor does not allow the user to set the `sigev_notify_kevent_flags` field.  That's considered ok because on FreeBSD at least those flags don't do anything useful.  That field is part of a union that shares space with the more genuinely useful fields.",43,[[["sigevnotify"]],["sigevent"]]],[11,"sigevent","","",43,[[["self"]],["sigevent"]]],[6,"type_of_thread_id","","",N,N],[17,"NSIG","","",N,N],[17,"SIGIOT","","",N,N],[17,"SIGPOLL","","",N,N],[17,"SIGUNUSED","","",N,N],[11,"iterator","","",39,[[],["signaliterator"]]],[11,"from_c_int","","",39,[[["c_int"]],["result",["signal"]]]],[18,"SA_NOCLDSTOP","","",44,N],[18,"SA_NOCLDWAIT","","",44,N],[18,"SA_NODEFER","","",44,N],[18,"SA_ONSTACK","","",44,N],[18,"SA_RESETHAND","","",44,N],[18,"SA_RESTART","","",44,N],[18,"SA_SIGINFO","","",44,N],[11,"empty","","Returns an empty set of flags.",44,[[],["saflags"]]],[11,"all","","Returns the set containing all flags.",44,[[],["saflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",44,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",44,[[["c_int"]],["option",["saflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",44,[[["c_int"]],["saflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",44,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",44,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",44,[[["self"],["saflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",44,[[["self"],["saflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",44,[[["self"],["saflags"]]]],[11,"remove","","Removes the specified flags in-place.",44,[[["self"],["saflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",44,[[["self"],["saflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",44,[[["self"],["saflags"],["bool"]]]],[11,"all","","",45,[[],["sigset"]]],[11,"empty","","",45,[[],["sigset"]]],[11,"add","","",45,[[["self"],["signal"]]]],[11,"clear","","",45,[[["self"]]]],[11,"remove","","",45,[[["self"],["signal"]]]],[11,"contains","","",45,[[["self"],["signal"]],["bool"]]],[11,"extend","","",45,[[["self"],["sigset"]]]],[11,"thread_get_mask","","Gets the currently blocked (masked) set of signals for the calling thread.",45,[[],["result",["sigset"]]]],[11,"thread_set_mask","","Sets the set of signals as the signal mask for the calling thread.",45,[[["self"]],["result"]]],[11,"thread_block","","Adds the set of signals to the signal mask for the calling thread.",45,[[["self"]],["result"]]],[11,"thread_unblock","","Removes the set of signals from the signal mask for the calling thread.",45,[[["self"]],["result"]]],[11,"thread_swap_mask","","Sets the set of signals as the signal mask, and returns the old mask.",45,[[["self"],["sigmaskhow"]],["result",["sigset"]]]],[11,"wait","","Suspends execution of the calling thread until one of the signals in the signal mask becomes pending, and returns the accepted signal.",45,[[["self"]],["result",["signal"]]]],[11,"new","","Creates a new action.",46,[[["sighandler"],["saflags"],["sigset"]],["sigaction"]]],[11,"flags","","Returns the flags set on the action.",46,[[["self"]],["saflags"]]],[11,"mask","","Returns the set of signals that are blocked during execution of the action's signal-catching function.",46,[[["self"]],["sigset"]]],[11,"handler","","Returns the action's handler.",46,[[["self"]],["sighandler"]]],[0,"socket","nix::sys","Socket interface functions",N,N],[3,"cmsghdr","nix::sys::socket","",N,N],[12,"cmsg_len","","",47,N],[12,"cmsg_level","","",47,N],[12,"cmsg_type","","",47,N],[3,"msghdr","","",N,N],[12,"msg_name","","",48,N],[12,"msg_namelen","","",48,N],[12,"msg_iov","","",48,N],[12,"msg_iovlen","","",48,N],[12,"msg_control","","",48,N],[12,"msg_controllen","","",48,N],[12,"msg_flags","","",48,N],[6,"sa_family_t","","",N,N],[3,"sockaddr","","",N,N],[12,"sa_len","","",49,N],[12,"sa_family","","",49,N],[12,"sa_data","","",49,N],[3,"sockaddr_in","","",N,N],[12,"sin_len","","",50,N],[12,"sin_family","","",50,N],[12,"sin_port","","",50,N],[12,"sin_addr","","",50,N],[12,"sin_zero","","",50,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_len","","",51,N],[12,"sin6_family","","",51,N],[12,"sin6_port","","",51,N],[12,"sin6_flowinfo","","",51,N],[12,"sin6_addr","","",51,N],[12,"sin6_scope_id","","",51,N],[3,"sockaddr_storage","","",N,N],[12,"ss_len","","",52,N],[12,"ss_family","","",52,N],[3,"sockaddr_un","","",N,N],[12,"sun_len","","",53,N],[12,"sun_family","","",53,N],[12,"sun_path","","",53,N],[3,"UnixAddr","","A wrapper around `sockaddr_un`.",N,N],[12,"0","","",54,N],[12,"1","","",54,N],[3,"Ipv4Addr","","",N,N],[12,"0","","",55,N],[3,"Ipv6Addr","","",N,N],[12,"0","","",56,N],[3,"LinkAddr","","Hardware Address",N,N],[12,"0","","",57,N],[3,"SockFlag","","Additional socket options",N,N],[3,"MsgFlags","","Flags for send/recv and their relatives",N,N],[3,"IpMembershipRequest","","Request for multicast socket operations",N,N],[3,"Ipv6MembershipRequest","","Request for ipv6 multicast socket operations",N,N],[3,"CmsgSpace","","A structure used to make room in a cmsghdr passed to recvmsg. The size and alignment match that of a cmsghdr followed by a T, but the fields are not accessible, as the actual types will change on a call to recvmsg.",N,N],[3,"RecvMsg","","",N,N],[12,"bytes","","",58,N],[12,"address","","",58,N],[12,"flags","","",58,N],[3,"CmsgIterator","","",N,N],[4,"AddressFamily","","These constants specify the protocol family to be used in `socket` and `socketpair`",N,N],[13,"Unix","","Local communication (see `unix(7)`)",59,N],[13,"Inet","","IPv4 Internet protocols (see `ip(7)`)",59,N],[13,"Inet6","","IPv6 Internet protocols (see `ipv6(7)`)",59,N],[13,"Ipx","","IPX - Novell protocols",59,N],[13,"AppleTalk","","AppleTalk",59,N],[13,"Decnet","","",59,N],[13,"Sna","","",59,N],[13,"Bluetooth","","",59,N],[13,"Isdn","","",59,N],[13,"ImpLink","","",59,N],[13,"Pup","","",59,N],[13,"Chaos","","",59,N],[13,"Iso","","",59,N],[13,"Datakit","","",59,N],[13,"Ccitt","","",59,N],[13,"Dli","","",59,N],[13,"Lat","","",59,N],[13,"Hylink","","",59,N],[13,"Link","","",59,N],[13,"Coip","","",59,N],[13,"Cnt","","",59,N],[13,"Natm","","",59,N],[4,"SockAddr","","Represents a socket address",N,N],[13,"Inet","","",60,N],[13,"Unix","","",60,N],[13,"Link","","Datalink address (MAC)",60,N],[4,"InetAddr","","",N,N],[13,"V4","","",61,N],[13,"V6","","",61,N],[4,"IpAddr","","",N,N],[13,"V4","","",62,N],[13,"V6","","",62,N],[4,"SockType","","These constants are used to specify the communication semantics when creating a socket with `socket()`",N,N],[13,"Stream","","Provides sequenced, reliable, two-way, connection- based byte streams.  An out-of-band data transmission mechanism may be supported.",63,N],[13,"Datagram","","Supports datagrams (connectionless, unreliable messages of a fixed maximum length).",63,N],[13,"SeqPacket","","Provides a sequenced, reliable, two-way connection- based data transmission path for datagrams of fixed maximum length; a consumer is required to read an entire packet with each input system call.",63,N],[13,"Raw","","Provides raw network protocol access.",63,N],[13,"Rdm","","Provides a reliable datagram layer that does not guarantee ordering.",63,N],[4,"SockProtocol","","Constants used in `socket` and `socketpair` to specify the protocol to use.",N,N],[13,"Tcp","","TCP protocol (ip(7))",64,N],[13,"Udp","","UDP protocol (ip(7))",64,N],[4,"ControlMessage","","A type-safe wrapper around a single control message. More types may be added to this enum; do not exhaustively pattern-match it. Further reading",N,N],[13,"ScmRights","","A message of type `SCM_RIGHTS`, containing an array of file descriptors passed between processes.",65,N],[13,"ScmTimestamp","","A message of type `SCM_TIMESTAMP`, containing the time the packet was received by the kernel.",65,N],[4,"SockLevel","","The protocol level at which to get / set socket options. Used as an argument to `getsockopt` and `setsockopt`.",N,N],[13,"Socket","","",66,N],[13,"Tcp","","",66,N],[13,"Ip","","",66,N],[13,"Ipv6","","",66,N],[13,"Udp","","",66,N],[4,"Shutdown","","",N,N],[13,"Read","","Further receptions will be disallowed.",67,N],[13,"Write","","Further  transmissions will be disallowed.",67,N],[13,"Both","","Further receptions and transmissions will be disallowed.",67,N],[5,"sendmsg","","Send data in scatter-gather vectors to a socket, possibly accompanied by ancillary data. Optionally direct the message at the given address, as with sendto.",N,N],[5,"recvmsg","","Receive message in scatter-gather vectors from a socket, and optionally receive ancillary data into the provided buffer. If no ancillary data is desired, use () as the type parameter.",N,N],[5,"socket","","Create an endpoint for communication",N,[[["addressfamily"],["socktype"],["sockflag"],["t"]],["result",["rawfd"]]]],[5,"socketpair","","Create a pair of connected sockets",N,[[["addressfamily"],["socktype"],["t"],["sockflag"]],["result"]]],[5,"listen","","Listen for connections on a socket",N,[[["rawfd"],["usize"]],["result"]]],[5,"bind","","Bind a name to a socket",N,[[["rawfd"],["sockaddr"]],["result"]]],[5,"accept","","Accept a connection on a socket",N,[[["rawfd"]],["result",["rawfd"]]]],[5,"accept4","","Accept a connection on a socket",N,[[["rawfd"],["sockflag"]],["result",["rawfd"]]]],[5,"connect","","Initiate a connection on a socket",N,[[["rawfd"],["sockaddr"]],["result"]]],[5,"recv","","Receive data from a connection-oriented socket. Returns the number of bytes read",N,N],[5,"recvfrom","","Receive data from a connectionless or connection-oriented socket. Returns the number of bytes read and the socket address of the sender.",N,N],[5,"sendto","","Send a message to a socket",N,N],[5,"send","","Send data to a connection-oriented socket. Returns the number of bytes read",N,N],[5,"getsockopt","","Get the current value for the requested socket option",N,[[["rawfd"],["o"]],["result"]]],[5,"setsockopt","","Sets the value for the requested socket option",N,N],[5,"getpeername","","Get the address of the peer connected to the socket `fd`.",N,[[["rawfd"]],["result",["sockaddr"]]]],[5,"getsockname","","Get the current address to which the socket `fd` is bound.",N,[[["rawfd"]],["result",["sockaddr"]]]],[5,"sockaddr_storage_to_addr","","Return the appropriate `SockAddr` type from a `sockaddr_storage` of a certain size.  In C this would usually be done by casting.  The `len` argument should be the number of bytes in the `sockaddr_storage` that are actually allocated and valid.  It must be at least as large as all the useful parts of the structure.  Note that in the case of a `sockaddr_un`, `len` need not include the terminating null.",N,[[["sockaddr_storage"],["usize"]],["result",["sockaddr"]]]],[5,"shutdown","","Shut down part of a full-duplex connection.",N,[[["rawfd"],["shutdown"]],["result"]]],[11,"len","","Total length of sockaddr",57,[[["self"]],["usize"]]],[11,"family","","always == AF_LINK",57,[[["self"]],["addressfamily"]]],[11,"ifindex","","interface index, if != 0, system given index for interface",57,[[["self"]],["usize"]]],[11,"datalink_type","","Datalink type",57,[[["self"]],["u8"]]],[11,"nlen","","",57,[[["self"]],["usize"]]],[11,"alen","","link level address length",57,[[["self"]],["usize"]]],[11,"slen","","link layer selector length",57,[[["self"]],["usize"]]],[11,"is_empty","","if link level address length == 0, or `sdl_data` not be larger.",57,[[["self"]],["bool"]]],[11,"addr","","Physical-layer address (MAC)",57,N],[11,"from_i32","","Create a new `AddressFamily` from an integer value retrieved from `libc`, usually from the `sa_family` field of a `sockaddr`.",59,[[["i32"]],["option",["addressfamily"]]]],[11,"from_std","","",61,[[["socketaddr"]],["inetaddr"]]],[11,"new","","",61,[[["ipaddr"],["u16"]],["inetaddr"]]],[11,"ip","","Gets the IP address associated with this socket address.",61,[[["self"]],["ipaddr"]]],[11,"port","","Gets the port number associated with this socket address",61,[[["self"]],["u16"]]],[11,"to_std","","",61,[[["self"]],["socketaddr"]]],[11,"to_str","","",61,[[["self"]],["string"]]],[11,"new_v4","","Create a new IpAddr that contains an IPv4 address.",62,[[["u8"],["u8"],["u8"],["u8"]],["ipaddr"]]],[11,"new_v6","","Create a new IpAddr that contains an IPv6 address.",62,[[["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"]],["ipaddr"]]],[11,"new","","",55,[[["u8"],["u8"],["u8"],["u8"]],["ipv4addr"]]],[11,"from_std","","",55,[[["ipv4addr"]],["ipv4addr"]]],[11,"any","","",55,[[],["ipv4addr"]]],[11,"octets","","",55,N],[11,"to_std","","",55,[[["self"]],["ipv4addr"]]],[11,"new","","",56,[[["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"]],["ipv6addr"]]],[11,"from_std","","",56,[[["ipv6addr"]],["ipv6addr"]]],[11,"segments","","Return the eight 16-bit segments that make up this address",56,N],[11,"to_std","","",56,[[["self"]],["ipv6addr"]]],[11,"new","","Create a new sockaddr_un representing a filesystem path.",54,[[["p"]],["result",["unixaddr"]]]],[11,"path","","If this address represents a filesystem path, return that path.",54,[[["self"]],["option",["path"]]]],[11,"new_inet","","",60,[[["inetaddr"]],["sockaddr"]]],[11,"new_unix","","",60,[[["p"]],["result",["sockaddr"]]]],[11,"family","","",60,[[["self"]],["addressfamily"]]],[11,"to_str","","",60,[[["self"]],["string"]]],[11,"from_libc_sockaddr","","Creates a `SockAddr` struct from libc's sockaddr.",60,N],[11,"as_ffi_pair","","Conversion from nix's SockAddr type to the underlying libc sockaddr type.",60,N],[0,"sockopt","","",N,N],[3,"ReuseAddr","nix::sys::socket::sockopt","",N,N],[3,"ReusePort","","",N,N],[3,"TcpNoDelay","","",N,N],[3,"Linger","","",N,N],[3,"IpAddMembership","","",N,N],[3,"IpDropMembership","","",N,N],[3,"Ipv6AddMembership","","",N,N],[3,"Ipv6DropMembership","","",N,N],[3,"IpMulticastTtl","","",N,N],[3,"IpMulticastLoop","","",N,N],[3,"ReceiveTimeout","","",N,N],[3,"SendTimeout","","",N,N],[3,"Broadcast","","",N,N],[3,"OobInline","","",N,N],[3,"SocketError","","",N,N],[3,"KeepAlive","","",N,N],[3,"TcpKeepIdle","","",N,N],[3,"RcvBuf","","",N,N],[3,"SndBuf","","",N,N],[3,"SockType","","",N,N],[3,"AcceptConn","","",N,N],[3,"ReceiveTimestamp","","",N,N],[3,"BindAny","","",N,N],[8,"GetSockOpt","nix::sys::socket","Represents a socket option that can be accessed or set. Used as an argument to `getsockopt`",N,N],[16,"Val","","",68,N],[8,"SetSockOpt","","Represents a socket option that can be accessed or set. Used as an argument to `setsockopt`",N,N],[16,"Val","","",69,N],[18,"SOCK_NONBLOCK","","Set non-blocking mode on the new socket",70,N],[18,"SOCK_CLOEXEC","","Set close-on-exec on the new descriptor",70,N],[11,"empty","","Returns an empty set of flags.",70,[[],["sockflag"]]],[11,"all","","Returns the set containing all flags.",70,[[],["sockflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",70,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",70,[[["c_int"]],["option",["sockflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",70,[[["c_int"]],["sockflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",70,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",70,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",70,[[["self"],["sockflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",70,[[["self"],["sockflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",70,[[["self"],["sockflag"]]]],[11,"remove","","Removes the specified flags in-place.",70,[[["self"],["sockflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",70,[[["self"],["sockflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",70,[[["self"],["sockflag"],["bool"]]]],[18,"MSG_OOB","","Sends or requests out-of-band data on sockets that support this notion (e.g., of type `Stream`); the underlying protocol must also support out-of-band data.",71,N],[18,"MSG_PEEK","","Peeks at an incoming message. The data is treated as unread and the next `recv()` or similar function shall still return this data.",71,N],[18,"MSG_DONTWAIT","","Enables nonblocking operation; if the operation would block, `EAGAIN` or `EWOULDBLOCK` is returned.  This provides similar behavior to setting the `O_NONBLOCK` flag (via the `fcntl` `F_SETFL` operation), but differs in that `MSG_DONTWAIT` is a per- call option, whereas `O_NONBLOCK` is a setting on the open file description (see open(2)), which will affect all threads in the calling process and as well as other processes that hold file descriptors referring to the same open file description.",71,N],[18,"MSG_CTRUNC","","Receive flags: Control Data was discarded (buffer too small)",71,N],[18,"MSG_TRUNC","","For raw (`Packet`), Internet datagram (since Linux 2.4.27/2.6.8), netlink (since Linux 2.6.22) and UNIX datagram (since Linux 3.4) sockets: return the real length of the packet or datagram, even when it was longer than the passed buffer. Not implemented for UNIX domain (unix(7)) sockets.",71,N],[18,"MSG_EOR","","Terminates a record (when this notion is supported, as for sockets of type `SeqPacket`).",71,N],[18,"MSG_CMSG_CLOEXEC","","Set the `close-on-exec` flag for the file descriptor received via a UNIX domain file descriptor using the `SCM_RIGHTS` operation (described in unix(7)). This flag is useful for the same reasons as the `O_CLOEXEC` flag of open(2).",71,N],[11,"empty","","Returns an empty set of flags.",71,[[],["msgflags"]]],[11,"all","","Returns the set containing all flags.",71,[[],["msgflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",71,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",71,[[["c_int"]],["option",["msgflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",71,[[["c_int"]],["msgflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",71,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",71,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",71,[[["self"],["msgflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",71,[[["self"],["msgflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",71,[[["self"],["msgflags"]]]],[11,"remove","","Removes the specified flags in-place.",71,[[["self"],["msgflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",71,[[["self"],["msgflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",71,[[["self"],["msgflags"],["bool"]]]],[11,"new","","Instantiate a new `IpMembershipRequest`",72,[[["ipv4addr"],["option",["ipv4addr"]]],["self"]]],[11,"new","","Instantiate a new `Ipv6MembershipRequest`",73,[[["ipv6addr"]],["self"]]],[11,"new","","Create a CmsgSpace. The structure is used only for space, so the fields are uninitialized.",74,[[],["self"]]],[11,"cmsgs","","Iterate over the valid control messages pointed to by this msghdr.",58,[[["self"]],["cmsgiterator"]]],[0,"stat","nix::sys","",N,N],[6,"dev_t","nix::sys::stat","",N,N],[6,"mode_t","","",N,N],[3,"FileStat","","",N,N],[12,"st_dev","","",75,N],[12,"st_ino","","",75,N],[12,"st_mode","","",75,N],[12,"st_nlink","","",75,N],[12,"st_uid","","",75,N],[12,"st_gid","","",75,N],[12,"st_rdev","","",75,N],[12,"st_atime","","",75,N],[12,"st_atime_nsec","","",75,N],[12,"st_mtime","","",75,N],[12,"st_mtime_nsec","","",75,N],[12,"st_ctime","","",75,N],[12,"st_ctime_nsec","","",75,N],[12,"st_size","","",75,N],[12,"st_blocks","","",75,N],[12,"st_blksize","","",75,N],[12,"st_flags","","",75,N],[12,"st_gen","","",75,N],[12,"st_lspare","","",75,N],[12,"st_birthtime","","",75,N],[12,"st_birthtime_nsec","","",75,N],[5,"FileStat","","",N,N],[3,"SFlag","","",N,N],[3,"Mode","","",N,N],[4,"FchmodatFlags","","Flags for `fchmodat` function.",N,N],[13,"FollowSymlink","","",76,N],[13,"NoFollowSymlink","","",76,N],[4,"UtimensatFlags","","Flags for `utimensat` function.",N,N],[13,"FollowSymlink","","",77,N],[13,"NoFollowSymlink","","",77,N],[5,"mknod","","",N,[[["p"],["sflag"],["mode"],["dev_t"]],["result"]]],[5,"umask","","",N,[[["mode"]],["mode"]]],[5,"stat","","",N,[[["p"]],["result",["filestat"]]]],[5,"lstat","","",N,[[["p"]],["result",["filestat"]]]],[5,"fstat","","",N,[[["rawfd"]],["result",["filestat"]]]],[5,"fstatat","","",N,[[["rawfd"],["p"],["atflags"]],["result",["filestat"]]]],[5,"fchmod","","Change the file permission bits of the file specified by a file descriptor.",N,[[["rawfd"],["mode"]],["result"]]],[5,"fchmodat","","Change the file permission bits.",N,[[["option",["rawfd"]],["p"],["mode"],["fchmodatflags"]],["result"]]],[5,"utimes","","Change the access and modification times of a file.",N,[[["p"],["timeval"],["timeval"]],["result"]]],[5,"lutimes","","Change the access and modification times of a file without following symlinks.",N,[[["p"],["timeval"],["timeval"]],["result"]]],[5,"futimens","","Change the access and modification times of the file specified by a file descriptor.",N,[[["rawfd"],["timespec"],["timespec"]],["result"]]],[5,"utimensat","","Change the access and modification times of a file.",N,[[["option",["rawfd"]],["p"],["timespec"],["timespec"],["utimensatflags"]],["result"]]],[18,"S_IFIFO","","",78,N],[18,"S_IFCHR","","",78,N],[18,"S_IFDIR","","",78,N],[18,"S_IFBLK","","",78,N],[18,"S_IFREG","","",78,N],[18,"S_IFLNK","","",78,N],[18,"S_IFSOCK","","",78,N],[18,"S_IFMT","","",78,N],[11,"empty","","Returns an empty set of flags.",78,[[],["sflag"]]],[11,"all","","Returns the set containing all flags.",78,[[],["sflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",78,[[["self"]],["mode_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",78,[[["mode_t"]],["option",["sflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",78,[[["mode_t"]],["sflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",78,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",78,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",78,[[["self"],["sflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",78,[[["self"],["sflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",78,[[["self"],["sflag"]]]],[11,"remove","","Removes the specified flags in-place.",78,[[["self"],["sflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",78,[[["self"],["sflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",78,[[["self"],["sflag"],["bool"]]]],[18,"S_IRWXU","","",79,N],[18,"S_IRUSR","","",79,N],[18,"S_IWUSR","","",79,N],[18,"S_IXUSR","","",79,N],[18,"S_IRWXG","","",79,N],[18,"S_IRGRP","","",79,N],[18,"S_IWGRP","","",79,N],[18,"S_IXGRP","","",79,N],[18,"S_IRWXO","","",79,N],[18,"S_IROTH","","",79,N],[18,"S_IWOTH","","",79,N],[18,"S_IXOTH","","",79,N],[18,"S_ISUID","","",79,N],[18,"S_ISGID","","",79,N],[18,"S_ISVTX","","",79,N],[11,"empty","","Returns an empty set of flags.",79,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",79,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",79,[[["self"]],["mode_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",79,[[["mode_t"]],["option",["mode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",79,[[["mode_t"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",79,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",79,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",79,[[["self"],["mode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",79,[[["self"],["mode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",79,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",79,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",79,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",79,[[["self"],["mode"],["bool"]]]],[0,"statvfs","nix::sys","Get filesystem statistics",N,N],[3,"FsFlags","nix::sys::statvfs","File system mount Flags",N,N],[3,"Statvfs","","Wrapper around the POSIX `statvfs` struct",N,N],[5,"statvfs","","Return a `Statvfs` object with information about the `path`",N,[[["p"]],["result",["statvfs"]]]],[5,"fstatvfs","","Return a `Statvfs` object with information about `fd`",N,[[["t"]],["result",["statvfs"]]]],[18,"ST_RDONLY","","Read Only",80,N],[18,"ST_NOSUID","","Do not allow the set-uid bits to have an effect",80,N],[11,"empty","","Returns an empty set of flags.",80,[[],["fsflags"]]],[11,"all","","Returns the set containing all flags.",80,[[],["fsflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",80,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",80,[[["c_ulong"]],["option",["fsflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",80,[[["c_ulong"]],["fsflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",80,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",80,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",80,[[["self"],["fsflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",80,[[["self"],["fsflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",80,[[["self"],["fsflags"]]]],[11,"remove","","Removes the specified flags in-place.",80,[[["self"],["fsflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",80,[[["self"],["fsflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",80,[[["self"],["fsflags"],["bool"]]]],[11,"block_size","","get the file system block size",81,[[["self"]],["c_ulong"]]],[11,"fragment_size","","Get the fundamental file system block size",81,[[["self"]],["c_ulong"]]],[11,"blocks","","Get the number of blocks.",81,[[["self"]],["fsblkcnt_t"]]],[11,"blocks_free","","Get the number of free blocks in the file system",81,[[["self"]],["fsblkcnt_t"]]],[11,"blocks_available","","Get the number of free blocks for unprivileged users",81,[[["self"]],["fsblkcnt_t"]]],[11,"files","","Get the total number of file inodes",81,[[["self"]],["fsfilcnt_t"]]],[11,"files_free","","Get the number of free file inodes",81,[[["self"]],["fsfilcnt_t"]]],[11,"files_available","","Get the number of free file inodes for unprivileged users",81,[[["self"]],["fsfilcnt_t"]]],[11,"filesystem_id","","Get the file system id",81,[[["self"]],["c_ulong"]]],[11,"flags","","Get the mount flags",81,[[["self"]],["fsflags"]]],[11,"name_max","","Get the maximum filename length",81,[[["self"]],["c_ulong"]]],[0,"termios","nix::sys","An interface for controlling asynchronous communication ports",N,N],[17,"NCCS","nix::sys::termios","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[3,"Termios","","Stores settings for the termios API",N,N],[12,"input_flags","","Input mode flags (see `termios.c_iflag` documentation)",82,N],[12,"output_flags","","Output mode flags (see `termios.c_oflag` documentation)",82,N],[12,"control_flags","","Control mode flags (see `termios.c_cflag` documentation)",82,N],[12,"local_flags","","Local mode flags (see `termios.c_lflag` documentation)",82,N],[12,"control_chars","","Control characters (see `termios.c_cc` documentation)",82,N],[3,"InputFlags","","Flags for configuring the input mode of a terminal",N,N],[3,"OutputFlags","","Flags for configuring the output mode of a terminal",N,N],[3,"ControlFlags","","Flags for setting the control mode of a terminal",N,N],[3,"LocalFlags","","Flags for setting any local modes",N,N],[4,"BaudRate","","Baud rates supported by the system.",N,N],[13,"B0","","",83,N],[13,"B50","","",83,N],[13,"B75","","",83,N],[13,"B110","","",83,N],[13,"B134","","",83,N],[13,"B150","","",83,N],[13,"B200","","",83,N],[13,"B300","","",83,N],[13,"B600","","",83,N],[13,"B1200","","",83,N],[13,"B1800","","",83,N],[13,"B2400","","",83,N],[13,"B4800","","",83,N],[13,"B7200","","",83,N],[13,"B9600","","",83,N],[13,"B14400","","",83,N],[13,"B19200","","",83,N],[13,"B28800","","",83,N],[13,"B38400","","",83,N],[13,"B57600","","",83,N],[13,"B76800","","",83,N],[13,"B115200","","",83,N],[13,"B230400","","",83,N],[13,"B460800","","",83,N],[13,"B921600","","",83,N],[4,"SetArg","","Specify when a port configuration change should occur.",N,N],[13,"TCSANOW","","The change will occur immediately",84,N],[13,"TCSADRAIN","","The change occurs after all output has been written",84,N],[13,"TCSAFLUSH","","Same as `TCSADRAIN`, but will also flush the input buffer",84,N],[4,"FlushArg","","Specify a combination of the input and output buffers to flush",N,N],[13,"TCIFLUSH","","Flush data that was received but not read",85,N],[13,"TCOFLUSH","","Flush data written but not transmitted",85,N],[13,"TCIOFLUSH","","Flush both received data not read and written data not transmitted",85,N],[4,"FlowArg","","Specify how transmission flow should be altered",N,N],[13,"TCOOFF","","Suspend transmission",86,N],[13,"TCOON","","Resume transmission",86,N],[13,"TCIOFF","","Transmit a STOP character, which should disable a connected terminal device",86,N],[13,"TCION","","Transmit a START character, which should re-enable a connected terminal device",86,N],[4,"SpecialCharacterIndices","","Indices into the `termios.c_cc` array for special characters.",N,N],[13,"VDISCARD","","",87,N],[13,"VDSUSP","","",87,N],[13,"VEOF","","",87,N],[13,"VEOL","","",87,N],[13,"VEOL2","","",87,N],[13,"VERASE","","",87,N],[13,"VERASE2","","",87,N],[13,"VINTR","","",87,N],[13,"VKILL","","",87,N],[13,"VLNEXT","","",87,N],[13,"VMIN","","",87,N],[13,"VQUIT","","",87,N],[13,"VREPRINT","","",87,N],[13,"VSTART","","",87,N],[13,"VSTATUS","","",87,N],[13,"VSTOP","","",87,N],[13,"VSUSP","","",87,N],[13,"VTIME","","",87,N],[13,"VWERASE","","",87,N],[5,"cfgetispeed","","Get input baud rate (see cfgetispeed(3p)).",N,[[["termios"]],["u32"]]],[5,"cfgetospeed","","Get output baud rate (see cfgetospeed(3p)).",N,[[["termios"]],["u32"]]],[5,"cfsetispeed","","Set input baud rate (see cfsetispeed(3p)).",N,[[["termios"],["t"]],["result"]]],[5,"cfsetospeed","","Set output baud rate (see cfsetospeed(3p)).",N,[[["termios"],["t"]],["result"]]],[5,"cfsetspeed","","Set both the input and output baud rates (see termios(3)).",N,[[["termios"],["t"]],["result"]]],[5,"cfmakeraw","","Configures the port to something like the \"raw\" mode of the old Version 7 terminal driver (see termios(3)).",N,[[["termios"]]]],[5,"cfmakesane","","Configures the port to \"sane\" mode (like the configuration of a newly created terminal) (see tcsetattr(3)).",N,[[["termios"]]]],[5,"tcgetattr","","Return the configuration of a port tcgetattr(3p)).",N,[[["rawfd"]],["result",["termios"]]]],[5,"tcsetattr","","Set the configuration for a terminal (see tcsetattr(3p)).",N,[[["rawfd"],["setarg"],["termios"]],["result"]]],[5,"tcdrain","","Block until all output data is written (see tcdrain(3p)).",N,[[["rawfd"]],["result"]]],[5,"tcflow","","Suspend or resume the transmission or reception of data (see tcflow(3p)).",N,[[["rawfd"],["flowarg"]],["result"]]],[5,"tcflush","","Discard data in the output or input queue (see tcflush(3p)).",N,[[["rawfd"],["flusharg"]],["result"]]],[5,"tcsendbreak","","Send a break for a specific duration (see tcsendbreak(3p)).",N,[[["rawfd"],["c_int"]],["result"]]],[5,"tcgetsid","","Get the session controlled by the given terminal (see tcgetsid(3)).",N,[[["rawfd"]],["result",["pid"]]]],[18,"IGNBRK","","",88,N],[18,"BRKINT","","",88,N],[18,"IGNPAR","","",88,N],[18,"PARMRK","","",88,N],[18,"INPCK","","",88,N],[18,"ISTRIP","","",88,N],[18,"INLCR","","",88,N],[18,"IGNCR","","",88,N],[18,"ICRNL","","",88,N],[18,"IXON","","",88,N],[18,"IXOFF","","",88,N],[18,"IXANY","","",88,N],[18,"IMAXBEL","","",88,N],[11,"empty","","Returns an empty set of flags.",88,[[],["inputflags"]]],[11,"all","","Returns the set containing all flags.",88,[[],["inputflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",88,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",88,[[["tcflag_t"]],["option",["inputflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",88,[[["tcflag_t"]],["inputflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",88,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",88,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",88,[[["self"],["inputflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",88,[[["self"],["inputflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",88,[[["self"],["inputflags"]]]],[11,"remove","","Removes the specified flags in-place.",88,[[["self"],["inputflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",88,[[["self"],["inputflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",88,[[["self"],["inputflags"],["bool"]]]],[18,"OPOST","","",89,N],[18,"ONLCR","","",89,N],[18,"OCRNL","","",89,N],[18,"ONOCR","","",89,N],[18,"ONLRET","","",89,N],[18,"TAB0","","",89,N],[18,"TAB3","","",89,N],[18,"OXTABS","","",89,N],[18,"ONOEOT","","",89,N],[18,"TABDLY","","",89,N],[11,"empty","","Returns an empty set of flags.",89,[[],["outputflags"]]],[11,"all","","Returns the set containing all flags.",89,[[],["outputflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",89,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",89,[[["tcflag_t"]],["option",["outputflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",89,[[["tcflag_t"]],["outputflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",89,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",89,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",89,[[["self"],["outputflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",89,[[["self"],["outputflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",89,[[["self"],["outputflags"]]]],[11,"remove","","Removes the specified flags in-place.",89,[[["self"],["outputflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",89,[[["self"],["outputflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",89,[[["self"],["outputflags"],["bool"]]]],[18,"CIGNORE","","",90,N],[18,"CS5","","",90,N],[18,"CS6","","",90,N],[18,"CS7","","",90,N],[18,"CS8","","",90,N],[18,"CSTOPB","","",90,N],[18,"CREAD","","",90,N],[18,"PARENB","","",90,N],[18,"PARODD","","",90,N],[18,"HUPCL","","",90,N],[18,"CLOCAL","","",90,N],[18,"CRTSCTS","","",90,N],[18,"MDMBUF","","",90,N],[18,"CCTS_OFLOW","","",90,N],[18,"CRTS_IFLOW","","",90,N],[18,"CDTR_IFLOW","","",90,N],[18,"CDSR_OFLOW","","",90,N],[18,"CCAR_OFLOW","","",90,N],[18,"CSIZE","","",90,N],[11,"empty","","Returns an empty set of flags.",90,[[],["controlflags"]]],[11,"all","","Returns the set containing all flags.",90,[[],["controlflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",90,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",90,[[["tcflag_t"]],["option",["controlflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",90,[[["tcflag_t"]],["controlflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",90,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",90,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",90,[[["self"],["controlflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",90,[[["self"],["controlflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",90,[[["self"],["controlflags"]]]],[11,"remove","","Removes the specified flags in-place.",90,[[["self"],["controlflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",90,[[["self"],["controlflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",90,[[["self"],["controlflags"],["bool"]]]],[18,"ECHOKE","","",91,N],[18,"ECHOE","","",91,N],[18,"ECHOK","","",91,N],[18,"ECHO","","",91,N],[18,"ECHONL","","",91,N],[18,"ECHOPRT","","",91,N],[18,"ECHOCTL","","",91,N],[18,"ISIG","","",91,N],[18,"ICANON","","",91,N],[18,"ALTWERASE","","",91,N],[18,"IEXTEN","","",91,N],[18,"EXTPROC","","",91,N],[18,"TOSTOP","","",91,N],[18,"FLUSHO","","",91,N],[18,"NOKERNINFO","","",91,N],[18,"PENDIN","","",91,N],[18,"NOFLSH","","",91,N],[11,"empty","","Returns an empty set of flags.",91,[[],["localflags"]]],[11,"all","","Returns the set containing all flags.",91,[[],["localflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",91,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",91,[[["tcflag_t"]],["option",["localflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",91,[[["tcflag_t"]],["localflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",91,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",91,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",91,[[["self"],["localflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",91,[[["self"],["localflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",91,[[["self"],["localflags"]]]],[11,"remove","","Removes the specified flags in-place.",91,[[["self"],["localflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",91,[[["self"],["localflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",91,[[["self"],["localflags"],["bool"]]]],[0,"time","nix::sys","",N,N],[6,"time_t","nix::sys::time","",N,N],[6,"suseconds_t","","",N,N],[3,"TimeSpec","","",N,N],[3,"TimeVal","","",N,N],[8,"TimeValLike","","",N,N],[11,"zero","","",92,[[],["self"]]],[11,"hours","","",92,[[["i64"]],["self"]]],[11,"minutes","","",92,[[["i64"]],["self"]]],[10,"seconds","","",92,[[["i64"]],["self"]]],[10,"milliseconds","","",92,[[["i64"]],["self"]]],[10,"microseconds","","",92,[[["i64"]],["self"]]],[10,"nanoseconds","","",92,[[["i64"]],["self"]]],[11,"num_hours","","",92,[[["self"]],["i64"]]],[11,"num_minutes","","",92,[[["self"]],["i64"]]],[10,"num_seconds","","",92,[[["self"]],["i64"]]],[10,"num_milliseconds","","",92,[[["self"]],["i64"]]],[10,"num_microseconds","","",92,[[["self"]],["i64"]]],[10,"num_nanoseconds","","",92,[[["self"]],["i64"]]],[11,"tv_sec","","",93,[[["self"]],["time_t"]]],[11,"tv_nsec","","",93,[[["self"]],["c_long"]]],[11,"tv_sec","","",94,[[["self"]],["time_t"]]],[11,"tv_usec","","",94,[[["self"]],["suseconds_t"]]],[0,"uio","nix::sys","",N,N],[3,"IoVec","nix::sys::uio","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"pwritev","","Write to `fd` at `offset` from buffers in `iov`.",N,N],[5,"preadv","","Read from `fd` at `offset` filling buffers in `iov`.",N,N],[5,"pwrite","","",N,N],[5,"pread","","",N,N],[11,"as_slice","","",95,N],[11,"from_slice","","",95,N],[11,"from_mut_slice","","",95,N],[0,"utsname","nix::sys","",N,N],[3,"UtsName","nix::sys::utsname","",N,N],[5,"uname","","",N,[[],["utsname"]]],[11,"sysname","","",96,[[["self"]],["str"]]],[11,"nodename","","",96,[[["self"]],["str"]]],[11,"release","","",96,[[["self"]],["str"]]],[11,"version","","",96,[[["self"]],["str"]]],[11,"machine","","",96,[[["self"]],["str"]]],[0,"wait","nix::sys","",N,N],[3,"WaitPidFlag","nix::sys::wait","",N,N],[4,"WaitStatus","","Possible return values from `wait()` or `waitpid()`.",N,N],[13,"Exited","","The process exited normally (as with `exit()` or returning from `main`) with the given exit code. This case matches the C macro `WIFEXITED(status)`; the second field is `WEXITSTATUS(status)`.",97,N],[13,"Signaled","","The process was killed by the given signal. The third field indicates whether the signal generated a core dump. This case matches the C macro `WIFSIGNALED(status)`; the last two fields correspond to `WTERMSIG(status)` and `WCOREDUMP(status)`.",97,N],[13,"Stopped","","The process is alive, but was stopped by the given signal. This is only reported if `WaitPidFlag::WUNTRACED` was passed. This case matches the C macro `WIFSTOPPED(status)`; the second field is `WSTOPSIG(status)`.",97,N],[13,"Continued","","The process was previously stopped but has resumed execution after receiving a `SIGCONT` signal. This is only reported if `WaitPidFlag::WCONTINUED` was passed. This case matches the C macro `WIFCONTINUED(status)`.",97,N],[13,"StillAlive","","There are currently no state changes to report in any awaited child process. This is only returned if `WaitPidFlag::WNOHANG` was used (otherwise `wait()` or `waitpid()` would block until there was something to report).",97,N],[5,"waitpid","","",N,[[["p"],["option",["waitpidflag"]]],["result",["waitstatus"]]]],[5,"wait","","",N,[[],["result",["waitstatus"]]]],[18,"WNOHANG","","",98,N],[18,"WUNTRACED","","",98,N],[18,"WEXITED","","",98,N],[18,"WCONTINUED","","",98,N],[18,"WSTOPPED","","",98,N],[18,"WNOWAIT","","Don't reap, just poll status.",98,N],[11,"empty","","Returns an empty set of flags.",98,[[],["waitpidflag"]]],[11,"all","","Returns the set containing all flags.",98,[[],["waitpidflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",98,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",98,[[["c_int"]],["option",["waitpidflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",98,[[["c_int"]],["waitpidflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",98,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",98,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",98,[[["self"],["waitpidflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",98,[[["self"],["waitpidflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",98,[[["self"],["waitpidflag"]]]],[11,"remove","","Removes the specified flags in-place.",98,[[["self"],["waitpidflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",98,[[["self"],["waitpidflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",98,[[["self"],["waitpidflag"],["bool"]]]],[11,"pid","","Extracts the PID from the WaitStatus unless it equals StillAlive.",97,[[["self"]],["option",["pid"]]]],[11,"from_raw","","Convert a raw `wstatus` as returned by `waitpid`/`wait` into a `WaitStatus`",97,[[["pid"],["i32"]],["result",["waitstatus"]]]],[0,"unistd","nix","Safe wrappers around functions found in libc \"unistd.h\" header",N,N],[3,"Uid","nix::unistd","User identifier",N,N],[3,"Gid","","Group identifier",N,N],[3,"Pid","","Process identifier",N,N],[4,"ForkResult","","Represents the successful result of calling `fork`",N,N],[13,"Parent","","",99,N],[12,"child","nix::unistd::ForkResult","",99,N],[13,"Child","nix::unistd","",99,N],[4,"FchownatFlags","","Flags for `fchownat` function.",N,N],[13,"FollowSymlink","","",100,N],[13,"NoFollowSymlink","","",100,N],[4,"Whence","","Directive that tells [`lseek`] and [`lseek64`] what the offset is relative to.",N,N],[13,"SeekSet","","Specify an offset relative to the start of the file.",101,N],[13,"SeekCur","","Specify an offset relative to the current file location.",101,N],[13,"SeekEnd","","Specify an offset relative to the end of the file.",101,N],[13,"SeekData","","Specify an offset relative to the next location in the file greater than or equal to offset that contains some data. If offset points to some data, then the file offset is set to offset.",101,N],[13,"SeekHole","","Specify an offset relative to the next hole in the file greater than or equal to offset. If offset points into the middle of a hole, then the file offset should be set to offset. If there is no hole past offset, then the file offset should be adjusted to the end of the file (i.e., there is an implicit hole at the end of any file).",101,N],[4,"PathconfVar","","Variable names for `pathconf`",N,N],[13,"FILESIZEBITS","","Minimum number of bits needed to represent, as a signed integer value, the maximum size of a regular file allowed in the specified directory.",102,N],[13,"LINK_MAX","","Maximum number of links to a single file.",102,N],[13,"MAX_CANON","","Maximum number of bytes in a terminal canonical input line.",102,N],[13,"MAX_INPUT","","Minimum number of bytes for which space is available in a terminal input queue; therefore, the maximum number of bytes a conforming application may require to be typed as input before reading them.",102,N],[13,"NAME_MAX","","Maximum number of bytes in a filename (not including the terminating null of a filename string).",102,N],[13,"PATH_MAX","","Maximum number of bytes the implementation will store as a pathname in a user-supplied buffer of unspecified size, including the terminating null character. Minimum number the implementation will accept as the maximum number of bytes in a pathname.",102,N],[13,"PIPE_BUF","","Maximum number of bytes that is guaranteed to be atomic when writing to a pipe.",102,N],[13,"POSIX_ALLOC_SIZE_MIN","","Minimum number of bytes of storage actually allocated for any portion of a file.",102,N],[13,"POSIX_REC_INCR_XFER_SIZE","","Recommended increment for file transfer sizes between the `POSIX_REC_MIN_XFER_SIZE` and `POSIX_REC_MAX_XFER_SIZE` values.",102,N],[13,"POSIX_REC_MAX_XFER_SIZE","","Maximum recommended file transfer size.",102,N],[13,"POSIX_REC_MIN_XFER_SIZE","","Minimum recommended file transfer size.",102,N],[13,"POSIX_REC_XFER_ALIGN","","Recommended file transfer buffer alignment.",102,N],[13,"SYMLINK_MAX","","Maximum number of bytes in a symbolic link.",102,N],[13,"_POSIX_CHOWN_RESTRICTED","","The use of `chown` and `fchown` is restricted to a process with appropriate privileges, and to changing the group ID of a file only to the effective group ID of the process or to one of its supplementary group IDs.",102,N],[13,"_POSIX_NO_TRUNC","","Pathname components longer than {NAME_MAX} generate an error.",102,N],[13,"_POSIX_VDISABLE","","This symbol shall be defined to be the value of a character that shall disable terminal special character handling.",102,N],[13,"_POSIX_ASYNC_IO","","Asynchronous input or output operations may be performed for the associated file.",102,N],[13,"_POSIX_PRIO_IO","","Prioritized input or output operations may be performed for the associated file.",102,N],[13,"_POSIX_SYNC_IO","","Synchronized input or output operations may be performed for the associated file.",102,N],[4,"SysconfVar","","Variable names for `sysconf`",N,N],[13,"AIO_LISTIO_MAX","","Maximum number of I/O operations in a single list I/O call supported by the implementation.",103,N],[13,"AIO_MAX","","Maximum number of outstanding asynchronous I/O operations supported by the implementation.",103,N],[13,"AIO_PRIO_DELTA_MAX","","The maximum amount by which a process can decrease its asynchronous I/O priority level from its own scheduling priority.",103,N],[13,"ARG_MAX","","Maximum length of argument to the exec functions including environment data.",103,N],[13,"ATEXIT_MAX","","Maximum number of functions that may be registered with `atexit`.",103,N],[13,"BC_BASE_MAX","","Maximum obase values allowed by the bc utility.",103,N],[13,"BC_DIM_MAX","","Maximum number of elements permitted in an array by the bc utility.",103,N],[13,"BC_SCALE_MAX","","Maximum scale value allowed by the bc utility.",103,N],[13,"BC_STRING_MAX","","Maximum length of a string constant accepted by the bc utility.",103,N],[13,"CHILD_MAX","","Maximum number of simultaneous processes per real user ID.",103,N],[13,"COLL_WEIGHTS_MAX","","Maximum number of weights that can be assigned to an entry of the LC_COLLATE order keyword in the locale definition file",103,N],[13,"DELAYTIMER_MAX","","Maximum number of timer expiration overruns.",103,N],[13,"EXPR_NEST_MAX","","Maximum number of expressions that can be nested within parentheses by the expr utility.",103,N],[13,"HOST_NAME_MAX","","Maximum length of a host name (not including the terminating null) as returned from the `gethostname` function",103,N],[13,"IOV_MAX","","Maximum number of iovec structures that one process has available for use with `readv` or `writev`.",103,N],[13,"LINE_MAX","","Unless otherwise noted, the maximum length, in bytes, of a utility's input line (either standard input or another file), when the utility is described as processing text files. The length includes room for the trailing .",103,N],[13,"LOGIN_NAME_MAX","","Maximum length of a login name.",103,N],[13,"NGROUPS_MAX","","Maximum number of simultaneous supplementary group IDs per process.",103,N],[13,"GETGR_R_SIZE_MAX","","Initial size of `getgrgid_r` and `getgrnam_r` data buffers",103,N],[13,"GETPW_R_SIZE_MAX","","Initial size of `getpwuid_r` and `getpwnam_r` data buffers",103,N],[13,"MQ_OPEN_MAX","","The maximum number of open message queue descriptors a process may hold.",103,N],[13,"MQ_PRIO_MAX","","The maximum number of message priorities supported by the implementation.",103,N],[13,"OPEN_MAX","","A value one greater than the maximum value that the system may assign to a newly-created file descriptor.",103,N],[13,"_POSIX_ADVISORY_INFO","","The implementation supports the Advisory Information option.",103,N],[13,"_POSIX_BARRIERS","","The implementation supports barriers.",103,N],[13,"_POSIX_ASYNCHRONOUS_IO","","The implementation supports asynchronous input and output.",103,N],[13,"_POSIX_CLOCK_SELECTION","","The implementation supports clock selection.",103,N],[13,"_POSIX_CPUTIME","","The implementation supports the Process CPU-Time Clocks option.",103,N],[13,"_POSIX_FSYNC","","The implementation supports the File Synchronization option.",103,N],[13,"_POSIX_IPV6","","The implementation supports the IPv6 option.",103,N],[13,"_POSIX_JOB_CONTROL","","The implementation supports job control.",103,N],[13,"_POSIX_MAPPED_FILES","","The implementation supports memory mapped Files.",103,N],[13,"_POSIX_MEMLOCK","","The implementation supports the Process Memory Locking option.",103,N],[13,"_POSIX_MEMLOCK_RANGE","","The implementation supports the Range Memory Locking option.",103,N],[13,"_POSIX_MEMORY_PROTECTION","","The implementation supports memory protection.",103,N],[13,"_POSIX_MESSAGE_PASSING","","The implementation supports the Message Passing option.",103,N],[13,"_POSIX_MONOTONIC_CLOCK","","The implementation supports the Monotonic Clock option.",103,N],[13,"_POSIX_PRIORITIZED_IO","","The implementation supports the Prioritized Input and Output option.",103,N],[13,"_POSIX_PRIORITY_SCHEDULING","","The implementation supports the Process Scheduling option.",103,N],[13,"_POSIX_RAW_SOCKETS","","The implementation supports the Raw Sockets option.",103,N],[13,"_POSIX_READER_WRITER_LOCKS","","The implementation supports read-write locks.",103,N],[13,"_POSIX_REALTIME_SIGNALS","","The implementation supports realtime signals.",103,N],[13,"_POSIX_REGEXP","","The implementation supports the Regular Expression Handling option.",103,N],[13,"_POSIX_SAVED_IDS","","Each process has a saved set-user-ID and a saved set-group-ID.",103,N],[13,"_POSIX_SEMAPHORES","","The implementation supports semaphores.",103,N],[13,"_POSIX_SHARED_MEMORY_OBJECTS","","The implementation supports the Shared Memory Objects option.",103,N],[13,"_POSIX_SHELL","","The implementation supports the POSIX shell.",103,N],[13,"_POSIX_SPAWN","","The implementation supports the Spawn option.",103,N],[13,"_POSIX_SPIN_LOCKS","","The implementation supports spin locks.",103,N],[13,"_POSIX_SPORADIC_SERVER","","The implementation supports the Process Sporadic Server option.",103,N],[13,"_POSIX_SYNCHRONIZED_IO","","The implementation supports the Synchronized Input and Output option.",103,N],[13,"_POSIX_THREAD_ATTR_STACKADDR","","The implementation supports the Thread Stack Address Attribute option.",103,N],[13,"_POSIX_THREAD_ATTR_STACKSIZE","","The implementation supports the Thread Stack Size Attribute option.",103,N],[13,"_POSIX_THREAD_PRIO_INHERIT","","The implementation supports the Non-Robust Mutex Priority Inheritance option.",103,N],[13,"_POSIX_THREAD_PRIO_PROTECT","","The implementation supports the Non-Robust Mutex Priority Protection option.",103,N],[13,"_POSIX_THREAD_PRIORITY_SCHEDULING","","The implementation supports the Thread Execution Scheduling option.",103,N],[13,"_POSIX_THREAD_PROCESS_SHARED","","The implementation supports the Thread Process-Shared Synchronization option.",103,N],[13,"_POSIX_THREAD_SAFE_FUNCTIONS","","The implementation supports thread-safe functions.",103,N],[13,"_POSIX_THREAD_SPORADIC_SERVER","","The implementation supports the Thread Sporadic Server option.",103,N],[13,"_POSIX_THREADS","","The implementation supports threads.",103,N],[13,"_POSIX_TIMEOUTS","","The implementation supports timeouts.",103,N],[13,"_POSIX_TIMERS","","The implementation supports timers.",103,N],[13,"_POSIX_TRACE","","The implementation supports the Trace option.",103,N],[13,"_POSIX_TRACE_EVENT_FILTER","","The implementation supports the Trace Event Filter option.",103,N],[13,"_POSIX_TRACE_INHERIT","","The implementation supports the Trace Inherit option.",103,N],[13,"_POSIX_TRACE_LOG","","The implementation supports the Trace Log option.",103,N],[13,"_POSIX_TYPED_MEMORY_OBJECTS","","The implementation supports the Typed Memory Objects option.",103,N],[13,"_POSIX_VERSION","","Integer value indicating version of this standard (C-language binding) to which the implementation conforms. For implementations conforming to POSIX.1-2008, the value shall be 200809L.",103,N],[13,"_POSIX_V6_ILP32_OFF32","","The implementation provides a C-language compilation environment with 32-bit `int`, `long`, `pointer`, and `off_t` types.",103,N],[13,"_POSIX_V6_ILP32_OFFBIG","","The implementation provides a C-language compilation environment with 32-bit `int`, `long`, and pointer types and an `off_t` type using at least 64 bits.",103,N],[13,"_POSIX_V6_LP64_OFF64","","The implementation provides a C-language compilation environment with 32-bit `int` and 64-bit `long`, `pointer`, and `off_t` types.",103,N],[13,"_POSIX_V6_LPBIG_OFFBIG","","The implementation provides a C-language compilation environment with an `int` type using at least 32 bits and `long`, pointer, and `off_t` types using at least 64 bits.",103,N],[13,"_POSIX2_C_BIND","","The implementation supports the C-Language Binding option.",103,N],[13,"_POSIX2_C_DEV","","The implementation supports the C-Language Development Utilities option.",103,N],[13,"_POSIX2_CHAR_TERM","","The implementation supports the Terminal Characteristics option.",103,N],[13,"_POSIX2_FORT_DEV","","The implementation supports the FORTRAN Development Utilities option.",103,N],[13,"_POSIX2_FORT_RUN","","The implementation supports the FORTRAN Runtime Utilities option.",103,N],[13,"_POSIX2_LOCALEDEF","","The implementation supports the creation of locales by the localedef utility.",103,N],[13,"_POSIX2_PBS","","The implementation supports the Batch Environment Services and Utilities option.",103,N],[13,"_POSIX2_PBS_ACCOUNTING","","The implementation supports the Batch Accounting option.",103,N],[13,"_POSIX2_PBS_CHECKPOINT","","The implementation supports the Batch Checkpoint/Restart option.",103,N],[13,"_POSIX2_PBS_LOCATE","","The implementation supports the Locate Batch Job Request option.",103,N],[13,"_POSIX2_PBS_MESSAGE","","The implementation supports the Batch Job Message Request option.",103,N],[13,"_POSIX2_PBS_TRACK","","The implementation supports the Track Batch Job Request option.",103,N],[13,"_POSIX2_SW_DEV","","The implementation supports the Software Development Utilities option.",103,N],[13,"_POSIX2_UPE","","The implementation supports the User Portability Utilities option.",103,N],[13,"_POSIX2_VERSION","","Integer value indicating version of the Shell and Utilities volume of POSIX.1 to which the implementation conforms.",103,N],[13,"PAGE_SIZE","","The size of a system page in bytes.",103,N],[13,"PTHREAD_DESTRUCTOR_ITERATIONS","","",103,N],[13,"PTHREAD_KEYS_MAX","","",103,N],[13,"PTHREAD_STACK_MIN","","",103,N],[13,"PTHREAD_THREADS_MAX","","",103,N],[13,"RE_DUP_MAX","","",103,N],[13,"RTSIG_MAX","","",103,N],[13,"SEM_NSEMS_MAX","","",103,N],[13,"SEM_VALUE_MAX","","",103,N],[13,"SIGQUEUE_MAX","","",103,N],[13,"STREAM_MAX","","",103,N],[13,"SYMLOOP_MAX","","",103,N],[13,"TIMER_MAX","","",103,N],[13,"TTY_NAME_MAX","","",103,N],[13,"TZNAME_MAX","","",103,N],[13,"_XOPEN_CRYPT","","The implementation supports the X/Open Encryption Option Group.",103,N],[13,"_XOPEN_ENH_I18N","","The implementation supports the Issue 4, Version 2 Enhanced Internationalization Option Group.",103,N],[13,"_XOPEN_LEGACY","","",103,N],[13,"_XOPEN_REALTIME","","The implementation supports the X/Open Realtime Option Group.",103,N],[13,"_XOPEN_REALTIME_THREADS","","The implementation supports the X/Open Realtime Threads Option Group.",103,N],[13,"_XOPEN_SHM","","The implementation supports the Issue 4, Version 2 Shared Memory Option Group.",103,N],[13,"_XOPEN_STREAMS","","The implementation supports the XSI STREAMS Option Group.",103,N],[13,"_XOPEN_UNIX","","The implementation supports the XSI option",103,N],[13,"_XOPEN_VERSION","","Integer value indicating version of the X/Open Portability Guide to which the implementation conforms.",103,N],[5,"setresuid","","Sets the real, effective, and saved uid. (see setresuid(2))",N,[[["uid"],["uid"],["uid"]],["result"]]],[5,"setresgid","","Sets the real, effective, and saved gid. (see setresuid(2))",N,[[["gid"],["gid"],["gid"]],["result"]]],[5,"fork","","Create a new child process duplicating the parent process (see fork(2)).",N,[[],["result",["forkresult"]]]],[5,"getpid","","Get the pid of this process (see getpid(2)).",N,[[],["pid"]]],[5,"getppid","","Get the pid of this processes' parent (see getpid(2)).",N,[[],["pid"]]],[5,"setpgid","","Set a process group ID (see setpgid(2)).",N,[[["pid"],["pid"]],["result"]]],[5,"getpgid","","",N,[[["option",["pid"]]],["result",["pid"]]]],[5,"setsid","","Create new session and set process group id (see setsid(2)).",N,[[],["result",["pid"]]]],[5,"getsid","","Get the process group ID of a session leader getsid(2).",N,[[["option",["pid"]]],["result",["pid"]]]],[5,"tcgetpgrp","","Get the terminal foreground process group (see tcgetpgrp(3)).",N,[[["c_int"]],["result",["pid"]]]],[5,"tcsetpgrp","","Set the terminal foreground process group (see tcgetpgrp(3)).",N,[[["c_int"],["pid"]],["result"]]],[5,"getpgrp","","Get the group id of the calling process (see getpgrp(3)).",N,[[],["pid"]]],[5,"dup","","Create a copy of the specified file descriptor (see dup(2)).",N,[[["rawfd"]],["result",["rawfd"]]]],[5,"dup2","","Create a copy of the specified file descriptor using the specified fd (see dup(2)).",N,[[["rawfd"],["rawfd"]],["result",["rawfd"]]]],[5,"dup3","","Create a new copy of the specified file descriptor using the specified fd and flags (see dup(2)).",N,[[["rawfd"],["rawfd"],["oflag"]],["result",["rawfd"]]]],[5,"chdir","","Change the current working directory of the calling process (see chdir(2)).",N,[[["p"]],["result"]]],[5,"fchdir","","Change the current working directory of the process to the one given as an open file descriptor (see fchdir(2)).",N,[[["rawfd"]],["result"]]],[5,"mkdir","","Creates new directory `path` with access rights `mode`.  (see mkdir(2))",N,[[["p"],["mode"]],["result"]]],[5,"mkfifo","","Creates new fifo special file (named pipe) with path `path` and access rights `mode`.",N,[[["p"],["mode"]],["result"]]],[5,"getcwd","","Returns the current directory as a `PathBuf`",N,[[],["result",["pathbuf"]]]],[5,"chown","","Change the ownership of the file at `path` to be owned by the specified `owner` (user) and `group` (see chown(2)).",N,[[["p"],["option",["uid"]],["option",["gid"]]],["result"]]],[5,"fchownat","","Change the ownership of the file at `path` to be owned by the specified `owner` (user) and `group`.",N,[[["option",["rawfd"]],["p"],["option",["uid"]],["option",["gid"]],["fchownatflags"]],["result"]]],[5,"execv","","Replace the current process image with a new one (see exec(3)).",N,N],[5,"execve","","Replace the current process image with a new one (see execve(2)).",N,N],[5,"execvp","","Replace the current process image with a new one and replicate shell `PATH` searching behavior (see exec(3)).",N,N],[5,"fexecve","","Replace the current process image with a new one (see fexecve(2)).",N,N],[5,"daemon","","Daemonize this process by detaching from the controlling terminal (see daemon(3)).",N,[[["bool"],["bool"]],["result"]]],[5,"sethostname","","Set the system host name (see sethostname(2)).",N,[[["s"]],["result"]]],[5,"gethostname","","Get the host name and store it in the provided buffer, returning a pointer the `CStr` in that buffer on success (see gethostname(2)).",N,N],[5,"close","","Close a raw file descriptor",N,[[["rawfd"]],["result"]]],[5,"read","","Read from a raw file descriptor.",N,N],[5,"write","","Write to a raw file descriptor.",N,N],[5,"lseek","","Move the read/write file offset.",N,[[["rawfd"],["off_t"],["whence"]],["result",["off_t"]]]],[5,"pipe","","Create an interprocess channel.",N,[[],["result"]]],[5,"pipe2","","Like `pipe`, but allows setting certain file descriptor flags.",N,[[["oflag"]],["result"]]],[5,"truncate","","Truncate a file to a specified length",N,[[["p"],["off_t"]],["result"]]],[5,"ftruncate","","Truncate a file to a specified length",N,[[["rawfd"],["off_t"]],["result"]]],[5,"isatty","","",N,[[["rawfd"]],["result",["bool"]]]],[5,"unlink","","Remove a directory entry",N,[[["p"]],["result"]]],[5,"chroot","","",N,[[["p"]],["result"]]],[5,"sync","","Commit filesystem caches to disk",N,N],[5,"fsync","","Synchronize changes to a file",N,[[["rawfd"]],["result"]]],[5,"getuid","","Get a real user ID",N,[[],["uid"]]],[5,"geteuid","","Get the effective user ID",N,[[],["uid"]]],[5,"getgid","","Get the real group ID",N,[[],["gid"]]],[5,"getegid","","Get the effective group ID",N,[[],["gid"]]],[5,"setuid","","Set the user ID",N,[[["uid"]],["result"]]],[5,"setgid","","Set the user ID",N,[[["gid"]],["result"]]],[5,"getgroups","","Get the list of supplementary group IDs of the calling process.",N,[[],["result",["vec"]]]],[5,"setgroups","","Set the list of supplementary group IDs for the calling process.",N,N],[5,"getgrouplist","","Calculate the supplementary group access list.",N,[[["cstr"],["gid"]],["result",["vec"]]]],[5,"initgroups","","Initialize the supplementary group access list.",N,[[["cstr"],["gid"]],["result"]]],[5,"pause","","Suspend the thread until a signal is received.",N,[[]]],[5,"sleep","","Suspend execution for an interval of time",N,[[["c_uint"]],["c_uint"]]],[5,"mkstemp","","Creates a regular file which persists even after process termination",N,[[["p"]],["result"]]],[5,"fpathconf","","Like `pathconf`, but works with file descriptors instead of paths (see fpathconf(2))",N,[[["rawfd"],["pathconfvar"]],["result",["option"]]]],[5,"pathconf","","Get path-dependent configurable system variables (see pathconf(2))",N,[[["p"],["pathconfvar"]],["result",["option"]]]],[5,"sysconf","","Get configurable system variables (see sysconf(3))",N,[[["sysconfvar"]],["result",["option"]]]],[0,"alarm","","Alarm signal scheduling.",N,N],[5,"set","nix::unistd::alarm","Schedule an alarm signal.",N,[[["c_uint"]],["option",["c_uint"]]]],[5,"cancel","","Cancel an previously set alarm signal.",N,[[],["option",["c_uint"]]]],[0,"acct","nix::unistd","",N,N],[5,"enable","nix::unistd::acct","Enable process accounting",N,[[["p"]],["result"]]],[5,"disable","","Disable process accounting",N,[[],["result"]]],[17,"ROOT","nix::unistd","Constant for UID = 0",N,N],[11,"from_raw","","Creates `Uid` from raw `uid_t`.",104,[[["uid_t"]],["self"]]],[11,"current","","Returns Uid of calling process. This is practically a more Rusty alias for `getuid`.",104,[[],["self"]]],[11,"effective","","Returns effective Uid of calling process. This is practically a more Rusty alias for `geteuid`.",104,[[],["self"]]],[11,"is_root","","Returns true if the `Uid` represents privileged user - root. (If it equals zero.)",104,[[["self"]],["bool"]]],[11,"as_raw","","Get the raw `uid_t` wrapped by `self`.",104,[[["self"]],["uid_t"]]],[11,"from_raw","","Creates `Gid` from raw `gid_t`.",105,[[["gid_t"]],["self"]]],[11,"current","","Returns Gid of calling process. This is practically a more Rusty alias for `getgid`.",105,[[],["self"]]],[11,"effective","","Returns effective Gid of calling process. This is practically a more Rusty alias for `getgid`.",105,[[],["self"]]],[11,"as_raw","","Get the raw `gid_t` wrapped by `self`.",105,[[["self"]],["gid_t"]]],[11,"from_raw","","Creates `Pid` from raw `pid_t`.",106,[[["pid_t"]],["self"]]],[11,"this","","Returns PID of calling process",106,[[],["self"]]],[11,"parent","","Returns PID of parent of calling process",106,[[],["self"]]],[11,"as_raw","","Get the raw `pid_t` wrapped by `self`.",106,[[["self"]],["pid_t"]]],[11,"is_child","","Return `true` if this is the child process of the `fork()`",99,[[["self"]],["bool"]]],[11,"is_parent","","Returns `true` if this is the parent process of the `fork()`",99,[[["self"]],["bool"]]],[6,"Result","nix","Nix Result Type",N,N],[8,"NixPath","","",N,N],[10,"len","","",107,[[["self"]],["usize"]]],[10,"with_nix_path","","",107,[[["self"],["f"]],["result"]]],[11,"as_errno","","Convert this `Error` to an `Errno`.",0,[[["self"]],["option",["errno"]]]],[11,"from_errno","","Create a nix Error from a given errno",0,[[["errno"]],["error"]]],[11,"last","","Get the current errno and convert it to a nix Error",0,[[],["error"]]],[11,"invalid_argument","","Create a new invalid argument error (`EINVAL`)",0,[[],["error"]]],[14,"request_code_none","","Generate an ioctl request code for a command that passes no data.",N,N],[14,"request_code_write_int","","Generate an ioctl request code for a command that passes an integer",N,N],[14,"request_code_read","","Generate an ioctl request code for a command that reads.",N,N],[14,"request_code_write","","Generate an ioctl request code for a command that writes.",N,N],[14,"request_code_readwrite","","Generate an ioctl request code for a command that reads and writes.",N,N],[14,"ioctl_none","","Generates a wrapper function for an ioctl that passes no data to the kernel.",N,N],[14,"ioctl_none_bad","","Generates a wrapper function for a \"bad\" ioctl that passes no data to the kernel.",N,N],[14,"ioctl_read","","Generates a wrapper function for an ioctl that reads data from the kernel.",N,N],[14,"ioctl_read_bad","","Generates a wrapper function for a \"bad\" ioctl that reads data from the kernel.",N,N],[14,"ioctl_write_ptr","","Generates a wrapper function for an ioctl that writes data through a pointer to the kernel.",N,N],[14,"ioctl_write_ptr_bad","","Generates a wrapper function for a \"bad\" ioctl that writes data through a pointer to the kernel.",N,N],[14,"ioctl_write_int","","Generates a wrapper function for a ioctl that writes an integer to the kernel.",N,N],[14,"ioctl_write_int_bad","","Generates a wrapper function for a \"bad\" ioctl that writes an integer to the kernel.",N,N],[14,"ioctl_readwrite","","Generates a wrapper function for an ioctl that reads and writes data to the kernel.",N,N],[14,"ioctl_readwrite_bad","","Generates a wrapper function for a \"bad\" ioctl that reads and writes data to the kernel.",N,N],[14,"ioctl_read_buf","","Generates a wrapper function for an ioctl that reads an array of elements from the kernel.",N,N],[14,"ioctl_write_buf","","Generates a wrapper function for an ioctl that writes an array of elements to the kernel.",N,N],[14,"ioctl_readwrite_buf","","Generates a wrapper function for an ioctl that reads and writes an array of elements to the kernel.",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","nix::dir","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into_iter","","",108,[[["self"]],["i"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into","nix::errno","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","nix::fcntl","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","nix::ifaddrs","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"into_iter","","",109,[[["self"]],["i"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"into","nix::mqueue","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"into","nix::net::if_","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into","nix::poll","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"into","nix::pty","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"into","nix::sys::aio","",26,[[["self"]],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"into","nix::sys::event","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"into","nix::sys::mman","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"into","nix::sys::ptrace","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"into","nix::sys::select","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"into","nix::sys::sendfile","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"into","nix::sys::signal","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"into_iter","","",111,[[["self"]],["i"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,N],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"into","nix::sys::socket","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"to_string","","",54,[[["self"]],["string"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"to_string","","",55,[[["self"]],["string"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"to_string","","",57,[[["self"]],["string"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"into_iter","","",112,[[["self"]],["i"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"to_string","","",60,[[["self"]],["string"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"to_string","","",61,[[["self"]],["string"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"to_string","","",62,[[["self"]],["string"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into","nix::sys::socket::sockopt","",113,[[["self"]],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,N],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,N],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,N],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,N],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,N],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,N],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,N],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,N],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,N],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,N],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,N],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,N],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,N],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,N],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,N],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,N],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,N],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,N],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,N],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,N],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,N],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,N],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,N],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"into","nix::sys::stat","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"into","nix::sys::statvfs","",80,[[["self"]],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,N],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"into","nix::sys::termios","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,N],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,N],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,N],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"into","nix::sys::time","",93,[[["self"]],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,N],[11,"to_string","","",93,[[["self"]],["string"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"to_string","","",94,[[["self"]],["string"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"into","nix::sys::uio","",95,[[["self"]],["u"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"into","nix::sys::utsname","",96,[[["self"]],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,N],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"into","nix::sys::wait","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"into","nix::unistd","",104,[[["self"]],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,N],[11,"to_string","","",104,[[["self"]],["string"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,N],[11,"to_string","","",105,[[["self"]],["string"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,N],[11,"to_string","","",106,[[["self"]],["string"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,N],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"clone","nix::sys::socket","",53,[[["self"]],["sockaddr_un"]]],[11,"clone","","",47,[[["self"]],["cmsghdr"]]],[11,"clone","","",52,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",51,[[["self"]],["sockaddr_in6"]]],[11,"clone","nix::pty","",18,[[["self"]],["winsize"]]],[11,"clone","nix::sys::socket","",49,[[["self"]],["sockaddr"]]],[11,"clone","","",48,[[["self"]],["msghdr"]]],[11,"clone","","",50,[[["self"]],["sockaddr_in"]]],[11,"clone","nix::sys::stat","",75,[[["self"]],["stat"]]],[11,"get","nix::sys::socket::sockopt","",113,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",114,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",115,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",116,[[["self"],["rawfd"]],["result",["linger"]]]],[11,"get","","",121,[[["self"],["rawfd"]],["result",["u8"]]]],[11,"get","","",122,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",123,[[["self"],["rawfd"]],["result",["timeval"]]]],[11,"get","","",124,[[["self"],["rawfd"]],["result",["timeval"]]]],[11,"get","","",125,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",126,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",127,[[["self"],["rawfd"]],["result",["i32"]]]],[11,"get","","",128,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",129,[[["self"],["rawfd"]],["result",["u32"]]]],[11,"get","","",130,[[["self"],["rawfd"]],["result",["usize"]]]],[11,"get","","",131,[[["self"],["rawfd"]],["result",["usize"]]]],[11,"get","","",132,[[["self"],["rawfd"]],["result",["socktype"]]]],[11,"get","","",133,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",134,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"get","","",135,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"set","","",113,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",114,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",115,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",116,[[["self"],["rawfd"],["linger"]],["result"]]],[11,"set","","",117,[[["self"],["rawfd"],["ipmembershiprequest"]],["result"]]],[11,"set","","",118,[[["self"],["rawfd"],["ipmembershiprequest"]],["result"]]],[11,"set","","",119,[[["self"],["rawfd"],["ipv6membershiprequest"]],["result"]]],[11,"set","","",120,[[["self"],["rawfd"],["ipv6membershiprequest"]],["result"]]],[11,"set","","",121,[[["self"],["rawfd"],["u8"]],["result"]]],[11,"set","","",122,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",123,[[["self"],["rawfd"],["timeval"]],["result"]]],[11,"set","","",124,[[["self"],["rawfd"],["timeval"]],["result"]]],[11,"set","","",125,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",126,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",128,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",129,[[["self"],["rawfd"],["u32"]],["result"]]],[11,"set","","",130,[[["self"],["rawfd"],["usize"]],["result"]]],[11,"set","","",131,[[["self"],["rawfd"],["usize"]],["result"]]],[11,"set","","",134,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"set","","",135,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"seconds","nix::sys::time","",93,[[["i64"]],["timespec"]]],[11,"milliseconds","","",93,[[["i64"]],["timespec"]]],[11,"microseconds","","Makes a new `TimeSpec` with given number of microseconds.",93,[[["i64"]],["timespec"]]],[11,"nanoseconds","","Makes a new `TimeSpec` with given number of nanoseconds.",93,[[["i64"]],["timespec"]]],[11,"num_seconds","","",93,[[["self"]],["i64"]]],[11,"num_milliseconds","","",93,[[["self"]],["i64"]]],[11,"num_microseconds","","",93,[[["self"]],["i64"]]],[11,"num_nanoseconds","","",93,[[["self"]],["i64"]]],[11,"seconds","","",94,[[["i64"]],["timeval"]]],[11,"milliseconds","","",94,[[["i64"]],["timeval"]]],[11,"microseconds","","Makes a new `TimeVal` with given number of microseconds.",94,[[["i64"]],["timeval"]]],[11,"nanoseconds","","Makes a new `TimeVal` with given number of nanoseconds.  Some precision will be lost",94,[[["i64"]],["timeval"]]],[11,"num_seconds","","",94,[[["self"]],["i64"]]],[11,"num_milliseconds","","",94,[[["self"]],["i64"]]],[11,"num_microseconds","","",94,[[["self"]],["i64"]]],[11,"num_nanoseconds","","",94,[[["self"]],["i64"]]],[11,"cmp","nix::fcntl","",8,[[["self"],["atflags"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["oflag"]],["ordering"]]],[11,"cmp","","",10,[[["self"],["fdflag"]],["ordering"]]],[11,"cmp","nix::mqueue","",12,[[["self"],["mq_oflag"]],["ordering"]]],[11,"cmp","","",13,[[["self"],["fdflag"]],["ordering"]]],[11,"cmp","nix::net::if_","",15,[[["self"],["interfaceflags"]],["ordering"]]],[11,"cmp","nix::poll","",17,[[["self"],["eventflags"]],["ordering"]]],[11,"cmp","nix::sys::aio","",21,[[["self"],["aiofsyncmode"]],["ordering"]]],[11,"cmp","","",22,[[["self"],["lioopcode"]],["ordering"]]],[11,"cmp","","",23,[[["self"],["liomode"]],["ordering"]]],[11,"cmp","nix::sys::event","",27,[[["self"],["eventfilter"]],["ordering"]]],[11,"cmp","","",28,[[["self"],["eventflag"]],["ordering"]]],[11,"cmp","","",29,[[["self"],["filterflag"]],["ordering"]]],[11,"cmp","nix::sys::mman","",32,[[["self"],["protflags"]],["ordering"]]],[11,"cmp","","",33,[[["self"],["mapflags"]],["ordering"]]],[11,"cmp","","",31,[[["self"],["mmapadvise"]],["ordering"]]],[11,"cmp","","",34,[[["self"],["msflags"]],["ordering"]]],[11,"cmp","","",35,[[["self"],["mlockallflags"]],["ordering"]]],[11,"cmp","nix::sys::ptrace","",36,[[["self"],["request"]],["ordering"]]],[11,"cmp","nix::sys::sendfile","",38,[[["self"],["sfflags"]],["ordering"]]],[11,"cmp","nix::sys::signal","",39,[[["self"],["signal"]],["ordering"]]],[11,"cmp","","",44,[[["self"],["saflags"]],["ordering"]]],[11,"cmp","","",40,[[["self"],["sigmaskhow"]],["ordering"]]],[11,"cmp","nix::sys::socket","",70,[[["self"],["sockflag"]],["ordering"]]],[11,"cmp","","",71,[[["self"],["msgflags"]],["ordering"]]],[11,"cmp","nix::sys::stat","",78,[[["self"],["sflag"]],["ordering"]]],[11,"cmp","","",79,[[["self"],["mode"]],["ordering"]]],[11,"cmp","nix::sys::statvfs","",80,[[["self"],["fsflags"]],["ordering"]]],[11,"cmp","nix::sys::termios","",83,[[["self"],["baudrate"]],["ordering"]]],[11,"cmp","","",84,[[["self"],["setarg"]],["ordering"]]],[11,"cmp","","",85,[[["self"],["flusharg"]],["ordering"]]],[11,"cmp","","",86,[[["self"],["flowarg"]],["ordering"]]],[11,"cmp","","",87,[[["self"],["specialcharacterindices"]],["ordering"]]],[11,"cmp","","",88,[[["self"],["inputflags"]],["ordering"]]],[11,"cmp","","",89,[[["self"],["outputflags"]],["ordering"]]],[11,"cmp","","",90,[[["self"],["controlflags"]],["ordering"]]],[11,"cmp","","",91,[[["self"],["localflags"]],["ordering"]]],[11,"cmp","nix::sys::time","",93,[[["self"],["timespec"]],["ordering"]]],[11,"cmp","","",94,[[["self"],["timeval"]],["ordering"]]],[11,"cmp","nix::sys::wait","",98,[[["self"],["waitpidflag"]],["ordering"]]],[11,"drop","nix::dir","",2,[[["self"]]]],[11,"drop","","",108,[[["self"]]]],[11,"drop","nix::ifaddrs","",109,[[["self"]]]],[11,"drop","nix::pty","",110,[[["self"]]]],[11,"drop","nix::sys::aio","If the `AioCb` has no remaining state in the kernel, just drop it. Otherwise, dropping constitutes a resource leak, which is an error",26,[[["self"]]]],[11,"extend","nix::fcntl","",8,[[["self"],["t"]]]],[11,"extend","","",9,[[["self"],["t"]]]],[11,"extend","","",10,[[["self"],["t"]]]],[11,"extend","nix::mqueue","",12,[[["self"],["t"]]]],[11,"extend","","",13,[[["self"],["t"]]]],[11,"extend","nix::net::if_","",15,[[["self"],["t"]]]],[11,"extend","nix::poll","",17,[[["self"],["t"]]]],[11,"extend","nix::sys::event","",28,[[["self"],["t"]]]],[11,"extend","","",29,[[["self"],["t"]]]],[11,"extend","nix::sys::mman","",32,[[["self"],["t"]]]],[11,"extend","","",33,[[["self"],["t"]]]],[11,"extend","","",34,[[["self"],["t"]]]],[11,"extend","","",35,[[["self"],["t"]]]],[11,"extend","nix::sys::sendfile","",38,[[["self"],["t"]]]],[11,"extend","nix::sys::signal","",44,[[["self"],["t"]]]],[11,"extend","nix::sys::socket","",70,[[["self"],["t"]]]],[11,"extend","","",71,[[["self"],["t"]]]],[11,"extend","nix::sys::stat","",78,[[["self"],["t"]]]],[11,"extend","","",79,[[["self"],["t"]]]],[11,"extend","nix::sys::statvfs","",80,[[["self"],["t"]]]],[11,"extend","nix::sys::termios","",88,[[["self"],["t"]]]],[11,"extend","","",89,[[["self"],["t"]]]],[11,"extend","","",90,[[["self"],["t"]]]],[11,"extend","","",91,[[["self"],["t"]]]],[11,"extend","nix::sys::wait","",98,[[["self"],["t"]]]],[11,"partial_cmp","nix::fcntl","",8,[[["self"],["atflags"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["atflags"]],["bool"]]],[11,"le","","",8,[[["self"],["atflags"]],["bool"]]],[11,"gt","","",8,[[["self"],["atflags"]],["bool"]]],[11,"ge","","",8,[[["self"],["atflags"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["oflag"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["oflag"]],["bool"]]],[11,"le","","",9,[[["self"],["oflag"]],["bool"]]],[11,"gt","","",9,[[["self"],["oflag"]],["bool"]]],[11,"ge","","",9,[[["self"],["oflag"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["fdflag"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["fdflag"]],["bool"]]],[11,"le","","",10,[[["self"],["fdflag"]],["bool"]]],[11,"gt","","",10,[[["self"],["fdflag"]],["bool"]]],[11,"ge","","",10,[[["self"],["fdflag"]],["bool"]]],[11,"partial_cmp","nix::mqueue","",12,[[["self"],["mq_oflag"]],["option",["ordering"]]]],[11,"lt","","",12,[[["self"],["mq_oflag"]],["bool"]]],[11,"le","","",12,[[["self"],["mq_oflag"]],["bool"]]],[11,"gt","","",12,[[["self"],["mq_oflag"]],["bool"]]],[11,"ge","","",12,[[["self"],["mq_oflag"]],["bool"]]],[11,"partial_cmp","","",13,[[["self"],["fdflag"]],["option",["ordering"]]]],[11,"lt","","",13,[[["self"],["fdflag"]],["bool"]]],[11,"le","","",13,[[["self"],["fdflag"]],["bool"]]],[11,"gt","","",13,[[["self"],["fdflag"]],["bool"]]],[11,"ge","","",13,[[["self"],["fdflag"]],["bool"]]],[11,"partial_cmp","nix::net::if_","",15,[[["self"],["interfaceflags"]],["option",["ordering"]]]],[11,"lt","","",15,[[["self"],["interfaceflags"]],["bool"]]],[11,"le","","",15,[[["self"],["interfaceflags"]],["bool"]]],[11,"gt","","",15,[[["self"],["interfaceflags"]],["bool"]]],[11,"ge","","",15,[[["self"],["interfaceflags"]],["bool"]]],[11,"partial_cmp","nix::poll","",17,[[["self"],["eventflags"]],["option",["ordering"]]]],[11,"lt","","",17,[[["self"],["eventflags"]],["bool"]]],[11,"le","","",17,[[["self"],["eventflags"]],["bool"]]],[11,"gt","","",17,[[["self"],["eventflags"]],["bool"]]],[11,"ge","","",17,[[["self"],["eventflags"]],["bool"]]],[11,"partial_cmp","nix::sys::aio","",21,[[["self"],["aiofsyncmode"]],["option",["ordering"]]]],[11,"partial_cmp","","",22,[[["self"],["lioopcode"]],["option",["ordering"]]]],[11,"partial_cmp","","",23,[[["self"],["liomode"]],["option",["ordering"]]]],[11,"partial_cmp","nix::sys::event","",27,[[["self"],["eventfilter"]],["option",["ordering"]]]],[11,"partial_cmp","","",28,[[["self"],["eventflag"]],["option",["ordering"]]]],[11,"lt","","",28,[[["self"],["eventflag"]],["bool"]]],[11,"le","","",28,[[["self"],["eventflag"]],["bool"]]],[11,"gt","","",28,[[["self"],["eventflag"]],["bool"]]],[11,"ge","","",28,[[["self"],["eventflag"]],["bool"]]],[11,"partial_cmp","","",29,[[["self"],["filterflag"]],["option",["ordering"]]]],[11,"lt","","",29,[[["self"],["filterflag"]],["bool"]]],[11,"le","","",29,[[["self"],["filterflag"]],["bool"]]],[11,"gt","","",29,[[["self"],["filterflag"]],["bool"]]],[11,"ge","","",29,[[["self"],["filterflag"]],["bool"]]],[11,"partial_cmp","nix::sys::mman","",32,[[["self"],["protflags"]],["option",["ordering"]]]],[11,"lt","","",32,[[["self"],["protflags"]],["bool"]]],[11,"le","","",32,[[["self"],["protflags"]],["bool"]]],[11,"gt","","",32,[[["self"],["protflags"]],["bool"]]],[11,"ge","","",32,[[["self"],["protflags"]],["bool"]]],[11,"partial_cmp","","",33,[[["self"],["mapflags"]],["option",["ordering"]]]],[11,"lt","","",33,[[["self"],["mapflags"]],["bool"]]],[11,"le","","",33,[[["self"],["mapflags"]],["bool"]]],[11,"gt","","",33,[[["self"],["mapflags"]],["bool"]]],[11,"ge","","",33,[[["self"],["mapflags"]],["bool"]]],[11,"partial_cmp","","",31,[[["self"],["mmapadvise"]],["option",["ordering"]]]],[11,"partial_cmp","","",34,[[["self"],["msflags"]],["option",["ordering"]]]],[11,"lt","","",34,[[["self"],["msflags"]],["bool"]]],[11,"le","","",34,[[["self"],["msflags"]],["bool"]]],[11,"gt","","",34,[[["self"],["msflags"]],["bool"]]],[11,"ge","","",34,[[["self"],["msflags"]],["bool"]]],[11,"partial_cmp","","",35,[[["self"],["mlockallflags"]],["option",["ordering"]]]],[11,"lt","","",35,[[["self"],["mlockallflags"]],["bool"]]],[11,"le","","",35,[[["self"],["mlockallflags"]],["bool"]]],[11,"gt","","",35,[[["self"],["mlockallflags"]],["bool"]]],[11,"ge","","",35,[[["self"],["mlockallflags"]],["bool"]]],[11,"partial_cmp","nix::sys::ptrace","",36,[[["self"],["request"]],["option",["ordering"]]]],[11,"partial_cmp","nix::sys::sendfile","",38,[[["self"],["sfflags"]],["option",["ordering"]]]],[11,"lt","","",38,[[["self"],["sfflags"]],["bool"]]],[11,"le","","",38,[[["self"],["sfflags"]],["bool"]]],[11,"gt","","",38,[[["self"],["sfflags"]],["bool"]]],[11,"ge","","",38,[[["self"],["sfflags"]],["bool"]]],[11,"partial_cmp","nix::sys::signal","",39,[[["self"],["signal"]],["option",["ordering"]]]],[11,"partial_cmp","","",44,[[["self"],["saflags"]],["option",["ordering"]]]],[11,"lt","","",44,[[["self"],["saflags"]],["bool"]]],[11,"le","","",44,[[["self"],["saflags"]],["bool"]]],[11,"gt","","",44,[[["self"],["saflags"]],["bool"]]],[11,"ge","","",44,[[["self"],["saflags"]],["bool"]]],[11,"partial_cmp","","",40,[[["self"],["sigmaskhow"]],["option",["ordering"]]]],[11,"partial_cmp","nix::sys::socket","",70,[[["self"],["sockflag"]],["option",["ordering"]]]],[11,"lt","","",70,[[["self"],["sockflag"]],["bool"]]],[11,"le","","",70,[[["self"],["sockflag"]],["bool"]]],[11,"gt","","",70,[[["self"],["sockflag"]],["bool"]]],[11,"ge","","",70,[[["self"],["sockflag"]],["bool"]]],[11,"partial_cmp","","",71,[[["self"],["msgflags"]],["option",["ordering"]]]],[11,"lt","","",71,[[["self"],["msgflags"]],["bool"]]],[11,"le","","",71,[[["self"],["msgflags"]],["bool"]]],[11,"gt","","",71,[[["self"],["msgflags"]],["bool"]]],[11,"ge","","",71,[[["self"],["msgflags"]],["bool"]]],[11,"partial_cmp","nix::sys::stat","",78,[[["self"],["sflag"]],["option",["ordering"]]]],[11,"lt","","",78,[[["self"],["sflag"]],["bool"]]],[11,"le","","",78,[[["self"],["sflag"]],["bool"]]],[11,"gt","","",78,[[["self"],["sflag"]],["bool"]]],[11,"ge","","",78,[[["self"],["sflag"]],["bool"]]],[11,"partial_cmp","","",79,[[["self"],["mode"]],["option",["ordering"]]]],[11,"lt","","",79,[[["self"],["mode"]],["bool"]]],[11,"le","","",79,[[["self"],["mode"]],["bool"]]],[11,"gt","","",79,[[["self"],["mode"]],["bool"]]],[11,"ge","","",79,[[["self"],["mode"]],["bool"]]],[11,"partial_cmp","nix::sys::statvfs","",80,[[["self"],["fsflags"]],["option",["ordering"]]]],[11,"lt","","",80,[[["self"],["fsflags"]],["bool"]]],[11,"le","","",80,[[["self"],["fsflags"]],["bool"]]],[11,"gt","","",80,[[["self"],["fsflags"]],["bool"]]],[11,"ge","","",80,[[["self"],["fsflags"]],["bool"]]],[11,"partial_cmp","nix::sys::termios","",83,[[["self"],["baudrate"]],["option",["ordering"]]]],[11,"partial_cmp","","",84,[[["self"],["setarg"]],["option",["ordering"]]]],[11,"partial_cmp","","",85,[[["self"],["flusharg"]],["option",["ordering"]]]],[11,"partial_cmp","","",86,[[["self"],["flowarg"]],["option",["ordering"]]]],[11,"partial_cmp","","",87,[[["self"],["specialcharacterindices"]],["option",["ordering"]]]],[11,"partial_cmp","","",88,[[["self"],["inputflags"]],["option",["ordering"]]]],[11,"lt","","",88,[[["self"],["inputflags"]],["bool"]]],[11,"le","","",88,[[["self"],["inputflags"]],["bool"]]],[11,"gt","","",88,[[["self"],["inputflags"]],["bool"]]],[11,"ge","","",88,[[["self"],["inputflags"]],["bool"]]],[11,"partial_cmp","","",89,[[["self"],["outputflags"]],["option",["ordering"]]]],[11,"lt","","",89,[[["self"],["outputflags"]],["bool"]]],[11,"le","","",89,[[["self"],["outputflags"]],["bool"]]],[11,"gt","","",89,[[["self"],["outputflags"]],["bool"]]],[11,"ge","","",89,[[["self"],["outputflags"]],["bool"]]],[11,"partial_cmp","","",90,[[["self"],["controlflags"]],["option",["ordering"]]]],[11,"lt","","",90,[[["self"],["controlflags"]],["bool"]]],[11,"le","","",90,[[["self"],["controlflags"]],["bool"]]],[11,"gt","","",90,[[["self"],["controlflags"]],["bool"]]],[11,"ge","","",90,[[["self"],["controlflags"]],["bool"]]],[11,"partial_cmp","","",91,[[["self"],["localflags"]],["option",["ordering"]]]],[11,"lt","","",91,[[["self"],["localflags"]],["bool"]]],[11,"le","","",91,[[["self"],["localflags"]],["bool"]]],[11,"gt","","",91,[[["self"],["localflags"]],["bool"]]],[11,"ge","","",91,[[["self"],["localflags"]],["bool"]]],[11,"partial_cmp","nix::sys::time","",93,[[["self"],["timespec"]],["option",["ordering"]]]],[11,"partial_cmp","","",94,[[["self"],["timeval"]],["option",["ordering"]]]],[11,"partial_cmp","nix::sys::wait","",98,[[["self"],["waitpidflag"]],["option",["ordering"]]]],[11,"lt","","",98,[[["self"],["waitpidflag"]],["bool"]]],[11,"le","","",98,[[["self"],["waitpidflag"]],["bool"]]],[11,"gt","","",98,[[["self"],["waitpidflag"]],["bool"]]],[11,"ge","","",98,[[["self"],["waitpidflag"]],["bool"]]],[11,"default","nix::sys::statvfs","",80,[[],["fsflags"]]],[11,"next","nix::dir","",108,[[["self"]],["option"]]],[11,"next","nix::ifaddrs","",109,[[["self"]],["option"]]],[11,"next","nix::sys::signal","",111,[[["self"]],["option",["signal"]]]],[11,"next","nix::sys::socket","",112,[[["self"]],["option",["controlmessage"]]]],[11,"eq","nix::dir","",1,[[["self"],["type"]],["bool"]]],[11,"eq","nix::errno","",4,[[["self"],["errno"]],["bool"]]],[11,"eq","nix::fcntl","",8,[[["self"],["atflags"]],["bool"]]],[11,"ne","","",8,[[["self"],["atflags"]],["bool"]]],[11,"eq","","",9,[[["self"],["oflag"]],["bool"]]],[11,"ne","","",9,[[["self"],["oflag"]],["bool"]]],[11,"eq","","",10,[[["self"],["fdflag"]],["bool"]]],[11,"ne","","",10,[[["self"],["fdflag"]],["bool"]]],[11,"eq","nix::ifaddrs","",11,[[["self"],["interfaceaddress"]],["bool"]]],[11,"ne","","",11,[[["self"],["interfaceaddress"]],["bool"]]],[11,"eq","","",109,[[["self"],["interfaceaddressiterator"]],["bool"]]],[11,"ne","","",109,[[["self"],["interfaceaddressiterator"]],["bool"]]],[11,"eq","nix::mqueue","",12,[[["self"],["mq_oflag"]],["bool"]]],[11,"ne","","",12,[[["self"],["mq_oflag"]],["bool"]]],[11,"eq","","",13,[[["self"],["fdflag"]],["bool"]]],[11,"ne","","",13,[[["self"],["fdflag"]],["bool"]]],[11,"eq","","",14,[[["self"],["mqattr"]],["bool"]]],[11,"eq","nix::net::if_","",15,[[["self"],["interfaceflags"]],["bool"]]],[11,"ne","","",15,[[["self"],["interfaceflags"]],["bool"]]],[11,"eq","nix::poll","",17,[[["self"],["eventflags"]],["bool"]]],[11,"ne","","",17,[[["self"],["eventflags"]],["bool"]]],[11,"eq","nix::sys::aio","",21,[[["self"],["aiofsyncmode"]],["bool"]]],[11,"eq","","",22,[[["self"],["lioopcode"]],["bool"]]],[11,"eq","","",23,[[["self"],["liomode"]],["bool"]]],[11,"eq","","",24,[[["self"],["aiocancelstat"]],["bool"]]],[11,"eq","nix::sys::event","",27,[[["self"],["eventfilter"]],["bool"]]],[11,"eq","","",28,[[["self"],["eventflag"]],["bool"]]],[11,"ne","","",28,[[["self"],["eventflag"]],["bool"]]],[11,"eq","","",29,[[["self"],["filterflag"]],["bool"]]],[11,"ne","","",29,[[["self"],["filterflag"]],["bool"]]],[11,"eq","nix::sys::mman","",32,[[["self"],["protflags"]],["bool"]]],[11,"ne","","",32,[[["self"],["protflags"]],["bool"]]],[11,"eq","","",33,[[["self"],["mapflags"]],["bool"]]],[11,"ne","","",33,[[["self"],["mapflags"]],["bool"]]],[11,"eq","","",31,[[["self"],["mmapadvise"]],["bool"]]],[11,"eq","","",34,[[["self"],["msflags"]],["bool"]]],[11,"ne","","",34,[[["self"],["msflags"]],["bool"]]],[11,"eq","","",35,[[["self"],["mlockallflags"]],["bool"]]],[11,"ne","","",35,[[["self"],["mlockallflags"]],["bool"]]],[11,"eq","nix::sys::ptrace","",36,[[["self"],["request"]],["bool"]]],[11,"eq","nix::sys::sendfile","",38,[[["self"],["sfflags"]],["bool"]]],[11,"ne","","",38,[[["self"],["sfflags"]],["bool"]]],[11,"eq","nix::sys::signal","",39,[[["self"],["signal"]],["bool"]]],[11,"eq","","",44,[[["self"],["saflags"]],["bool"]]],[11,"ne","","",44,[[["self"],["saflags"]],["bool"]]],[11,"eq","","",40,[[["self"],["sigmaskhow"]],["bool"]]],[11,"eq","","",41,[[["self"],["sighandler"]],["bool"]]],[11,"ne","","",41,[[["self"],["sighandler"]],["bool"]]],[11,"eq","","",42,[[["self"],["sigevnotify"]],["bool"]]],[11,"ne","","",42,[[["self"],["sigevnotify"]],["bool"]]],[11,"eq","nix::sys::socket","",59,[[["self"],["addressfamily"]],["bool"]]],[11,"eq","","",61,[[["self"],["inetaddr"]],["bool"]]],[11,"eq","","",55,[[["self"],["ipv4addr"]],["bool"]]],[11,"eq","","",54,[[["self"],["unixaddr"]],["bool"]]],[11,"eq","","",60,[[["self"],["sockaddr"]],["bool"]]],[11,"eq","","",57,[[["self"],["self"]],["bool"]]],[11,"eq","","",63,[[["self"],["socktype"]],["bool"]]],[11,"eq","","",64,[[["self"],["sockprotocol"]],["bool"]]],[11,"eq","","",70,[[["self"],["sockflag"]],["bool"]]],[11,"ne","","",70,[[["self"],["sockflag"]],["bool"]]],[11,"eq","","",71,[[["self"],["msgflags"]],["bool"]]],[11,"ne","","",71,[[["self"],["msgflags"]],["bool"]]],[11,"eq","","",72,[[["self"],["self"]],["bool"]]],[11,"eq","","",73,[[["self"],["self"]],["bool"]]],[11,"eq","","",66,[[["self"],["socklevel"]],["bool"]]],[11,"eq","","",67,[[["self"],["shutdown"]],["bool"]]],[11,"eq","nix::sys::stat","",78,[[["self"],["sflag"]],["bool"]]],[11,"ne","","",78,[[["self"],["sflag"]],["bool"]]],[11,"eq","","",79,[[["self"],["mode"]],["bool"]]],[11,"ne","","",79,[[["self"],["mode"]],["bool"]]],[11,"eq","nix::sys::statvfs","",80,[[["self"],["fsflags"]],["bool"]]],[11,"ne","","",80,[[["self"],["fsflags"]],["bool"]]],[11,"eq","nix::sys::termios","",83,[[["self"],["baudrate"]],["bool"]]],[11,"eq","","",84,[[["self"],["setarg"]],["bool"]]],[11,"eq","","",85,[[["self"],["flusharg"]],["bool"]]],[11,"eq","","",86,[[["self"],["flowarg"]],["bool"]]],[11,"eq","","",87,[[["self"],["specialcharacterindices"]],["bool"]]],[11,"eq","","",88,[[["self"],["inputflags"]],["bool"]]],[11,"ne","","",88,[[["self"],["inputflags"]],["bool"]]],[11,"eq","","",89,[[["self"],["outputflags"]],["bool"]]],[11,"ne","","",89,[[["self"],["outputflags"]],["bool"]]],[11,"eq","","",90,[[["self"],["controlflags"]],["bool"]]],[11,"ne","","",90,[[["self"],["controlflags"]],["bool"]]],[11,"eq","","",91,[[["self"],["localflags"]],["bool"]]],[11,"ne","","",91,[[["self"],["localflags"]],["bool"]]],[11,"eq","nix::sys::time","",93,[[["self"],["timespec"]],["bool"]]],[11,"eq","","",94,[[["self"],["timeval"]],["bool"]]],[11,"eq","nix::sys::wait","",98,[[["self"],["waitpidflag"]],["bool"]]],[11,"ne","","",98,[[["self"],["waitpidflag"]],["bool"]]],[11,"eq","","",97,[[["self"],["waitstatus"]],["bool"]]],[11,"ne","","",97,[[["self"],["waitstatus"]],["bool"]]],[11,"eq","nix::unistd","",104,[[["self"],["uid"]],["bool"]]],[11,"ne","","",104,[[["self"],["uid"]],["bool"]]],[11,"eq","","",105,[[["self"],["gid"]],["bool"]]],[11,"ne","","",105,[[["self"],["gid"]],["bool"]]],[11,"eq","","",106,[[["self"],["pid"]],["bool"]]],[11,"ne","","",106,[[["self"],["pid"]],["bool"]]],[11,"eq","","",102,[[["self"],["pathconfvar"]],["bool"]]],[11,"eq","","",103,[[["self"],["sysconfvar"]],["bool"]]],[11,"eq","nix","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"as_ref","nix::sys::signal","",39,[[["self"]],["str"]]],[11,"as_ref","","",45,[[["self"]],["sigset_t"]]],[11,"as_ref","nix::sys::time","",93,[[["self"]],["timespec"]]],[11,"as_ref","","",94,[[["self"]],["timeval"]]],[11,"from","nix::sys::aio","",20,[[["vec",["aiocb"]]],["liocb"]]],[11,"from","nix::sys::signal","",43,[[["sigevent"]],["self"]]],[11,"from","nix::sys::termios","",82,[[["termios"]],["self"]]],[11,"from","","",83,[[["speed_t"]],["baudrate"]]],[11,"from","nix","",136,[[["pid"]],["self"]]],[11,"from","","",0,[[["errno"]],["error"]]],[11,"from","","",0,[[["fromutf8error"]],["error"]]],[11,"clone","nix::dir","",3,[[["self"]],["entry"]]],[11,"clone","","",1,[[["self"]],["type"]]],[11,"clone","nix::errno","",4,[[["self"]],["errno"]]],[11,"clone","nix::fcntl","",8,[[["self"]],["atflags"]]],[11,"clone","","",9,[[["self"]],["oflag"]]],[11,"clone","","",10,[[["self"]],["fdflag"]]],[11,"clone","","",7,[[["self"]],["flockarg"]]],[11,"clone","nix::ifaddrs","",11,[[["self"]],["interfaceaddress"]]],[11,"clone","nix::mqueue","",12,[[["self"]],["mq_oflag"]]],[11,"clone","","",13,[[["self"]],["fdflag"]]],[11,"clone","","",14,[[["self"]],["mqattr"]]],[11,"clone","nix::net::if_","",15,[[["self"]],["interfaceflags"]]],[11,"clone","nix::poll","",16,[[["self"]],["pollfd"]]],[11,"clone","","",17,[[["self"]],["eventflags"]]],[11,"clone","nix::pty","",19,[[["self"]],["openptyresult"]]],[11,"clone","nix::sys::aio","",21,[[["self"]],["aiofsyncmode"]]],[11,"clone","","",22,[[["self"]],["lioopcode"]]],[11,"clone","","",23,[[["self"]],["liomode"]]],[11,"clone","","",24,[[["self"]],["aiocancelstat"]]],[11,"clone","nix::sys::event","",30,[[["self"]],["kevent"]]],[11,"clone","","",27,[[["self"]],["eventfilter"]]],[11,"clone","","",28,[[["self"]],["eventflag"]]],[11,"clone","","",29,[[["self"]],["filterflag"]]],[11,"clone","nix::sys::mman","",32,[[["self"]],["protflags"]]],[11,"clone","","",33,[[["self"]],["mapflags"]]],[11,"clone","","",31,[[["self"]],["mmapadvise"]]],[11,"clone","","",34,[[["self"]],["msflags"]]],[11,"clone","","",35,[[["self"]],["mlockallflags"]]],[11,"clone","nix::sys::ptrace","",36,[[["self"]],["request"]]],[11,"clone","nix::sys::select","",37,[[["self"]],["fdset"]]],[11,"clone","nix::sys::sendfile","",38,[[["self"]],["sfflags"]]],[11,"clone","nix::sys::signal","",39,[[["self"]],["signal"]]],[11,"clone","","",111,[[["self"]],["signaliterator"]]],[11,"clone","","",44,[[["self"]],["saflags"]]],[11,"clone","","",40,[[["self"]],["sigmaskhow"]]],[11,"clone","","",45,[[["self"]],["sigset"]]],[11,"clone","","",41,[[["self"]],["sighandler"]]],[11,"clone","","",46,[[["self"]],["sigaction"]]],[11,"clone","","",42,[[["self"]],["sigevnotify"]]],[11,"clone","","",43,[[["self"]],["sigevent"]]],[11,"clone","nix::sys::socket","",59,[[["self"]],["addressfamily"]]],[11,"clone","","",61,[[["self"]],["inetaddr"]]],[11,"clone","","",62,[[["self"]],["ipaddr"]]],[11,"clone","","",55,[[["self"]],["ipv4addr"]]],[11,"clone","","",56,[[["self"]],["ipv6addr"]]],[11,"clone","","",54,[[["self"]],["unixaddr"]]],[11,"clone","","",60,[[["self"]],["sockaddr"]]],[11,"clone","","",57,[[["self"]],["linkaddr"]]],[11,"clone","nix::sys::socket::sockopt","",113,[[["self"]],["reuseaddr"]]],[11,"clone","","",114,[[["self"]],["reuseport"]]],[11,"clone","","",115,[[["self"]],["tcpnodelay"]]],[11,"clone","","",116,[[["self"]],["linger"]]],[11,"clone","","",117,[[["self"]],["ipaddmembership"]]],[11,"clone","","",118,[[["self"]],["ipdropmembership"]]],[11,"clone","","",119,[[["self"]],["ipv6addmembership"]]],[11,"clone","","",120,[[["self"]],["ipv6dropmembership"]]],[11,"clone","","",121,[[["self"]],["ipmulticastttl"]]],[11,"clone","","",122,[[["self"]],["ipmulticastloop"]]],[11,"clone","","",123,[[["self"]],["receivetimeout"]]],[11,"clone","","",124,[[["self"]],["sendtimeout"]]],[11,"clone","","",125,[[["self"]],["broadcast"]]],[11,"clone","","",126,[[["self"]],["oobinline"]]],[11,"clone","","",127,[[["self"]],["socketerror"]]],[11,"clone","","",128,[[["self"]],["keepalive"]]],[11,"clone","","",129,[[["self"]],["tcpkeepidle"]]],[11,"clone","","",130,[[["self"]],["rcvbuf"]]],[11,"clone","","",131,[[["self"]],["sndbuf"]]],[11,"clone","","",132,[[["self"]],["socktype"]]],[11,"clone","","",133,[[["self"]],["acceptconn"]]],[11,"clone","","",134,[[["self"]],["receivetimestamp"]]],[11,"clone","","",135,[[["self"]],["bindany"]]],[11,"clone","nix::sys::socket","",63,[[["self"]],["socktype"]]],[11,"clone","","",64,[[["self"]],["sockprotocol"]]],[11,"clone","","",70,[[["self"]],["sockflag"]]],[11,"clone","","",71,[[["self"]],["msgflags"]]],[11,"clone","","",72,[[["self"]],["ipmembershiprequest"]]],[11,"clone","","",73,[[["self"]],["ipv6membershiprequest"]]],[11,"clone","","",66,[[["self"]],["socklevel"]]],[11,"clone","","",67,[[["self"]],["shutdown"]]],[11,"clone","nix::sys::stat","",78,[[["self"]],["sflag"]]],[11,"clone","","",79,[[["self"]],["mode"]]],[11,"clone","","",76,[[["self"]],["fchmodatflags"]]],[11,"clone","","",77,[[["self"]],["utimensatflags"]]],[11,"clone","nix::sys::statvfs","",80,[[["self"]],["fsflags"]]],[11,"clone","","",81,[[["self"]],["statvfs"]]],[11,"clone","nix::sys::termios","",82,[[["self"]],["termios"]]],[11,"clone","","",83,[[["self"]],["baudrate"]]],[11,"clone","","",84,[[["self"]],["setarg"]]],[11,"clone","","",85,[[["self"]],["flusharg"]]],[11,"clone","","",86,[[["self"]],["flowarg"]]],[11,"clone","","",87,[[["self"]],["specialcharacterindices"]]],[11,"clone","","",88,[[["self"]],["inputflags"]]],[11,"clone","","",89,[[["self"]],["outputflags"]]],[11,"clone","","",90,[[["self"]],["controlflags"]]],[11,"clone","","",91,[[["self"]],["localflags"]]],[11,"clone","nix::sys::time","",93,[[["self"]],["timespec"]]],[11,"clone","","",94,[[["self"]],["timeval"]]],[11,"clone","nix::sys::utsname","",96,[[["self"]],["utsname"]]],[11,"clone","nix::sys::wait","",98,[[["self"]],["waitpidflag"]]],[11,"clone","","",97,[[["self"]],["waitstatus"]]],[11,"clone","nix::unistd","",104,[[["self"]],["uid"]]],[11,"clone","","",105,[[["self"]],["gid"]]],[11,"clone","","",106,[[["self"]],["pid"]]],[11,"clone","","",99,[[["self"]],["forkresult"]]],[11,"clone","","",100,[[["self"]],["fchownatflags"]]],[11,"clone","","",101,[[["self"]],["whence"]]],[11,"clone","","",102,[[["self"]],["pathconfvar"]]],[11,"clone","","",103,[[["self"]],["sysconfvar"]]],[11,"clone","nix","",0,[[["self"]],["error"]]],[11,"hash","nix::fcntl","",8,N],[11,"hash","","",9,N],[11,"hash","","",10,N],[11,"hash","nix::ifaddrs","",11,N],[11,"hash","","",109,N],[11,"hash","nix::mqueue","",12,N],[11,"hash","","",13,N],[11,"hash","nix::net::if_","",15,N],[11,"hash","nix::poll","",17,N],[11,"hash","nix::sys::aio","",21,N],[11,"hash","","",22,N],[11,"hash","","",23,N],[11,"hash","nix::sys::event","",27,N],[11,"hash","","",28,N],[11,"hash","","",29,N],[11,"hash","nix::sys::mman","",32,N],[11,"hash","","",33,N],[11,"hash","","",31,N],[11,"hash","","",34,N],[11,"hash","","",35,N],[11,"hash","nix::sys::ptrace","",36,N],[11,"hash","nix::sys::sendfile","",38,N],[11,"hash","nix::sys::signal","",39,N],[11,"hash","","",44,N],[11,"hash","","",40,N],[11,"hash","nix::sys::socket","",59,N],[11,"hash","","",61,[[["self"],["h"]]]],[11,"hash","","",55,[[["self"],["h"]]]],[11,"hash","","",54,[[["self"],["h"]]]],[11,"hash","","",60,[[["self"],["h"]]]],[11,"hash","","",57,[[["self"],["h"]]]],[11,"hash","","",64,N],[11,"hash","","",70,N],[11,"hash","","",71,N],[11,"hash","","",66,N],[11,"hash","","",67,N],[11,"hash","nix::sys::stat","",78,N],[11,"hash","","",79,N],[11,"hash","nix::sys::statvfs","",80,N],[11,"hash","nix::sys::termios","",83,N],[11,"hash","","",84,N],[11,"hash","","",85,N],[11,"hash","","",86,N],[11,"hash","","",87,N],[11,"hash","","",88,N],[11,"hash","","",89,N],[11,"hash","","",90,N],[11,"hash","","",91,N],[11,"hash","nix::sys::wait","",98,N],[11,"hash","nix::unistd","",104,N],[11,"hash","","",105,N],[11,"hash","","",106,N],[11,"hash","","",102,N],[11,"hash","","",103,N],[11,"fmt","nix::fcntl","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::mqueue","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::net::if_","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::poll","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::event","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::mman","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::sendfile","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signal","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::stat","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::statvfs","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::termios","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::wait","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::fcntl","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::mqueue","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::net::if_","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::poll","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::event","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::mman","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::sendfile","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signal","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::stat","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::statvfs","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::termios","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::wait","",98,[[["self"],["formatter"]],["result"]]],[11,"from_str","nix::sys::signal","",39,[[["str"]],["result",["signal"]]]],[11,"fmt","nix::errno","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signal","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::time","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::unistd","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::dir","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::errno","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::fcntl","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::ifaddrs","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::mqueue","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::net::if_","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::poll","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::pty","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::aio","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::event","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::mman","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::ptrace","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::sendfile","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signal","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket::sockopt","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::stat","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::statvfs","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::termios","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::time","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::wait","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::unistd","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix","",0,[[["self"],["formatter"]],["result"]]],[11,"sub","nix::fcntl","Returns the set difference of the two sets of flags.",8,[[["self"],["atflags"]],["atflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",9,[[["self"],["oflag"]],["oflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",10,[[["self"],["fdflag"]],["fdflag"]]],[11,"sub","nix::mqueue","Returns the set difference of the two sets of flags.",12,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",13,[[["self"],["fdflag"]],["fdflag"]]],[11,"sub","nix::net::if_","Returns the set difference of the two sets of flags.",15,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"sub","nix::poll","Returns the set difference of the two sets of flags.",17,[[["self"],["eventflags"]],["eventflags"]]],[11,"sub","nix::sys::event","Returns the set difference of the two sets of flags.",28,[[["self"],["eventflag"]],["eventflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",29,[[["self"],["filterflag"]],["filterflag"]]],[11,"sub","nix::sys::mman","Returns the set difference of the two sets of flags.",32,[[["self"],["protflags"]],["protflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",33,[[["self"],["mapflags"]],["mapflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",34,[[["self"],["msflags"]],["msflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",35,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"sub","nix::sys::sendfile","Returns the set difference of the two sets of flags.",38,[[["self"],["sfflags"]],["sfflags"]]],[11,"sub","nix::sys::signal","Returns the set difference of the two sets of flags.",44,[[["self"],["saflags"]],["saflags"]]],[11,"sub","nix::sys::socket","Returns the set difference of the two sets of flags.",70,[[["self"],["sockflag"]],["sockflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",71,[[["self"],["msgflags"]],["msgflags"]]],[11,"sub","nix::sys::stat","Returns the set difference of the two sets of flags.",78,[[["self"],["sflag"]],["sflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",79,[[["self"],["mode"]],["mode"]]],[11,"sub","nix::sys::statvfs","Returns the set difference of the two sets of flags.",80,[[["self"],["fsflags"]],["fsflags"]]],[11,"sub","nix::sys::termios","Returns the set difference of the two sets of flags.",88,[[["self"],["inputflags"]],["inputflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",89,[[["self"],["outputflags"]],["outputflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",90,[[["self"],["controlflags"]],["controlflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",91,[[["self"],["localflags"]],["localflags"]]],[11,"sub","nix::sys::time","",93,[[["self"],["timespec"]],["timespec"]]],[11,"sub","","",94,[[["self"],["timeval"]],["timeval"]]],[11,"sub","nix::sys::wait","Returns the set difference of the two sets of flags.",98,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"add","nix::sys::time","",93,[[["self"],["timespec"]],["timespec"]]],[11,"add","","",94,[[["self"],["timeval"]],["timeval"]]],[11,"mul","","",93,[[["self"],["i32"]],["timespec"]]],[11,"mul","","",94,[[["self"],["i32"]],["timeval"]]],[11,"div","","",93,[[["self"],["i32"]],["timespec"]]],[11,"div","","",94,[[["self"],["i32"]],["timeval"]]],[11,"neg","","",93,[[["self"]],["timespec"]]],[11,"neg","","",94,[[["self"]],["timeval"]]],[11,"sub_assign","nix::fcntl","Disables all flags enabled in the set.",8,[[["self"],["atflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",9,[[["self"],["oflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",10,[[["self"],["fdflag"]]]],[11,"sub_assign","nix::mqueue","Disables all flags enabled in the set.",12,[[["self"],["mq_oflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",13,[[["self"],["fdflag"]]]],[11,"sub_assign","nix::net::if_","Disables all flags enabled in the set.",15,[[["self"],["interfaceflags"]]]],[11,"sub_assign","nix::poll","Disables all flags enabled in the set.",17,[[["self"],["eventflags"]]]],[11,"sub_assign","nix::sys::event","Disables all flags enabled in the set.",28,[[["self"],["eventflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",29,[[["self"],["filterflag"]]]],[11,"sub_assign","nix::sys::mman","Disables all flags enabled in the set.",32,[[["self"],["protflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",33,[[["self"],["mapflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",34,[[["self"],["msflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",35,[[["self"],["mlockallflags"]]]],[11,"sub_assign","nix::sys::sendfile","Disables all flags enabled in the set.",38,[[["self"],["sfflags"]]]],[11,"sub_assign","nix::sys::signal","Disables all flags enabled in the set.",44,[[["self"],["saflags"]]]],[11,"sub_assign","nix::sys::socket","Disables all flags enabled in the set.",70,[[["self"],["sockflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",71,[[["self"],["msgflags"]]]],[11,"sub_assign","nix::sys::stat","Disables all flags enabled in the set.",78,[[["self"],["sflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",79,[[["self"],["mode"]]]],[11,"sub_assign","nix::sys::statvfs","Disables all flags enabled in the set.",80,[[["self"],["fsflags"]]]],[11,"sub_assign","nix::sys::termios","Disables all flags enabled in the set.",88,[[["self"],["inputflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",89,[[["self"],["outputflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",90,[[["self"],["controlflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",91,[[["self"],["localflags"]]]],[11,"sub_assign","nix::sys::wait","Disables all flags enabled in the set.",98,[[["self"],["waitpidflag"]]]],[11,"not","nix::fcntl","Returns the complement of this set of flags.",8,[[["self"]],["atflags"]]],[11,"not","","Returns the complement of this set of flags.",9,[[["self"]],["oflag"]]],[11,"not","","Returns the complement of this set of flags.",10,[[["self"]],["fdflag"]]],[11,"not","nix::mqueue","Returns the complement of this set of flags.",12,[[["self"]],["mq_oflag"]]],[11,"not","","Returns the complement of this set of flags.",13,[[["self"]],["fdflag"]]],[11,"not","nix::net::if_","Returns the complement of this set of flags.",15,[[["self"]],["interfaceflags"]]],[11,"not","nix::poll","Returns the complement of this set of flags.",17,[[["self"]],["eventflags"]]],[11,"not","nix::sys::event","Returns the complement of this set of flags.",28,[[["self"]],["eventflag"]]],[11,"not","","Returns the complement of this set of flags.",29,[[["self"]],["filterflag"]]],[11,"not","nix::sys::mman","Returns the complement of this set of flags.",32,[[["self"]],["protflags"]]],[11,"not","","Returns the complement of this set of flags.",33,[[["self"]],["mapflags"]]],[11,"not","","Returns the complement of this set of flags.",34,[[["self"]],["msflags"]]],[11,"not","","Returns the complement of this set of flags.",35,[[["self"]],["mlockallflags"]]],[11,"not","nix::sys::sendfile","Returns the complement of this set of flags.",38,[[["self"]],["sfflags"]]],[11,"not","nix::sys::signal","Returns the complement of this set of flags.",44,[[["self"]],["saflags"]]],[11,"not","nix::sys::socket","Returns the complement of this set of flags.",70,[[["self"]],["sockflag"]]],[11,"not","","Returns the complement of this set of flags.",71,[[["self"]],["msgflags"]]],[11,"not","nix::sys::stat","Returns the complement of this set of flags.",78,[[["self"]],["sflag"]]],[11,"not","","Returns the complement of this set of flags.",79,[[["self"]],["mode"]]],[11,"not","nix::sys::statvfs","Returns the complement of this set of flags.",80,[[["self"]],["fsflags"]]],[11,"not","nix::sys::termios","Returns the complement of this set of flags.",88,[[["self"]],["inputflags"]]],[11,"not","","Returns the complement of this set of flags.",89,[[["self"]],["outputflags"]]],[11,"not","","Returns the complement of this set of flags.",90,[[["self"]],["controlflags"]]],[11,"not","","Returns the complement of this set of flags.",91,[[["self"]],["localflags"]]],[11,"not","nix::sys::wait","Returns the complement of this set of flags.",98,[[["self"]],["waitpidflag"]]],[11,"bitand","nix::fcntl","Returns the intersection between the two sets of flags.",8,[[["self"],["atflags"]],["atflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",9,[[["self"],["oflag"]],["oflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",10,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitand","nix::mqueue","Returns the intersection between the two sets of flags.",12,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",13,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitand","nix::net::if_","Returns the intersection between the two sets of flags.",15,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"bitand","nix::poll","Returns the intersection between the two sets of flags.",17,[[["self"],["eventflags"]],["eventflags"]]],[11,"bitand","nix::sys::event","Returns the intersection between the two sets of flags.",28,[[["self"],["eventflag"]],["eventflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",29,[[["self"],["filterflag"]],["filterflag"]]],[11,"bitand","nix::sys::mman","Returns the intersection between the two sets of flags.",32,[[["self"],["protflags"]],["protflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",33,[[["self"],["mapflags"]],["mapflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",34,[[["self"],["msflags"]],["msflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",35,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"bitand","nix::sys::sendfile","Returns the intersection between the two sets of flags.",38,[[["self"],["sfflags"]],["sfflags"]]],[11,"bitand","nix::sys::signal","Returns the intersection between the two sets of flags.",44,[[["self"],["saflags"]],["saflags"]]],[11,"bitand","nix::sys::socket","Returns the intersection between the two sets of flags.",70,[[["self"],["sockflag"]],["sockflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",71,[[["self"],["msgflags"]],["msgflags"]]],[11,"bitand","nix::sys::stat","Returns the intersection between the two sets of flags.",78,[[["self"],["sflag"]],["sflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",79,[[["self"],["mode"]],["mode"]]],[11,"bitand","nix::sys::statvfs","Returns the intersection between the two sets of flags.",80,[[["self"],["fsflags"]],["fsflags"]]],[11,"bitand","nix::sys::termios","Returns the intersection between the two sets of flags.",88,[[["self"],["inputflags"]],["inputflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",89,[[["self"],["outputflags"]],["outputflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",90,[[["self"],["controlflags"]],["controlflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",91,[[["self"],["localflags"]],["localflags"]]],[11,"bitand","nix::sys::wait","Returns the intersection between the two sets of flags.",98,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"bitor","nix::fcntl","Returns the union of the two sets of flags.",8,[[["self"],["atflags"]],["atflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",9,[[["self"],["oflag"]],["oflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",10,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitor","nix::mqueue","Returns the union of the two sets of flags.",12,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",13,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitor","nix::net::if_","Returns the union of the two sets of flags.",15,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"bitor","nix::poll","Returns the union of the two sets of flags.",17,[[["self"],["eventflags"]],["eventflags"]]],[11,"bitor","nix::sys::event","Returns the union of the two sets of flags.",28,[[["self"],["eventflag"]],["eventflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",29,[[["self"],["filterflag"]],["filterflag"]]],[11,"bitor","nix::sys::mman","Returns the union of the two sets of flags.",32,[[["self"],["protflags"]],["protflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",33,[[["self"],["mapflags"]],["mapflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",34,[[["self"],["msflags"]],["msflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",35,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"bitor","nix::sys::sendfile","Returns the union of the two sets of flags.",38,[[["self"],["sfflags"]],["sfflags"]]],[11,"bitor","nix::sys::signal","Returns the union of the two sets of flags.",44,[[["self"],["saflags"]],["saflags"]]],[11,"bitor","nix::sys::socket","Returns the union of the two sets of flags.",70,[[["self"],["sockflag"]],["sockflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",71,[[["self"],["msgflags"]],["msgflags"]]],[11,"bitor","nix::sys::stat","Returns the union of the two sets of flags.",78,[[["self"],["sflag"]],["sflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",79,[[["self"],["mode"]],["mode"]]],[11,"bitor","nix::sys::statvfs","Returns the union of the two sets of flags.",80,[[["self"],["fsflags"]],["fsflags"]]],[11,"bitor","nix::sys::termios","Returns the union of the two sets of flags.",88,[[["self"],["inputflags"]],["inputflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",89,[[["self"],["outputflags"]],["outputflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",90,[[["self"],["controlflags"]],["controlflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",91,[[["self"],["localflags"]],["localflags"]]],[11,"bitor","nix::sys::wait","Returns the union of the two sets of flags.",98,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"bitxor","nix::fcntl","Returns the left flags, but with all the right flags toggled.",8,[[["self"],["atflags"]],["atflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",9,[[["self"],["oflag"]],["oflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",10,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitxor","nix::mqueue","Returns the left flags, but with all the right flags toggled.",12,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",13,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitxor","nix::net::if_","Returns the left flags, but with all the right flags toggled.",15,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"bitxor","nix::poll","Returns the left flags, but with all the right flags toggled.",17,[[["self"],["eventflags"]],["eventflags"]]],[11,"bitxor","nix::sys::event","Returns the left flags, but with all the right flags toggled.",28,[[["self"],["eventflag"]],["eventflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",29,[[["self"],["filterflag"]],["filterflag"]]],[11,"bitxor","nix::sys::mman","Returns the left flags, but with all the right flags toggled.",32,[[["self"],["protflags"]],["protflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",33,[[["self"],["mapflags"]],["mapflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",34,[[["self"],["msflags"]],["msflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",35,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"bitxor","nix::sys::sendfile","Returns the left flags, but with all the right flags toggled.",38,[[["self"],["sfflags"]],["sfflags"]]],[11,"bitxor","nix::sys::signal","Returns the left flags, but with all the right flags toggled.",44,[[["self"],["saflags"]],["saflags"]]],[11,"bitxor","nix::sys::socket","Returns the left flags, but with all the right flags toggled.",70,[[["self"],["sockflag"]],["sockflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",71,[[["self"],["msgflags"]],["msgflags"]]],[11,"bitxor","nix::sys::stat","Returns the left flags, but with all the right flags toggled.",78,[[["self"],["sflag"]],["sflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",79,[[["self"],["mode"]],["mode"]]],[11,"bitxor","nix::sys::statvfs","Returns the left flags, but with all the right flags toggled.",80,[[["self"],["fsflags"]],["fsflags"]]],[11,"bitxor","nix::sys::termios","Returns the left flags, but with all the right flags toggled.",88,[[["self"],["inputflags"]],["inputflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",89,[[["self"],["outputflags"]],["outputflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",90,[[["self"],["controlflags"]],["controlflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",91,[[["self"],["localflags"]],["localflags"]]],[11,"bitxor","nix::sys::wait","Returns the left flags, but with all the right flags toggled.",98,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"bitand_assign","nix::fcntl","Disables all flags disabled in the set.",8,[[["self"],["atflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",9,[[["self"],["oflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",10,[[["self"],["fdflag"]]]],[11,"bitand_assign","nix::mqueue","Disables all flags disabled in the set.",12,[[["self"],["mq_oflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",13,[[["self"],["fdflag"]]]],[11,"bitand_assign","nix::net::if_","Disables all flags disabled in the set.",15,[[["self"],["interfaceflags"]]]],[11,"bitand_assign","nix::poll","Disables all flags disabled in the set.",17,[[["self"],["eventflags"]]]],[11,"bitand_assign","nix::sys::event","Disables all flags disabled in the set.",28,[[["self"],["eventflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",29,[[["self"],["filterflag"]]]],[11,"bitand_assign","nix::sys::mman","Disables all flags disabled in the set.",32,[[["self"],["protflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",33,[[["self"],["mapflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",34,[[["self"],["msflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",35,[[["self"],["mlockallflags"]]]],[11,"bitand_assign","nix::sys::sendfile","Disables all flags disabled in the set.",38,[[["self"],["sfflags"]]]],[11,"bitand_assign","nix::sys::signal","Disables all flags disabled in the set.",44,[[["self"],["saflags"]]]],[11,"bitand_assign","nix::sys::socket","Disables all flags disabled in the set.",70,[[["self"],["sockflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",71,[[["self"],["msgflags"]]]],[11,"bitand_assign","nix::sys::stat","Disables all flags disabled in the set.",78,[[["self"],["sflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",79,[[["self"],["mode"]]]],[11,"bitand_assign","nix::sys::statvfs","Disables all flags disabled in the set.",80,[[["self"],["fsflags"]]]],[11,"bitand_assign","nix::sys::termios","Disables all flags disabled in the set.",88,[[["self"],["inputflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",89,[[["self"],["outputflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",90,[[["self"],["controlflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",91,[[["self"],["localflags"]]]],[11,"bitand_assign","nix::sys::wait","Disables all flags disabled in the set.",98,[[["self"],["waitpidflag"]]]],[11,"bitor_assign","nix::fcntl","Adds the set of flags.",8,[[["self"],["atflags"]]]],[11,"bitor_assign","","Adds the set of flags.",9,[[["self"],["oflag"]]]],[11,"bitor_assign","","Adds the set of flags.",10,[[["self"],["fdflag"]]]],[11,"bitor_assign","nix::mqueue","Adds the set of flags.",12,[[["self"],["mq_oflag"]]]],[11,"bitor_assign","","Adds the set of flags.",13,[[["self"],["fdflag"]]]],[11,"bitor_assign","nix::net::if_","Adds the set of flags.",15,[[["self"],["interfaceflags"]]]],[11,"bitor_assign","nix::poll","Adds the set of flags.",17,[[["self"],["eventflags"]]]],[11,"bitor_assign","nix::sys::event","Adds the set of flags.",28,[[["self"],["eventflag"]]]],[11,"bitor_assign","","Adds the set of flags.",29,[[["self"],["filterflag"]]]],[11,"bitor_assign","nix::sys::mman","Adds the set of flags.",32,[[["self"],["protflags"]]]],[11,"bitor_assign","","Adds the set of flags.",33,[[["self"],["mapflags"]]]],[11,"bitor_assign","","Adds the set of flags.",34,[[["self"],["msflags"]]]],[11,"bitor_assign","","Adds the set of flags.",35,[[["self"],["mlockallflags"]]]],[11,"bitor_assign","nix::sys::sendfile","Adds the set of flags.",38,[[["self"],["sfflags"]]]],[11,"bitor_assign","nix::sys::signal","Adds the set of flags.",44,[[["self"],["saflags"]]]],[11,"bitor_assign","nix::sys::socket","Adds the set of flags.",70,[[["self"],["sockflag"]]]],[11,"bitor_assign","","Adds the set of flags.",71,[[["self"],["msgflags"]]]],[11,"bitor_assign","nix::sys::stat","Adds the set of flags.",78,[[["self"],["sflag"]]]],[11,"bitor_assign","","Adds the set of flags.",79,[[["self"],["mode"]]]],[11,"bitor_assign","nix::sys::statvfs","Adds the set of flags.",80,[[["self"],["fsflags"]]]],[11,"bitor_assign","nix::sys::termios","Adds the set of flags.",88,[[["self"],["inputflags"]]]],[11,"bitor_assign","","Adds the set of flags.",89,[[["self"],["outputflags"]]]],[11,"bitor_assign","","Adds the set of flags.",90,[[["self"],["controlflags"]]]],[11,"bitor_assign","","Adds the set of flags.",91,[[["self"],["localflags"]]]],[11,"bitor_assign","nix::sys::wait","Adds the set of flags.",98,[[["self"],["waitpidflag"]]]],[11,"bitxor_assign","nix::fcntl","Toggles the set of flags.",8,[[["self"],["atflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",9,[[["self"],["oflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",10,[[["self"],["fdflag"]]]],[11,"bitxor_assign","nix::mqueue","Toggles the set of flags.",12,[[["self"],["mq_oflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",13,[[["self"],["fdflag"]]]],[11,"bitxor_assign","nix::net::if_","Toggles the set of flags.",15,[[["self"],["interfaceflags"]]]],[11,"bitxor_assign","nix::poll","Toggles the set of flags.",17,[[["self"],["eventflags"]]]],[11,"bitxor_assign","nix::sys::event","Toggles the set of flags.",28,[[["self"],["eventflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",29,[[["self"],["filterflag"]]]],[11,"bitxor_assign","nix::sys::mman","Toggles the set of flags.",32,[[["self"],["protflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",33,[[["self"],["mapflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",34,[[["self"],["msflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",35,[[["self"],["mlockallflags"]]]],[11,"bitxor_assign","nix::sys::sendfile","Toggles the set of flags.",38,[[["self"],["sfflags"]]]],[11,"bitxor_assign","nix::sys::signal","Toggles the set of flags.",44,[[["self"],["saflags"]]]],[11,"bitxor_assign","nix::sys::socket","Toggles the set of flags.",70,[[["self"],["sockflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",71,[[["self"],["msgflags"]]]],[11,"bitxor_assign","nix::sys::stat","Toggles the set of flags.",78,[[["self"],["sflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",79,[[["self"],["mode"]]]],[11,"bitxor_assign","nix::sys::statvfs","Toggles the set of flags.",80,[[["self"],["fsflags"]]]],[11,"bitxor_assign","nix::sys::termios","Toggles the set of flags.",88,[[["self"],["inputflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",89,[[["self"],["outputflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",90,[[["self"],["controlflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",91,[[["self"],["localflags"]]]],[11,"bitxor_assign","nix::sys::wait","Toggles the set of flags.",98,[[["self"],["waitpidflag"]]]],[11,"from_iter","nix::fcntl","",8,[[["t"]],["atflags"]]],[11,"from_iter","","",9,[[["t"]],["oflag"]]],[11,"from_iter","","",10,[[["t"]],["fdflag"]]],[11,"from_iter","nix::mqueue","",12,[[["t"]],["mq_oflag"]]],[11,"from_iter","","",13,[[["t"]],["fdflag"]]],[11,"from_iter","nix::net::if_","",15,[[["t"]],["interfaceflags"]]],[11,"from_iter","nix::poll","",17,[[["t"]],["eventflags"]]],[11,"from_iter","nix::sys::event","",28,[[["t"]],["eventflag"]]],[11,"from_iter","","",29,[[["t"]],["filterflag"]]],[11,"from_iter","nix::sys::mman","",32,[[["t"]],["protflags"]]],[11,"from_iter","","",33,[[["t"]],["mapflags"]]],[11,"from_iter","","",34,[[["t"]],["msflags"]]],[11,"from_iter","","",35,[[["t"]],["mlockallflags"]]],[11,"from_iter","nix::sys::sendfile","",38,[[["t"]],["sfflags"]]],[11,"from_iter","nix::sys::signal","",44,[[["t"]],["saflags"]]],[11,"from_iter","nix::sys::socket","",70,[[["t"]],["sockflag"]]],[11,"from_iter","","",71,[[["t"]],["msgflags"]]],[11,"from_iter","nix::sys::stat","",78,[[["t"]],["sflag"]]],[11,"from_iter","","",79,[[["t"]],["mode"]]],[11,"from_iter","nix::sys::statvfs","",80,[[["t"]],["fsflags"]]],[11,"from_iter","nix::sys::termios","",88,[[["t"]],["inputflags"]]],[11,"from_iter","","",89,[[["t"]],["outputflags"]]],[11,"from_iter","","",90,[[["t"]],["controlflags"]]],[11,"from_iter","","",91,[[["t"]],["localflags"]]],[11,"from_iter","nix::sys::wait","",98,[[["t"]],["waitpidflag"]]],[11,"fmt","nix::fcntl","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::mqueue","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::net::if_","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::poll","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::event","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::mman","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::sendfile","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signal","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::stat","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::statvfs","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::termios","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::wait","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::fcntl","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::mqueue","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::net::if_","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::poll","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::event","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::mman","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::sendfile","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signal","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::stat","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::statvfs","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::termios","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::wait","",98,[[["self"],["formatter"]],["result"]]],[11,"description","nix::errno","",4,[[["self"]],["str"]]],[11,"description","nix","",0,[[["self"]],["str"]]],[11,"as_raw_fd","nix::dir","",2,[[["self"]],["rawfd"]]],[11,"as_raw_fd","nix::pty","",110,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",110,[[["self"]],["rawfd"]]]],"paths":[[4,"Error"],[4,"Type"],[3,"Dir"],[3,"Entry"],[4,"Errno"],[8,"ErrnoSentinel"],[4,"FcntlArg"],[4,"FlockArg"],[3,"AtFlags"],[3,"OFlag"],[3,"FdFlag"],[3,"InterfaceAddress"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"MqAttr"],[3,"InterfaceFlags"],[3,"PollFd"],[3,"EventFlags"],[3,"Winsize"],[3,"OpenptyResult"],[3,"LioCb"],[4,"AioFsyncMode"],[4,"LioOpcode"],[4,"LioMode"],[4,"AioCancelStat"],[4,"Buffer"],[3,"AioCb"],[4,"EventFilter"],[3,"EventFlag"],[3,"FilterFlag"],[3,"KEvent"],[4,"MmapAdvise"],[3,"ProtFlags"],[3,"MapFlags"],[3,"MsFlags"],[3,"MlockAllFlags"],[4,"Request"],[3,"FdSet"],[3,"SfFlags"],[4,"Signal"],[4,"SigmaskHow"],[4,"SigHandler"],[4,"SigevNotify"],[3,"SigEvent"],[3,"SaFlags"],[3,"SigSet"],[3,"SigAction"],[3,"cmsghdr"],[3,"msghdr"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_storage"],[3,"sockaddr_un"],[3,"UnixAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"LinkAddr"],[3,"RecvMsg"],[4,"AddressFamily"],[4,"SockAddr"],[4,"InetAddr"],[4,"IpAddr"],[4,"SockType"],[4,"SockProtocol"],[4,"ControlMessage"],[4,"SockLevel"],[4,"Shutdown"],[8,"GetSockOpt"],[8,"SetSockOpt"],[3,"SockFlag"],[3,"MsgFlags"],[3,"IpMembershipRequest"],[3,"Ipv6MembershipRequest"],[3,"CmsgSpace"],[3,"FileStat"],[4,"FchmodatFlags"],[4,"UtimensatFlags"],[3,"SFlag"],[3,"Mode"],[3,"FsFlags"],[3,"Statvfs"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,"SpecialCharacterIndices"],[3,"InputFlags"],[3,"OutputFlags"],[3,"ControlFlags"],[3,"LocalFlags"],[8,"TimeValLike"],[3,"TimeSpec"],[3,"TimeVal"],[3,"IoVec"],[3,"UtsName"],[4,"WaitStatus"],[3,"WaitPidFlag"],[4,"ForkResult"],[4,"FchownatFlags"],[4,"Whence"],[4,"PathconfVar"],[4,"SysconfVar"],[3,"Uid"],[3,"Gid"],[3,"Pid"],[8,"NixPath"],[3,"Iter"],[3,"InterfaceAddressIterator"],[3,"PtyMaster"],[3,"SignalIterator"],[3,"CmsgIterator"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,"IpAddMembership"],[3,"IpDropMembership"],[3,"Ipv6AddMembership"],[3,"Ipv6DropMembership"],[3,"IpMulticastTtl"],[3,"IpMulticastLoop"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"KeepAlive"],[3,"TcpKeepIdle"],[3,"RcvBuf"],[3,"SndBuf"],[3,"SockType"],[3,"AcceptConn"],[3,"ReceiveTimestamp"],[3,"BindAny"],[6,"SessionId"]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",N,N],[12,"kind","","",0,N],[4,"FloatErrorKind","","",N,N],[13,"Empty","","",1,N],[13,"Invalid","","",1,N],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[0,"bounds","","",N,N],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",N,N],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",3,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",3,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",3,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",3,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",3,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",3,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",3,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",3,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",3,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",3,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",3,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",3,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",3,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",3,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",4,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",5,[[["t"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[["self"]],["t"]]],[0,"float","num_traits","",N,N],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with `no_std`.",N,N],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[["self"]],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[["self"]],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[["self"]],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite, subnormal or NaN.",7,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",7,[[["self"]],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[["self"]],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a number.",7,[[["self"]],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",7,[[["self"]],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[["self"]],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[["self"]],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns `FloatCore::nan()` if the number is `FloatCore::nan()`.",7,[[["self"]],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[["self"]],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and `FloatCore::infinity()`, and since Rust 1.20 also `FloatCore::nan()`.",7,[[["self"]],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and `FloatCore::neg_infinity()`, and since Rust 1.20 also `-FloatCore::nan()`.",7,[[["self"]],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[["self"],["self"]],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[["self"],["self"]],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the number.",7,[[["self"]],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["self"],["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[["self"]],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",7,N],[8,"Float","","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",8,[[],["self"]]],[10,"infinity","","Returns the infinite value.",8,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",8,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",8,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",8,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",8,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",8,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",8,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",8,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",8,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",8,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",8,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",8,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",8,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",8,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",8,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",8,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",8,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",8,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",8,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",8,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",8,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",8,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",8,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",8,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",8,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",8,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",8,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",8,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",8,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",8,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",8,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",8,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",8,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",8,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",8,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",8,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",8,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",8,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",9,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",9,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[],["self"]]],[0,"identities","num_traits","",N,N],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[8,"Zero","","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",10,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[],["self"]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",11,[[["self"]],["bool"]]],[0,"int","num_traits","",N,N],[8,"PrimInt","num_traits::int","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",12,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",12,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",12,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",12,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",12,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",12,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",12,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",12,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",12,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's endianness.",12,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's endianness.",12,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",12,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's endianness.",12,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",12,[[["self"],["u32"]],["self"]]],[0,"ops","num_traits","",N,N],[0,"checked","num_traits::ops","",N,N],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",13,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",14,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",15,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",16,[[["self"],["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",17,[[["self"],["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't be represented.",N,N],[10,"checked_neg","","Negates a number, returning `None` for results that can't be represented, like signed `MIN` values that can't be positive, or non-zero unsigned values that can't be negative.",18,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",N,N],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",19,[[["self"],["u32"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",N,N],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",20,[[["self"],["u32"]],["option"]]],[0,"inv","num_traits::ops","",N,N],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.",N,N],[16,"Output","","The result after applying the operator.",21,N],[10,"inv","","Returns the multiplicative inverse of `self`.",21,N],[0,"mul_add","num_traits::ops","",N,N],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",N,N],[16,"Output","","The resulting type after applying the fused multiply-add.",22,N],[10,"mul_add","","Performs the fused multiply-add operation.",22,N],[8,"MulAddAssign","","The fused multiply-add assignment operation.",N,N],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[["self"],["a"],["b"]]]],[0,"saturating","num_traits::ops","",N,N],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",24,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",24,[[["self"],["self"]],["self"]]],[0,"wrapping","num_traits::ops","",N,N],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",25,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",26,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",27,[[["self"],["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",N,N],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`, where `mask` removes any high order bits of `rhs` that would cause the shift to exceed the bitwidth of the type.",28,[[["self"],["u32"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",N,N],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >> mask(rhs)`, where `mask` removes any high order bits of `rhs` that would cause the shift to exceed the bitwidth of the type.",29,[[["self"],["u32"]],["self"]]],[0,"pow","num_traits","",N,N],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[8,"Pow","","Binary operator for raising a value to a power.",N,N],[16,"Output","","The result after applying the operator.",30,N],[10,"pow","","Returns `self` to the power `rhs`.",30,N],[0,"real","num_traits","",N,N],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have floating-point-specific characteristics such as NaN and infinity.",N,N],[10,"min_value","","Returns the smallest finite value that this type can represent.",31,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",31,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",31,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",31,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",31,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",31,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",31,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",31,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",31,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",31,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",31,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and with newer versions of Rust `f64::NAN`.",31,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.",31,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",31,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",31,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",31,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",31,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",31,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",31,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",31,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",31,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",31,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",31,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",31,[[["self"]],["self"]]],[10,"to_degrees","","Converts radians to degrees.",31,[[["self"]],["self"]]],[10,"to_radians","","Converts degrees to radians.",31,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",31,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",31,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",31,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",31,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",31,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",31,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",31,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",31,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",31,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",31,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",31,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",31,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",31,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",31,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",31,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",31,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",31,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",31,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",31,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",31,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",31,[[["self"]],["self"]]],[0,"sign","num_traits","",N,N],[5,"abs","num_traits::sign","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",N,N],[10,"abs","","Computes the absolute value.",32,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",32,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",32,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",32,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",32,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",N,N],[16,"FromStrRadixErr","","",33,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",33,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",N,N],[8,"NumRef","","The trait for `Num` types which also implement numeric operations taking the second operand by reference.",N,N],[8,"RefNum","","The trait for references which implement numeric operations, taking the second operand either by value or by reference.",N,N],[8,"NumAssignOps","","The trait for types implementing numeric assignment operators (like `+=`).",N,N],[8,"NumAssign","","The trait for `Num` types which also implement assignment operators.",N,N],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["number_prefix"]={"doc":"This is a library for formatting numbers with numeric prefixes, such as turning “3000 metres” into “3 kilometres”, or “8705 bytes” into “8.5 KiB”.","items":[[4,"Prefix","number_prefix","A numeric prefix, either binary or decimal.",N,N],[13,"Kilo","","",0,N],[13,"Mega","","",0,N],[13,"Giga","","",0,N],[13,"Tera","","",0,N],[13,"Peta","","",0,N],[13,"Exa","","",0,N],[13,"Zetta","","",0,N],[13,"Yotta","","",0,N],[13,"Kibi","","",0,N],[13,"Mibi","","",0,N],[13,"Gibi","","",0,N],[13,"Tebi","","",0,N],[13,"Pebi","","",0,N],[13,"Exbi","","",0,N],[13,"Zebi","","",0,N],[13,"Yobi","","",0,N],[4,"Result","","The result of trying to apply a prefix to a floating-point value.",N,N],[13,"Standalone","","A standalone value is returned when the number is too small to have any prefixes applied to it. This is commonly a special case, so is handled separately.",1,N],[13,"Prefixed","","A prefixed value is large enough for prefixes. This holds the prefix, as well as the resulting value.",1,N],[5,"decimal_prefix","","Formats the given floating-point number using decimal prefixes, returning a result.",N,[[["f"]],["result"]]],[5,"binary_prefix","","Formats the given floating-point number using binary prefixes, returning a result.",N,[[["f"]],["result"]]],[8,"PrefixNames","","Formatting methods for prefix, for when you want to output things other than just the short-hand symbols.",N,N],[10,"upper","","Returns the name in uppercase, such as “KILO”.",2,[[["self"]],["str"]]],[10,"caps","","Returns the name with the first letter capitalised, such as “Mega”.",2,[[["self"]],["str"]]],[10,"lower","","Returns the name in lowercase, such as “giga”.",2,[[["self"]],["str"]]],[10,"symbol","","Returns the short-hand symbol, such as “T” (for “tera”).",2,[[["self"]],["str"]]],[8,"Amounts","","Constructors for floating-point values for both the possible multipliers.",N,N],[10,"get_1000","","",3,[[],["self"]]],[10,"get_1024","","",3,[[],["self"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"upper","","",0,[[["self"]],["str"]]],[11,"caps","","",0,[[["self"]],["str"]]],[11,"lower","","",0,[[["self"]],["str"]]],[11,"symbol","","",0,[[["self"]],["str"]]],[11,"eq","","",0,[[["self"],["prefix"]],["bool"]]],[11,"eq","","",1,[[["self"],["result"]],["bool"]]],[11,"ne","","",1,[[["self"],["result"]],["bool"]]],[11,"clone","","",0,[[["self"]],["prefix"]]],[11,"clone","","",1,[[["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"Prefix"],[4,"Result"],[8,"PrefixNames"],[8,"Amounts"]]};
searchIndex["rustc_demangle"]={"doc":"Demangle Rust compiler symbol names.","items":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",N,N],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when demangling fails.",N,N],[5,"demangle","","De-mangles a Rust symbol into a more readable version",N,[[["str"]],["demangle"]]],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the string does not appear to be a Rust symbol, rather than \"demangling\" the given string as a no-op.",N,[[["str"]],["result",["demangle","trydemangleerror"]]]],[11,"as_str","","Returns the underlying string that's being demangled.",0,[[["self"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["trydemangleerror"]]]],"paths":[[3,"Demangle"],[3,"TryDemangleError"]]};
searchIndex["users"]={"doc":"This is a library for getting information on Unix users and groups. It supports getting the system users, and creating your own mock tables.","items":[[6,"uid_t","users","",N,N],[6,"gid_t","","",N,N],[3,"User","","Information about a particular user.",N,N],[12,"name_arc","","This user’s name, as an owned `String` possibly shared with a cache. Prefer using the `name()` accessor to using this field, if possible.",0,N],[3,"Group","","Information about a particular group.",N,N],[12,"name_arc","","This group’s name, as an owned `String` possibly shared with a cache. Prefer using the `name()` accessor to using this field, if possible.",1,N],[3,"AllUsers","","An iterator over every user present on the system.",N,N],[5,"get_user_by_uid","","Searches for a `User` with the given ID in the system’s user database. Returns it if one is found, otherwise returns `None`.",N,[[["uid_t"]],["option",["user"]]]],[5,"get_user_by_name","","Searches for a `User` with the given username in the system’s user database. Returns it if one is found, otherwise returns `None`.",N,[[["str"]],["option",["user"]]]],[5,"get_group_by_gid","","Searches for a `Group` with the given ID in the system’s group database. Returns it if one is found, otherwise returns `None`.",N,[[["gid_t"]],["option",["group"]]]],[5,"get_group_by_name","","Searches for a `Group` with the given group name in the system’s group database. Returns it if one is found, otherwise returns `None`.",N,[[["str"]],["option",["group"]]]],[5,"get_current_uid","","Returns the user ID for the user running the process.",N,[[],["uid_t"]]],[5,"get_current_username","","Returns the username of the user running the process.",N,[[],["option",["string"]]]],[5,"get_effective_uid","","Returns the user ID for the effective user running the process.",N,[[],["uid_t"]]],[5,"get_effective_username","","Returns the username of the effective user running the process.",N,[[],["option",["string"]]]],[5,"get_current_gid","","Returns the group ID for the user running the process.",N,[[],["gid_t"]]],[5,"get_current_groupname","","Returns the groupname of the user running the process.",N,[[],["option",["string"]]]],[5,"get_effective_gid","","Returns the group ID for the effective user running the process.",N,[[],["gid_t"]]],[5,"get_effective_groupname","","Returns the groupname of the effective user running the process.",N,[[],["option",["string"]]]],[11,"new","","Create a new `User` with the given user ID, name, and primary group ID, with the rest of the fields filled with dummy values.",0,[[["uid_t"],["str"],["gid_t"]],["user"]]],[11,"uid","","Returns this user’s ID.",0,[[["self"]],["uid_t"]]],[11,"name","","Returns this user’s name.",0,[[["self"]],["str"]]],[11,"primary_group_id","","Returns the ID of this user’s primary group.",0,[[["self"]],["gid_t"]]],[11,"new","","Create a new `Group` with the given group ID and name, with the rest of the fields filled in with dummy values.",1,[[["gid_t"],["str"]],["self"]]],[11,"gid","","Returns this group’s ID.",1,[[["self"]],["gid_t"]]],[11,"name","","Returns this group's name.",1,[[["self"]],["str"]]],[11,"new","","Creates a new iterator over every user present on the system.",2,[[],["allusers"]]],[0,"os","","OS-specific extensions to users and groups.",N,N],[0,"unix","users::os","Extensions to users and groups for Unix platforms.",N,N],[3,"UserExtras","users::os::unix","Unix-specific fields for `User`s.",N,N],[12,"home_dir","","The path to the user’s home directory.",3,N],[12,"shell","","The path to the user’s shell.",3,N],[12,"password","","The user's encrypted password.",3,N],[3,"GroupExtras","","Unix-specific fields for `Group`s.",N,N],[12,"members","","Vector of usernames that are members of this group.",4,N],[8,"UserExt","","Unix-specific extensions for `User`s.",N,N],[10,"home_dir","","Returns a path to this user’s home directory.",5,[[["self"]],["path"]]],[10,"with_home_dir","","Sets this user value’s home directory to the given string. Can be used to construct test users, which by default come with a dummy home directory string.",5,[[["self"],["str"]],["self"]]],[10,"shell","","Returns a path to this user’s shell.",5,[[["self"]],["path"]]],[10,"with_shell","","Sets this user’s shell path to the given string. Can be used to construct test users, which by default come with a dummy shell field.",5,[[["self"],["str"]],["self"]]],[10,"password","","Returns the user's encrypted password.",5,[[["self"]],["str"]]],[10,"with_password","","Sets this user's password to the given string. Can be used to construct tests users, which by default come with a dummy password field.",5,[[["self"],["str"]],["self"]]],[8,"GroupExt","","Unix-specific extensions for `Group`s.",N,N],[10,"members","","Returns a slice of the list of users that are in this group as their non-primary group.",6,N],[10,"add_member","","Adds a new member to this group.",6,[[["self"],["str"]],["self"]]],[0,"bsd","users::os","Extensions to users and groups for BSD platforms.",N,N],[3,"UserExtras","users::os::bsd","BSD-specific fields for `User`s.",N,N],[12,"extras","","Fields specific to Unix, rather than just BSD. (This struct is a superset, so it has to have all the other fields in it, too).",7,N],[12,"change","","Password change time.",7,N],[12,"expire","","Password expiry time.",7,N],[8,"UserExt","","BSD-specific accessors for `User`s.",N,N],[10,"password_change_time","","Returns this user's password change timestamp.",8,[[["self"]],["time_t"]]],[10,"password_expire_time","","Returns this user's password expiry timestamp.",8,[[["self"]],["time_t"]]],[6,"UserExtras","users::os","Any extra fields on a `User` specific to the current platform.",N,N],[6,"GroupExtras","","Any extra fields on a `Group` specific to the current platform.",N,N],[0,"cache","users","A cache for users and groups provided by the OS.",N,N],[3,"UsersCache","users::cache","A producer of user and group instances that caches every result.",N,N],[11,"new","","Creates a new empty cache.",9,[[],["userscache"]]],[11,"with_all_users","","Creates a new cache that contains all the users present on the system.",9,[[],["userscache"]]],[0,"mock","users","Mockable users and groups.",N,N],[6,"uid_t","users::mock","",N,N],[6,"gid_t","","",N,N],[3,"User","","Information about a particular user.",N,N],[12,"name_arc","","This user’s name, as an owned `String` possibly shared with a cache. Prefer using the `name()` accessor to using this field, if possible.",0,N],[3,"Group","","Information about a particular group.",N,N],[12,"name_arc","","This group’s name, as an owned `String` possibly shared with a cache. Prefer using the `name()` accessor to using this field, if possible.",1,N],[3,"MockUsers","","A mocking users object that you can add your own users and groups to.",N,N],[8,"Users","","Trait for producers of users.",N,N],[10,"get_user_by_uid","","Returns a User if one exists for the given user ID; otherwise, returns None.",10,[[["self"],["uid_t"]],["option",["arc"]]]],[10,"get_user_by_name","","Returns a User if one exists for the given username; otherwise, returns None.",10,[[["self"],["str"]],["option",["arc"]]]],[10,"get_current_uid","","Returns the user ID for the user running the process.",10,[[["self"]],["uid_t"]]],[10,"get_current_username","","Returns the username of the user running the process.",10,[[["self"]],["option",["arc"]]]],[10,"get_effective_uid","","Returns the effective user id.",10,[[["self"]],["uid_t"]]],[10,"get_effective_username","","Returns the effective username.",10,[[["self"]],["option",["arc"]]]],[8,"Groups","","Trait for producers of groups.",N,N],[10,"get_group_by_gid","","Returns a Group object if one exists for the given group ID; otherwise, returns None.",11,[[["self"],["gid_t"]],["option",["arc"]]]],[10,"get_group_by_name","","Returns a Group object if one exists for the given groupname; otherwise, returns None.",11,[[["self"],["str"]],["option",["arc"]]]],[10,"get_current_gid","","Returns the group ID for the user running the process.",11,[[["self"]],["gid_t"]]],[10,"get_current_groupname","","Returns the group name of the user running the process.",11,[[["self"]],["option",["arc"]]]],[10,"get_effective_gid","","Returns the effective group id.",11,[[["self"]],["gid_t"]]],[10,"get_effective_groupname","","Returns the effective group name.",11,[[["self"]],["option",["arc"]]]],[11,"with_current_uid","","Create a new, empty mock users object.",12,[[["uid_t"]],["mockusers"]]],[11,"add_user","","Add a user to the users table.",12,[[["self"],["user"]],["option",["arc"]]]],[11,"add_group","","Add a group to the groups table.",12,[[["self"],["group"]],["option",["arc"]]]],[0,"switch","users","Functions for switching the running process’s user or group.",N,N],[3,"SwitchUserGuard","users::switch","Guard returned from a `switch_user_group` call.",N,N],[5,"set_current_uid","","Sets the current user for the running process to the one with the given user ID. Uses `setuid` internally.",N,[[["uid_t"]],["ioresult"]]],[5,"set_current_gid","","Sets the current group for the running process to the one with the given group ID. Uses `setgid` internally.",N,[[["gid_t"]],["ioresult"]]],[5,"set_effective_uid","","Sets the effective user for the running process to the one with the given user ID. Uses `seteuid` internally.",N,[[["uid_t"]],["ioresult"]]],[5,"set_effective_gid","","Sets the effective group for the running process to the one with the given group ID. Uses `setegid` internally.",N,[[["gid_t"]],["ioresult"]]],[5,"set_both_uid","","Sets both the current user and the effective user for the running process to the ones with the given user IDs. Uses `setreuid` internally.",N,[[["uid_t"],["uid_t"]],["ioresult"]]],[5,"set_both_gid","","Sets both the current group and the effective group for the running process to the ones with the given group IDs. Uses `setregid` internally.",N,[[["gid_t"],["gid_t"]],["ioresult"]]],[5,"switch_user_group","","Sets the effective user and the effective group for the current scope.",N,[[["uid_t"],["gid_t"]],["ioresult",["switchuserguard"]]]],[8,"Users","users","Trait for producers of users.",N,N],[10,"get_user_by_uid","","Returns a User if one exists for the given user ID; otherwise, returns None.",10,[[["self"],["uid_t"]],["option",["arc"]]]],[10,"get_user_by_name","","Returns a User if one exists for the given username; otherwise, returns None.",10,[[["self"],["str"]],["option",["arc"]]]],[10,"get_current_uid","","Returns the user ID for the user running the process.",10,[[["self"]],["uid_t"]]],[10,"get_current_username","","Returns the username of the user running the process.",10,[[["self"]],["option",["arc"]]]],[10,"get_effective_uid","","Returns the effective user id.",10,[[["self"]],["uid_t"]]],[10,"get_effective_username","","Returns the effective username.",10,[[["self"]],["option",["arc"]]]],[8,"Groups","","Trait for producers of groups.",N,N],[10,"get_group_by_gid","","Returns a Group object if one exists for the given group ID; otherwise, returns None.",11,[[["self"],["gid_t"]],["option",["arc"]]]],[10,"get_group_by_name","","Returns a Group object if one exists for the given groupname; otherwise, returns None.",11,[[["self"],["str"]],["option",["arc"]]]],[10,"get_current_gid","","Returns the group ID for the user running the process.",11,[[["self"]],["gid_t"]]],[10,"get_current_groupname","","Returns the group name of the user running the process.",11,[[["self"]],["option",["arc"]]]],[10,"get_effective_gid","","Returns the effective group id.",11,[[["self"]],["gid_t"]]],[10,"get_effective_groupname","","Returns the effective group name.",11,[[["self"]],["option",["arc"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"into","users::os::unix","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"into","users::os::bsd","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"into","users::cache","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"into","users::mock","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"into","users::switch","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"home_dir","users","",0,[[["self"]],["path"]]],[11,"with_home_dir","","",0,[[["self"],["str"]],["user"]]],[11,"shell","","",0,[[["self"]],["path"]]],[11,"with_shell","","",0,[[["self"],["str"]],["user"]]],[11,"password","","",0,[[["self"]],["str"]]],[11,"with_password","","",0,[[["self"],["str"]],["user"]]],[11,"members","","",1,N],[11,"add_member","","",1,[[["self"],["str"]],["group"]]],[11,"password_change_time","","",0,[[["self"]],["time_t"]]],[11,"password_expire_time","","",0,[[["self"]],["time_t"]]],[11,"get_user_by_uid","users::cache","",9,[[["self"],["uid_t"]],["option",["arc"]]]],[11,"get_user_by_name","","",9,[[["self"],["str"]],["option",["arc"]]]],[11,"get_current_uid","","",9,[[["self"]],["uid_t"]]],[11,"get_current_username","","",9,[[["self"]],["option",["arc"]]]],[11,"get_effective_uid","","",9,[[["self"]],["uid_t"]]],[11,"get_effective_username","","",9,[[["self"]],["option",["arc"]]]],[11,"get_user_by_uid","users::mock","",12,[[["self"],["uid_t"]],["option",["arc"]]]],[11,"get_user_by_name","","",12,[[["self"],["str"]],["option",["arc"]]]],[11,"get_current_uid","","",12,[[["self"]],["uid_t"]]],[11,"get_current_username","","",12,[[["self"]],["option",["arc"]]]],[11,"get_effective_uid","","",12,[[["self"]],["uid_t"]]],[11,"get_effective_username","","",12,[[["self"]],["option",["arc"]]]],[11,"get_group_by_gid","users::cache","",9,[[["self"],["gid_t"]],["option",["arc"]]]],[11,"get_group_by_name","","",9,[[["self"],["str"]],["option",["arc"]]]],[11,"get_current_gid","","",9,[[["self"]],["gid_t"]]],[11,"get_current_groupname","","",9,[[["self"]],["option",["arc"]]]],[11,"get_effective_gid","","",9,[[["self"]],["gid_t"]]],[11,"get_effective_groupname","","",9,[[["self"]],["option",["arc"]]]],[11,"get_group_by_gid","users::mock","",12,[[["self"],["gid_t"]],["option",["arc"]]]],[11,"get_group_by_name","","",12,[[["self"],["str"]],["option",["arc"]]]],[11,"get_current_gid","","",12,[[["self"]],["uid_t"]]],[11,"get_current_groupname","","",12,[[["self"]],["option",["arc"]]]],[11,"get_effective_gid","","",12,[[["self"]],["uid_t"]]],[11,"get_effective_groupname","","",12,[[["self"]],["option",["arc"]]]],[11,"drop","users","",2,[[["self"]]]],[11,"drop","users::switch","",13,[[["self"]]]],[11,"default","users::os::unix","",3,[[],["userextras"]]],[11,"default","","",4,[[],["groupextras"]]],[11,"default","users::os::bsd","",7,[[],["userextras"]]],[11,"default","users::cache","",9,[[],["userscache"]]],[11,"next","users","",2,[[["self"]],["option",["user"]]]],[11,"clone","","",0,[[["self"]],["user"]]],[11,"clone","","",1,[[["self"]],["group"]]],[11,"clone","users::os::unix","",3,[[["self"]],["userextras"]]],[11,"clone","","",4,[[["self"]],["groupextras"]]],[11,"clone","users::os::bsd","",7,[[["self"]],["userextras"]]],[11,"fmt","users","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","users::os::unix","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","users::os::bsd","",7,[[["self"],["formatter"]],["result"]]],[11,"from_passwd","users::os::unix","Extract the OS-specific fields from the C `passwd` struct that we just read.",3,[[["c_passwd"]],["userextras"]]],[11,"from_struct","","Extract the OS-specific fields from the C `group` struct that we just read.",4,[[["c_group"]],["groupextras"]]],[11,"from_passwd","users::os::bsd","Extract the OS-specific fields from the C `passwd` struct that we just read.",7,[[["c_passwd"]],["userextras"]]]],"paths":[[3,"User"],[3,"Group"],[3,"AllUsers"],[3,"UserExtras"],[3,"GroupExtras"],[8,"UserExt"],[8,"GroupExt"],[3,"UserExtras"],[8,"UserExt"],[3,"UsersCache"],[8,"Users"],[8,"Groups"],[3,"MockUsers"],[3,"SwitchUserGuard"]]};
searchIndex["void"]={"doc":"Void","items":[[4,"Void","void","The empty type for cases which can't occur.",N,N],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",N,N],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",N,N],[10,"void_unwrap","","Get the value out of a wrapper.",0,[[["self"]],["t"]]],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",N,N],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,[[["self"]],["e"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"partial_cmp","","",2,[[["self"],["t"]],["option",["ordering"]]]],[11,"eq","","",2,[[["self"],["t"]],["bool"]]],[11,"clone","","",2,[[["self"]],["void"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],["option",["error"]]]]],"paths":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
initSearch(searchIndex);
